{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/css/noscript.styl","path":"css/noscript.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/logo-algolia-nebula-blue-full.svg","path":"images/logo-algolia-nebula-blue-full.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/bookmark.js","path":"js/bookmark.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/comments-buttons.js","path":"js/comments-buttons.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/comments.js","path":"js/comments.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/config.js","path":"js/config.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/pjax.js","path":"js/pjax.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/schedule.js","path":"js/schedule.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/fancybox.js","path":"js/third-party/fancybox.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/pace.js","path":"js/third-party/pace.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/quicklink.js","path":"js/third-party/quicklink.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/rating.js","path":"js/third-party/rating.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/baidu-analytics.js","path":"js/third-party/analytics/baidu-analytics.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/google-analytics.js","path":"js/third-party/analytics/google-analytics.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/growingio.js","path":"js/third-party/analytics/growingio.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/chatra.js","path":"js/third-party/chat/chatra.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/gitter.js","path":"js/third-party/chat/gitter.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/tidio.js","path":"js/third-party/chat/tidio.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/changyan.js","path":"js/third-party/comments/changyan.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqus.js","path":"js/third-party/comments/disqus.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqusjs.js","path":"js/third-party/comments/disqusjs.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/gitalk.js","path":"js/third-party/comments/gitalk.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/isso.js","path":"js/third-party/comments/isso.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/livere.js","path":"js/third-party/comments/livere.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/utterances.js","path":"js/third-party/comments/utterances.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/katex.js","path":"js/third-party/math/katex.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/mathjax.js","path":"js/third-party/math/mathjax.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/algolia-search.js","path":"js/third-party/search/algolia-search.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/local-search.js","path":"js/third-party/search/local-search.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/firestore.js","path":"js/third-party/statistics/firestore.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/lean-analytics.js","path":"js/third-party/statistics/lean-analytics.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/mermaid.js","path":"js/third-party/tags/mermaid.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/pdf.js","path":"js/third-party/tags/pdf.js","modified":0,"renderable":1},{"_id":"source/images/avatar.jpeg","path":"images/avatar.jpeg","modified":0,"renderable":0}],"Cache":[{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1637565721000},{"_id":"themes/landscape/.npmignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1637565721000},{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1637565721000},{"_id":"themes/landscape/_config.yml","hash":"79ac6b9ed6a4de5a21ea53fc3f5a3de92e2475ff","modified":1637565721000},{"_id":"themes/landscape/README.md","hash":"37fae88639ef60d63bd0de22314d7cc4c5d94b07","modified":1637565721000},{"_id":"themes/landscape/package.json","hash":"544f21a0b2c7034998b36ae94dba6e3e0f39f228","modified":1637565721000},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1637565721000},{"_id":"themes/landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1637565721000},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1637565721000},{"_id":"themes/landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1637565721000},{"_id":"themes/landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1637565721000},{"_id":"themes/landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1637565721000},{"_id":"themes/landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1637565721000},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1637565721000},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1637565721000},{"_id":"themes/landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1637565721000},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1637565721000},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1637565721000},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1637565721000},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1637565721000},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1637565721000},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1637565721000},{"_id":"themes/landscape/layout/layout.ejs","hash":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":1637565721000},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1637565721000},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1637565721000},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1637565721000},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1637565721000},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"d0d753d39038284d52b10e5075979cc97db9cd20","modified":1637565721000},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1637565721000},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"950ddd91db8718153b329b96dc14439ab8463ba5","modified":1637565721000},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"c4c835615d96a950d51fa2c3b5d64d0596534fed","modified":1637565721000},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"93518893cf91287e797ebac543c560e2a63b8d0e","modified":1637565721000},{"_id":"themes/landscape/layout/_partial/gauges-analytics.ejs","hash":"aad6312ac197d6c5aaf2104ac863d7eba46b772a","modified":1637565721000},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1637565721000},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"5abf77aec957d9445fc71a8310252f0013c84578","modified":1637565721000},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"7e749050be126eadbc42decfbea75124ae430413","modified":1637565721000},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1637565721000},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1637565721000},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1637565721000},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1637565721000},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1637565721000},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1637565721000},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1637565721000},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1637565721000},{"_id":"themes/landscape/source/css/_variables.styl","hash":"628e307579ea46b5928424313993f17b8d729e92","modified":1637565721000},{"_id":"themes/landscape/source/css/style.styl","hash":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":1637565721000},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1637565721000},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1637565721000},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1637565721000},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1637565721000},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1637565721000},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1637565721000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1637565721000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1637565721000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1637565721000},{"_id":"themes/landscape/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1637565721000},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1637565721000},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1637565721000},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1637565721000},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1637565721000},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1637565721000},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1637565721000},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1637565721000},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":1637565721000},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1637565721000},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1637565721000},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1637565721000},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":1637565721000},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1637565721000},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1637565721000},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1637565721000},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1637565721000},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1637565721000},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1637565721000},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1637565721000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1637565721000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1637565721000},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1637565721000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1637565721000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1637565721000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1637565721000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1637565721000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1637565721000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1637565721000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1637565721000},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1637565721000},{"_id":"public/2021/11/22/hello-world/index.html","hash":"e641f260d44520c825194e891b0889c029ed4922","modified":1637566614373},{"_id":"public/archives/index.html","hash":"61a5ecd601321e26d2af84e1bbfc8ce0b85080d2","modified":1637631830675},{"_id":"public/archives/2021/index.html","hash":"5532c93031a67cc55e3261031cd484efa7ca5c72","modified":1637631830675},{"_id":"public/archives/2021/11/index.html","hash":"e4b2c93ea6d174cc62d782d34bb249e8be8981a4","modified":1637631830675},{"_id":"public/index.html","hash":"f660b6151bb18ba529add4680c2a355c8d783308","modified":1637633839970},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1637566614373},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1637566614373},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1637566614373},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1637566614373},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1637566614373},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1637566614373},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1637566614373},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1637566614373},{"_id":"public/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1637566614373},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1637566614373},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1637566614373},{"_id":"public/css/style.css","hash":"5f8dadd37d0052c557061018fe6f568f64fced9b","modified":1637566614373},{"_id":"public/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1637566614373},{"_id":"public/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1637566614373},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1637566614373},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1637566614373},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1637566614373},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1637566614373},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1637566614373},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1637566614373},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1637566614373},{"_id":"public/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1637566614373},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1637566614373},{"_id":"source/_posts/ELK_FileBeats.md","hash":"0a214aed70827346440b22bfb39e93d10a3b3bc0","modified":1637632636000},{"_id":"source/_posts/MySql-Document.md","hash":"4122e3e61a51d893f5afb7b72f979e50c13335c4","modified":1637633725000},{"_id":"source/_posts/OracleJDBC.md","hash":"6079a9039741c9bfc0c3888829eb3990d010aa2e","modified":1637633207000},{"_id":"source/_posts/azkaban简单搭建.md","hash":"992a9a86d627a5a7c157e86466f8163bdd0adf22","modified":1637632584000},{"_id":"source/_posts/jenkins简单搭建.md","hash":"e5fc40ef2b6aa031f36f38f7594f210e219fe232","modified":1637632963000},{"_id":"source/_posts/linux日常维护命令.md","hash":"0e157853132c1bae31b954b24e70e22c9ee7d7d7","modified":1637632963000},{"_id":"source/_posts/Python数据爬虫实践-爬取历年东西部周最佳对比.md","hash":"dc3a3a0e2ff161ba20e2cb9d50f7473438230fbd","modified":1637633207000},{"_id":"source/_posts/logback日志配置模板.md","hash":"6df09fab7bbb26f7ea4966168958c1c6e501a2a0","modified":1637633729000},{"_id":"source/_posts/官方文档解释MySQL最左匹配(最左前缀)原则.md","hash":"4c7ee62aa3a1cb7efdfb27d31157111de541560c","modified":1637633513000},{"_id":"source/_posts/ELK日常维护相关.md","hash":"452f43ef3f695009994c1effdd37c2d9103d1a30","modified":1637632817000},{"_id":"source/_posts/搭建新项目的框架.md","hash":"08e6c191a70c1850a4c6a16a465b8f936a6c4f2a","modified":1637305532000},{"_id":"source/_posts/hexo使用技巧.md","hash":"656a063e1d459529468499b78f63e04570e068b9","modified":1637632564000},{"_id":"source/_posts/新闻翻译-1.md","hash":"2f16da80d4d4f480709b8e7a5615c54fd004ce69","modified":1637633532000},{"_id":"source/_posts/绩效统计.md","hash":"5eca68915a35f415441c74153a7e5216b70a414c","modified":1637305532000},{"_id":"source/_posts/记一次用代码分辨坑爹保险产品的经历.md","hash":"1f4a7727df8a9ce950b022be33722a57001e2538","modified":1637631826000},{"_id":"source/_posts/利用hexo和github搭建个人博客.md","hash":"2865820ee98f2457d5339210516614c8c5f10c60","modified":1637633513000},{"_id":"source/_posts/解决Dubbo无法处理自定义异常的问题.md","hash":"2d14b9aad29081a3bd66dc30b65c0315247a1f8d","modified":1637633607000},{"_id":"source/_posts/ELK_FileBeats/10.png","hash":"953a41c20cfb9f55fb6844369f6c6741d1583f0c","modified":1637305532000},{"_id":"source/_posts/ELK_FileBeats/1.png","hash":"6691b221f5804cc57c05dc6f6d31557ca964d168","modified":1637305532000},{"_id":"source/_posts/ELK_FileBeats/2.png","hash":"92d67a3e43214686c353c60b843c02ad499312af","modified":1637305532000},{"_id":"source/_posts/ELK_FileBeats/11.png","hash":"acdfc638d53fff0d5294eb8de5485c70476d8556","modified":1637305532000},{"_id":"source/_posts/ELK_FileBeats/3.png","hash":"f42fbd3e2e45e1901b663c2471aaf26fb1a130b1","modified":1637305532000},{"_id":"source/_posts/ELK_FileBeats/4.png","hash":"f499b0151b134ffba8c3b35a575d3b5b75a7736a","modified":1637305532000},{"_id":"source/_posts/ELK_FileBeats/5.png","hash":"1806ce631496ce65e064b491fa55002c42c37ff3","modified":1637305532000},{"_id":"source/_posts/ELK_FileBeats/6.png","hash":"03e319daaba930df20d24518b07d60d6741bcd8e","modified":1637305532000},{"_id":"source/_posts/ELK_FileBeats/7.png","hash":"7162a104c3221f34a37db0d0b46249fbd7b4d4db","modified":1637305532000},{"_id":"source/_posts/ELK_FileBeats/8.png","hash":"1437585bf63705a501807940de6863c4ed5686fd","modified":1637305532000},{"_id":"source/_posts/ELK_FileBeats/9.png","hash":"205cc036f604167e5e4a8965661cd9192ace8de1","modified":1637305532000},{"_id":"source/_posts/Python数据爬虫实践-爬取历年东西部周最佳对比/1.png","hash":"b2709a0dbaedb54e05534b1fb246372b9aa7dd6c","modified":1637305532000},{"_id":"source/_posts/Python数据爬虫实践-爬取历年东西部周最佳对比/2.png","hash":"82a294dedf18d33258af0886fd6aa2aaa56dcd42","modified":1637305532000},{"_id":"source/_posts/Python数据爬虫实践-爬取历年东西部周最佳对比/4.png","hash":"88e04483420f1b5ae7cab61b8f3caedeaf0ac5ee","modified":1637305532000},{"_id":"source/_posts/Python数据爬虫实践-爬取历年东西部周最佳对比/5.png","hash":"14d2988569f484cec58cea21298e5e4665e3ad0e","modified":1637305532000},{"_id":"source/_posts/Python数据爬虫实践-爬取历年东西部周最佳对比/8.png","hash":"26546a053c8a49fea1e9893f9a72ba7a2ebb4abf","modified":1637305532000},{"_id":"source/_posts/OracleJDBC/1.png","hash":"9659bff5e1a380f69417d7a49128257d786715be","modified":1637305532000},{"_id":"source/_posts/OracleJDBC/2.png","hash":"85c4a86fa57b391d929c00825ec56cfd2b76311e","modified":1637305532000},{"_id":"source/_posts/OracleJDBC/3.png","hash":"858d396a0800687ac917f1e91d7ada4023a6f43b","modified":1637305532000},{"_id":"source/_posts/OracleJDBC/4.png","hash":"ef7295fd4d9fde43c694f7cc9fa385f3cc1eb69c","modified":1637305532000},{"_id":"source/_posts/azkaban简单搭建/1.png","hash":"0c69fea1bcf2569cf8d45433fc80f2b460df592b","modified":1637305603000},{"_id":"source/_posts/ELK日常维护相关/1.png","hash":"fd6ce814339338d7dc9b05f0586ba41bae3948a7","modified":1637305532000},{"_id":"source/_posts/azkaban简单搭建/2.png","hash":"48628b399b48a52d5cb951ab53b35273452d49e8","modified":1637305603000},{"_id":"source/_posts/ELK日常维护相关/2.png","hash":"2d0e1de58b5b7c81918aca59c3a4b7d59485422c","modified":1637305532000},{"_id":"source/_posts/hexo使用技巧/3.png","hash":"270b27f40649917d057bb0e59c8ca739b1a3e1fd","modified":1637305532000},{"_id":"source/_posts/hexo使用技巧/4.png","hash":"c90c562815bd09bbc9ddb3c62a172fdab522b847","modified":1637305532000},{"_id":"source/_posts/hexo使用技巧/5.png","hash":"26356566412db3ec03a876c36b504a69aa2e93fe","modified":1637305532000},{"_id":"source/_posts/hexo使用技巧/7.png","hash":"5f01a0def272cbd01096dc16ad07c35a7452845e","modified":1637305532000},{"_id":"source/_posts/hexo使用技巧/8.png","hash":"e3ee3ba3af2738147ce6cd2f54fbd589ad90a2d2","modified":1637305532000},{"_id":"source/_posts/hexo使用技巧/9.png","hash":"cebd81bb85d77b9a9171549409ab1ee390588236","modified":1637305532000},{"_id":"source/_posts/jenkins简单搭建/1.png","hash":"f2050a0f5ec45d0274b3b084116bf4297bdfd7b9","modified":1637305603000},{"_id":"source/_posts/利用hexo和github搭建个人博客/1.png","hash":"0133de0656e67b679760006f46448c9837697956","modified":1637305532000},{"_id":"source/_posts/利用hexo和github搭建个人博客/4.png","hash":"65daa20bc2074699de6b134e5c8b77303bcd748a","modified":1637305532000},{"_id":"source/_posts/利用hexo和github搭建个人博客/2.png","hash":"53b39d19ca94050b98856ed12e43449801ab75c6","modified":1637305532000},{"_id":"source/_posts/搭建框架中遇到的问题/1.png","hash":"9659bff5e1a380f69417d7a49128257d786715be","modified":1637305532000},{"_id":"source/_posts/搭建框架中遇到的问题/2.png","hash":"85c4a86fa57b391d929c00825ec56cfd2b76311e","modified":1637305532000},{"_id":"source/_posts/搭建框架中遇到的问题/3.png","hash":"858d396a0800687ac917f1e91d7ada4023a6f43b","modified":1637305532000},{"_id":"source/_posts/搭建框架中遇到的问题/4.png","hash":"ef7295fd4d9fde43c694f7cc9fa385f3cc1eb69c","modified":1637305532000},{"_id":"source/_posts/Python数据爬虫实践-爬取历年东西部周最佳对比/3.png","hash":"9404bd8271cb97fbe33b2e1d141eb10d541c3210","modified":1637305532000},{"_id":"source/_posts/Python数据爬虫实践-爬取历年东西部周最佳对比/6.png","hash":"a280800a6b91f35d77c0186db8c9148968ca0922","modified":1637305532000},{"_id":"source/_posts/ELK日常维护相关/3.png","hash":"a7c196449555c806a398f0f79d989b1220bf1b70","modified":1637305532000},{"_id":"source/_posts/hexo使用技巧/6.png","hash":"daa3fd44aec333c799774676d4d1fe17b9254a8a","modified":1637305532000},{"_id":"source/_posts/利用hexo和github搭建个人博客/3.png","hash":"fe767683bb0e68678e197cd021773f68ba0f3c9a","modified":1637305532000},{"_id":"source/_posts/jenkins简单搭建/2.png","hash":"989790480aa6cd1cd0a03a1801fa2b427645f966","modified":1637305603000},{"_id":"source/_posts/Python数据爬虫实践-爬取历年东西部周最佳对比/11.png","hash":"a02715d3b38d6a8de59d4fa78a5aedfbec53f0b7","modified":1637305532000},{"_id":"source/_posts/hexo使用技巧/2.png","hash":"dc4c49df9458ae63bf695e9797beef73bdb3ae87","modified":1637305532000},{"_id":"source/_posts/Python数据爬虫实践-爬取历年东西部周最佳对比/9.png","hash":"391a949171d93a038d07befc5a3b819669669ae9","modified":1637305532000},{"_id":"source/_posts/Python数据爬虫实践-爬取历年东西部周最佳对比/7.png","hash":"2453862a15297498dbca9d8cf3d01bdcecd1528f","modified":1637305532000},{"_id":"source/_posts/Python数据爬虫实践-爬取历年东西部周最佳对比/10.png","hash":"10b47285ca2b996119f1f8f42837b880d345994b","modified":1637305532000},{"_id":"themes/NexT/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1637305532000},{"_id":"themes/NexT/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1637305532000},{"_id":"source/_posts/利用hexo和github搭建个人博客/5.png","hash":"8c7ed210d33a08a2d4705996a0a6a42748ac98ff","modified":1637305532000},{"_id":"themes/NexT/.editorconfig","hash":"8570735a8d8d034a3a175afd1dd40b39140b3e6a","modified":1637305532000},{"_id":"themes/NexT/.gitignore","hash":"7b68ca7a46104cf9aa84ec0541a4856ab1836eca","modified":1637305532000},{"_id":"themes/NexT/.all-contributorsrc","hash":"47b6c90dcd189b2bc9474d243b4cee80a63fef4f","modified":1637305532000},{"_id":"themes/NexT/.travis.yml","hash":"3d1dc928c4a97933e64379cfde749dedf62f252c","modified":1637305532000},{"_id":"themes/NexT/.stylintrc","hash":"2cf4d637b56d8eb423f59656a11f6403aa90f550","modified":1637305532000},{"_id":"themes/NexT/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1637305532000},{"_id":"themes/NexT/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1637305532000},{"_id":"themes/NexT/README.md","hash":"e0fcd99c0a6db47fe5739df32d6ab39c44c65196","modified":1637305532000},{"_id":"themes/NexT/package.json","hash":"f8355f5b093d7b00c330ef3b6ddd982fd81333de","modified":1637305532000},{"_id":"themes/NexT/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1637305532000},{"_id":"themes/NexT/crowdin.yml","hash":"a0512cdc7a9223750ee7691bf24ea386a7278d30","modified":1637305532000},{"_id":"themes/NexT/gulpfile.js","hash":"94e80ca87826b90744618b00d08bc7e5eefbaef4","modified":1637305532000},{"_id":"themes/NexT/.github/CONTRIBUTING.md","hash":"c62433b1746823d0f09b671d0b12a42d2300e768","modified":1637305532000},{"_id":"themes/NexT/.github/CODE_OF_CONDUCT.md","hash":"c149f003d03501565e7688915cd8f2e99fbf8f42","modified":1637305532000},{"_id":"themes/NexT/.github/config.yml","hash":"8a5cbf5aa9529390fe0a782758aca9c3a02f9dcf","modified":1637305532000},{"_id":"themes/NexT/.github/auto_assign.yml","hash":"cb68a1dca1c4623448c2ca899614a9f21df1b036","modified":1637305532000},{"_id":"themes/NexT/.github/lock.yml","hash":"585d2c471047be320aa62f2b74dad797bf09c530","modified":1637305532000},{"_id":"themes/NexT/.github/mergeable.yml","hash":"0ee56e23bbc71e1e76427d2bd255a9879bd36e22","modified":1637305532000},{"_id":"themes/NexT/.github/release-drafter.yml","hash":"f8a0ee0ad08e1493475dbb67b2957cd6afcafac0","modified":1637305532000},{"_id":"themes/NexT/.github/issue_label_bot.yaml","hash":"b09c85aa449f46bc025317ed196ec33a877f7c23","modified":1637305532000},{"_id":"themes/NexT/.github/stale.yml","hash":"941209526c2f7d916c76163c9e1ac1af9d956679","modified":1637305532000},{"_id":"themes/NexT/.github/eslint-disable-bot.yml","hash":"16541fb7b80f5ab90135db96285badb63c4d7d3e","modified":1637305532000},{"_id":"themes/NexT/.github/support.yml","hash":"d75db6ffa7b4ca3b865a925f9de9aef3fc51925c","modified":1637305532000},{"_id":"themes/NexT/languages/de.yml","hash":"3d8920676d89494d7d1c74d4238680151ea6d9df","modified":1637305532000},{"_id":"themes/NexT/languages/en.yml","hash":"c13eda783f8717c62b7ad9e8a9b724314ae74e1a","modified":1637305532000},{"_id":"themes/NexT/languages/es.yml","hash":"7dc1d7d5ea1078ee3b9bc8e0e8d0f15f52a7a4aa","modified":1637305532000},{"_id":"themes/NexT/languages/fa.yml","hash":"269b5cb70774485d7dbbcf98eec72c9e84e135b2","modified":1637305532000},{"_id":"themes/NexT/.github/PULL_REQUEST_TEMPLATE.md","hash":"2a4ff75ccb91d9001032c08e22489096b850bf4f","modified":1637305532000},{"_id":"themes/NexT/languages/fr.yml","hash":"dfdcfa536c40d06125dff373d042c50e08fcafd8","modified":1637305532000},{"_id":"themes/NexT/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1637305532000},{"_id":"themes/NexT/languages/hu.yml","hash":"e4a5f43fb45acd992def3de3b600aa4df4c95ed7","modified":1637305532000},{"_id":"themes/NexT/languages/id.yml","hash":"5665dece8435964a27b5061d7283f339f84721f0","modified":1637305532000},{"_id":"themes/NexT/languages/it.yml","hash":"311597c620059dbb99474f19b2110a4485ecf70b","modified":1637305532000},{"_id":"themes/NexT/languages/ja.yml","hash":"4f929842b3d6aaed709ea99da679d3910ee184e5","modified":1637305532000},{"_id":"themes/NexT/languages/ko.yml","hash":"5f5194dd0f5a3c8484e7668bce6fbe23340e531a","modified":1637305532000},{"_id":"themes/NexT/languages/nl.yml","hash":"561c77ca68e9d51a5ce8c89d3361fdb033c96bba","modified":1637305532000},{"_id":"themes/NexT/languages/pt-BR.yml","hash":"13b579911e44a8b213e1860f9a50c341be1bf95e","modified":1637305532000},{"_id":"themes/NexT/languages/pt.yml","hash":"af9d9b581dca45ab9789ca41d3492883a911e383","modified":1637305532000},{"_id":"themes/NexT/languages/ru.yml","hash":"b485c57dd7b447406dafd0dcfdfc9356266708c9","modified":1637305532000},{"_id":"themes/NexT/languages/tr.yml","hash":"39caf8a3677fd6dfbd523e73f8482a509e87b603","modified":1637305532000},{"_id":"themes/NexT/languages/uk.yml","hash":"4cbdbb0ed09487c9b435be21ac35f62182f53283","modified":1637305532000},{"_id":"themes/NexT/languages/vi.yml","hash":"3c6bb816ee7278afcddac06998c9ebe47ee19aef","modified":1637305532000},{"_id":"themes/NexT/languages/zh-CN.yml","hash":"e92e1e07a89c9fab27f445f9ec0fa35049fef38c","modified":1637305532000},{"_id":"themes/NexT/languages/zh-HK.yml","hash":"93d10d6e448c519004b09b11fba980b5036c93af","modified":1637305532000},{"_id":"themes/NexT/languages/zh-TW.yml","hash":"ae2aa1c6ec1a5a01a3a3bde17bcc3a82f9a35fa7","modified":1637305532000},{"_id":"themes/NexT/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1637305532000},{"_id":"themes/NexT/docs/AUTHORS.md","hash":"48b68eaad1629795f750fdb0f1a0ce9ee5d60418","modified":1637305532000},{"_id":"themes/NexT/docs/DATA-FILES.md","hash":"a85ae0f3a9655eea9acd3f6209b72eb002f2058d","modified":1637305532000},{"_id":"themes/NexT/docs/ALGOLIA-SEARCH.md","hash":"20f8a3d7db6e797a5a3ed8c84837315cb8e09e5b","modified":1637305532000},{"_id":"themes/NexT/docs/INSTALLATION.md","hash":"5385246ab4756e3e26ec9fe1f6a6759812177cc4","modified":1637305532000},{"_id":"themes/NexT/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"1fb2c852fad03b73882069f1ec0659db2e1f2da0","modified":1637305532000},{"_id":"themes/NexT/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1637305532000},{"_id":"themes/NexT/docs/MATH.md","hash":"aa90364b1ac069b4f8cfdb48b4879311856224e6","modified":1637305532000},{"_id":"themes/NexT/docs/UPDATE-FROM-5.1.X.md","hash":"a07ca23c38f6e4dddd4b74016b30e88cd3796f75","modified":1637305532000},{"_id":"themes/NexT/layout/_layout.swig","hash":"fe827c1a57e4af456a796a104a967f61778cc767","modified":1637305532000},{"_id":"themes/NexT/layout/category.swig","hash":"38433a9de15f019267c9130e243e14343fb9bc3d","modified":1637305532000},{"_id":"themes/NexT/layout/archive.swig","hash":"72b4e0786668bc61c11eafa12da5d75272b93b61","modified":1637305532000},{"_id":"themes/NexT/layout/index.swig","hash":"20e776e8863f662c154bb765aaa0a1a22bf78126","modified":1637305532000},{"_id":"themes/NexT/layout/page.swig","hash":"27c0b961fff9c1afc3671c5678cc9bca76cb51d1","modified":1637305532000},{"_id":"themes/NexT/layout/post.swig","hash":"0c3b34a6832b8e33574edc17095344f9e0bea74f","modified":1637305532000},{"_id":"themes/NexT/layout/tag.swig","hash":"153fb65e710a9643634aea4813431e92c11d09fe","modified":1637305532000},{"_id":"themes/NexT/.github/ISSUE_TEMPLATE/bug-report.md","hash":"c0b9e8a851016da44d9479539dd0b1270fe75571","modified":1637305532000},{"_id":"themes/NexT/.github/ISSUE_TEMPLATE/feature-request.md","hash":"3b27149a4f9ed002ca84483f95ed558470a32b31","modified":1637305532000},{"_id":"themes/NexT/.github/ISSUE_TEMPLATE/custom-issue-template.md","hash":"b28c02cd246f3fe0352b75729c52c5931c8ac84f","modified":1637305532000},{"_id":"themes/NexT/docs/ru/DATA-FILES.md","hash":"67d04e3e29a2675d1a9f87d1ae6ea0769e963ff1","modified":1637305532000},{"_id":"themes/NexT/docs/ru/INSTALLATION.md","hash":"6c5d69e94961c793da156217ecf1179e868d7ba1","modified":1637305532000},{"_id":"themes/NexT/docs/ru/README.md","hash":"3ceab62de4db29e2257dd5a187c7f8731a207f84","modified":1637305532000},{"_id":"themes/NexT/docs/ru/UPDATE-FROM-5.1.X.md","hash":"b1dd18d9b890b21718883ea1832e7e02a773104a","modified":1637305532000},{"_id":"themes/NexT/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"5ad2c2d0a11443a03b3fd912925bc0dcfbcda88c","modified":1637305532000},{"_id":"themes/NexT/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"0dfb458370a0ffbbe37c00f53c15e3aa3e79b125","modified":1637305532000},{"_id":"themes/NexT/docs/zh-CN/CONTRIBUTING.md","hash":"80524da09eb2061a5b6202a34df6cabb6043c120","modified":1637305532000},{"_id":"themes/NexT/docs/zh-CN/DATA-FILES.md","hash":"c46f3f7496fc422207cc5954e10a2bc972b650aa","modified":1637305532000},{"_id":"themes/NexT/docs/zh-CN/INSTALLATION.md","hash":"c13546dd70a99a7d2d409cddf5d59f2f4d4d44a4","modified":1637305532000},{"_id":"themes/NexT/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"8ceaad956a1afedf179b2e0b98a67adee9afec08","modified":1637305532000},{"_id":"themes/NexT/scripts/events/index.js","hash":"a25690d8b03779f7e318108c8eace9baf6d4283a","modified":1637305532000},{"_id":"themes/NexT/scripts/filters/default-injects.js","hash":"834599d2b83f06e90f8cf618cddc106fe900ba5c","modified":1637305532000},{"_id":"themes/NexT/scripts/filters/excerpt.js","hash":"827c3733fa14b018dd1f07e41686c207880e823a","modified":1637305532000},{"_id":"themes/NexT/scripts/filters/exturl.js","hash":"9c32675f64121ffbe454189b8e418b408f79d9c2","modified":1637305532000},{"_id":"themes/NexT/scripts/filters/lazyload.js","hash":"51672320fff6b39f56fe6a2881c611afe4e79b8e","modified":1637305532000},{"_id":"themes/NexT/scripts/filters/minify.js","hash":"19985723b9f677ff775f3b17dcebf314819a76ac","modified":1637305532000},{"_id":"themes/NexT/docs/zh-CN/MATH.md","hash":"a658a72589738e11aefaa3a714b188ffd5aac822","modified":1637305532000},{"_id":"themes/NexT/scripts/helpers/engine.js","hash":"896a581feb9432e58a325ad04d66d6310a12374e","modified":1637305532000},{"_id":"themes/NexT/scripts/helpers/font.js","hash":"53169e2d04f0c21e68beb07c212be0a6c2a9aaea","modified":1637305532000},{"_id":"themes/NexT/scripts/helpers/next-inject.js","hash":"33eb6f38de575b973fed237032c34d878594fdc1","modified":1637305532000},{"_id":"themes/NexT/scripts/helpers/next-url.js","hash":"799a042bbf497a4c7a2981aa2014ff28fa1bb382","modified":1637305532000},{"_id":"themes/NexT/scripts/helpers/next-js.js","hash":"b28a8ed6d033946acbb5b91f6d8b884857410dd9","modified":1637305532000},{"_id":"themes/NexT/scripts/helpers/next-vendors.js","hash":"d512f44195f68b0ff93f3c82afff9161cdf1b7d6","modified":1637305532000},{"_id":"themes/NexT/scripts/tags/button.js","hash":"1d1d25f7e579d92fa563778dd0f163e8eda190da","modified":1637305532000},{"_id":"themes/NexT/scripts/tags/caniuse.js","hash":"20e392b8583ba6ae5037449c2c7e191d3927641b","modified":1637305532000},{"_id":"themes/NexT/scripts/tags/center-quote.js","hash":"f13430d9d1c9773b390787c2f046bb1f12a79878","modified":1637305532000},{"_id":"themes/NexT/scripts/tags/include-raw.js","hash":"60f880c1e11a7df1aee4f2e01d65451fecc0372c","modified":1637305532000},{"_id":"themes/NexT/scripts/tags/group-pictures.js","hash":"8fc05f22b88553bc1d96e0c925799cd97920fc6a","modified":1637305532000},{"_id":"themes/NexT/scripts/tags/mermaid.js","hash":"983c6c4adea86160ecc0ba2204bc312aa338121d","modified":1637305532000},{"_id":"themes/NexT/scripts/tags/label.js","hash":"fc5b267d903facb7a35001792db28b801cccb1f8","modified":1637305532000},{"_id":"themes/NexT/scripts/tags/note.js","hash":"0a02bb4c15aec41f6d5f1271cdb5c65889e265d9","modified":1637305532000},{"_id":"themes/NexT/docs/zh-CN/README.md","hash":"0981aaf68145a05b02cd10c95d38cbaf97622944","modified":1637305532000},{"_id":"themes/NexT/scripts/tags/tabs.js","hash":"00ca6340d4fe0ccdae7525373e4729117775bbfa","modified":1637305532000},{"_id":"themes/NexT/scripts/tags/video.js","hash":"e5ff4c44faee604dd3ea9db6b222828c4750c227","modified":1637305532000},{"_id":"themes/NexT/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"4ee0607ddcfb2fe0e5868aced6d5814d1ada4405","modified":1637305532000},{"_id":"themes/NexT/scripts/tags/pdf.js","hash":"f780cc72bff91d2720626e7af69eed25e9c12a29","modified":1637305532000},{"_id":"themes/NexT/layout/_macro/post-collapse.swig","hash":"43572a13a654aed5b5123c6adda4d5c3f2883cb8","modified":1637305532000},{"_id":"themes/NexT/layout/_macro/post.swig","hash":"05170f7e175e24d6a609024a59dcb1485ec53c80","modified":1637305532000},{"_id":"themes/NexT/layout/_macro/sidebar.swig","hash":"ccef7a8cd704575cf7bfe63c0492fe43592b1a6d","modified":1637305532000},{"_id":"themes/NexT/layout/_partials/comments.swig","hash":"e0f59221b6010bd3e05d34fac915556f51b8a458","modified":1637305532000},{"_id":"themes/NexT/layout/_partials/footer.swig","hash":"9d9a5d6a2f0d4f65fe57c3737c91ecaf276c1f5c","modified":1637305532000},{"_id":"themes/NexT/layout/_partials/pagination.swig","hash":"769a983fe2f77908bfc8590ff37a0d8958b47598","modified":1637305532000},{"_id":"themes/NexT/layout/_partials/post-edit.swig","hash":"4b0c972c44bfa7ab07604280563deb9cc3974657","modified":1637305532000},{"_id":"themes/NexT/layout/_partials/widgets.swig","hash":"58f12810a730ba8e3129c9b0d1a7cce42ac6f2d2","modified":1637305532000},{"_id":"themes/NexT/layout/_scripts/index.swig","hash":"cea942b450bcb0f352da78d76dc6d6f1d23d5029","modified":1637305532000},{"_id":"themes/NexT/layout/_scripts/noscript.swig","hash":"e08feac6f8904d7f2006e350514a2f07eb9fff44","modified":1637305532000},{"_id":"themes/NexT/layout/_scripts/pjax.swig","hash":"105004ddcc7fe9f4fd7ad1007b628ba8c08c1e27","modified":1637305532000},{"_id":"themes/NexT/layout/_scripts/three.swig","hash":"eee4d26b5c0bb7872a21346151c38612a9b76d0b","modified":1637305532000},{"_id":"themes/NexT/layout/_scripts/vendors.swig","hash":"ba6a3285b2914c7ba352911353e9a7175fd0d98a","modified":1637305532000},{"_id":"themes/NexT/layout/_third-party/baidu-push.swig","hash":"8627c8c8b031ecee16c522433b66fa4d6979b8ea","modified":1637305532000},{"_id":"themes/NexT/layout/_third-party/facebook-sdk.swig","hash":"3cf1a1a83ceddef4033a2964150f81b979ced6ff","modified":1637305532000},{"_id":"themes/NexT/layout/_third-party/index.swig","hash":"32e4fe8dd8b3c40a17314569d1a14bde55251074","modified":1637305532000},{"_id":"themes/NexT/layout/_third-party/quicklink.swig","hash":"65f94b115c42d33e6a90b1f8e62075c6d4ac60c1","modified":1637305532000},{"_id":"themes/NexT/layout/_third-party/rating.swig","hash":"da6a9d14ed10203e378c6e2c00a7b5e7afabca58","modified":1637305532000},{"_id":"themes/NexT/layout/_third-party/vkontakte-api.swig","hash":"e0d012bdbae5545d90143030116114c34219bd37","modified":1637305532000},{"_id":"themes/NexT/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1637305532000},{"_id":"themes/NexT/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1637305532000},{"_id":"themes/NexT/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1637305532000},{"_id":"themes/NexT/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1637305532000},{"_id":"themes/NexT/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1637305532000},{"_id":"themes/NexT/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1637305532000},{"_id":"themes/NexT/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1637305532000},{"_id":"themes/NexT/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1637305532000},{"_id":"themes/NexT/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1637305532000},{"_id":"themes/NexT/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1637305532000},{"_id":"themes/NexT/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1637305532000},{"_id":"themes/NexT/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1637305532000},{"_id":"themes/NexT/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1637305532000},{"_id":"themes/NexT/source/css/main.styl","hash":"68c3377b643162aeaae2b60c196486fdb3b509c3","modified":1637305532000},{"_id":"themes/NexT/source/images/shdvgj.jpg","hash":"c6cccf251ec72f38a49d36f280abed9c3fd2f2f4","modified":1637305532000},{"_id":"themes/NexT/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1637305532000},{"_id":"themes/NexT/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1637305532000},{"_id":"themes/NexT/source/js/algolia-search.js","hash":"813afcc30feee11d59f297f2d5a96f98fbbd4743","modified":1637305532000},{"_id":"themes/NexT/source/js/bookmark.js","hash":"60cab6771a57c268da331920edd6d7fcd2713d42","modified":1637305532000},{"_id":"themes/NexT/source/js/local-search.js","hash":"0579159bf994e3726b3ba063e5905f79465fdfb1","modified":1637305532000},{"_id":"themes/NexT/source/js/motion.js","hash":"71e5caff1d87b1b7256f61e6b318bedf495f9e75","modified":1637305532000},{"_id":"themes/NexT/source/js/next-boot.js","hash":"d1892ad3ca2741534ebaac0476902e05031ab255","modified":1637305532000},{"_id":"themes/NexT/scripts/events/lib/config.js","hash":"b710d896fccd34657a70244645470e476a4e069f","modified":1637305532000},{"_id":"themes/NexT/scripts/events/lib/injects-point.js","hash":"6661c1c91c7cbdefc6a5e6a034b443b8811235a1","modified":1637305532000},{"_id":"themes/NexT/scripts/events/lib/injects.js","hash":"2a5f7c7e507bb354ec05a881bc9a1f4f2f28197c","modified":1637305532000},{"_id":"themes/NexT/scripts/filters/comment/changyan.js","hash":"3ac62f5510f22e9d970089bb01f96ba2134ae161","modified":1637305532000},{"_id":"themes/NexT/scripts/filters/comment/common.js","hash":"0803d4f4d3d02c24417c163ad0b27b60fda79250","modified":1637305532000},{"_id":"themes/NexT/scripts/filters/comment/default-config.js","hash":"7f2d93af012c1e14b8596fecbfc7febb43d9b7f5","modified":1637305532000},{"_id":"themes/NexT/scripts/filters/comment/disqus.js","hash":"ccfac51bde0063ab7ef88182f8cbc98c210e78c9","modified":1637305532000},{"_id":"themes/NexT/scripts/filters/comment/disqusjs.js","hash":"178c4618b29a1e06221285146071e72e24c40499","modified":1637305532000},{"_id":"themes/NexT/scripts/filters/comment/facebook-comments-plugin.js","hash":"e3c74b24f3818f2504fd0c7a954adaa6681bb969","modified":1637305532000},{"_id":"themes/NexT/scripts/filters/comment/gitalk.js","hash":"e51dc3072c1ba0ea3008f09ecae8b46242ec6021","modified":1637305532000},{"_id":"themes/NexT/scripts/filters/comment/livere.js","hash":"3c4bdc2a682f9889a532e1cb856bc5caeb4208e1","modified":1637305532000},{"_id":"themes/NexT/scripts/filters/comment/valine.js","hash":"e34d38aee93558b2c68a7fa6203c2e4806405d62","modified":1637305532000},{"_id":"themes/NexT/scripts/filters/comment/vkontakte.js","hash":"031337c2e2157628a15a5f4d96fa6e3fcf2733fe","modified":1637305532000},{"_id":"themes/NexT/source/js/utils.js","hash":"33a76cda8ecad2bea9db13e1f77c6e22fd6452fe","modified":1637305532000},{"_id":"themes/NexT/source/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1637305532000},{"_id":"themes/NexT/layout/_partials/analytics/busuanzi-counter.swig","hash":"d7258d02bcf0dac6c0fd8377c0909ddecb09d1d4","modified":1637305532000},{"_id":"themes/NexT/layout/_partials/analytics/cnzz-analytics.swig","hash":"a17ace37876822327a2f9306a472974442c9005d","modified":1637305532000},{"_id":"themes/NexT/layout/_partials/analytics/firestore.swig","hash":"67e63c25d509f02a6057ee9724f1b6efd647f72f","modified":1637305532000},{"_id":"themes/NexT/layout/_partials/analytics/index.swig","hash":"ac6a3995c1330d2d73300b2427006509d0f8dba5","modified":1637305532000},{"_id":"themes/NexT/layout/_partials/analytics/tencent-analytics.swig","hash":"493a1ef6c8f475d4dd3156a6ab37690dc75695ea","modified":1637305532000},{"_id":"themes/NexT/layout/_partials/analytics/lean-analytics.swig","hash":"fb7729b69ef443db1f3f2755506ee998cfe4b973","modified":1637305532000},{"_id":"themes/NexT/layout/_partials/analytics/tencent-mta.swig","hash":"198813a3f382bda4278fe3759bf0f18a5769bb33","modified":1637305532000},{"_id":"themes/NexT/layout/_partials/head/head-unique.swig","hash":"0edd29b972aceecccb65b3e63d79c01f6639d0c5","modified":1637305532000},{"_id":"themes/NexT/layout/_partials/head/head.swig","hash":"6236a874b93ac1be56fc21df8534a7ae8acffcfc","modified":1637305532000},{"_id":"themes/NexT/layout/_partials/header/brand.swig","hash":"9718d372887f4b0ee952da42d10b2f736d0fc6de","modified":1637305532000},{"_id":"themes/NexT/layout/_partials/header/index.swig","hash":"e0767e09a632264f189570e95ccf70fb1dad9110","modified":1637305532000},{"_id":"themes/NexT/layout/_partials/header/menu-item.swig","hash":"6da15fe72f7b6ebe2c510f5c773f30ea0133fb0a","modified":1637305532000},{"_id":"themes/NexT/layout/_partials/header/menu.swig","hash":"bfd55f4ef59dc5e88a7c45eb709021528fcf2b51","modified":1637305532000},{"_id":"themes/NexT/layout/_partials/header/sub-menu.swig","hash":"02a4706ce7ed6f6d2f660948a74e9e8cd6dfa1fd","modified":1637305532000},{"_id":"themes/NexT/layout/_partials/page/breadcrumb.swig","hash":"c851717497ca64789f2176c9ecd1dedab237b752","modified":1637305532000},{"_id":"themes/NexT/layout/_partials/page/page-header.swig","hash":"d3c25d70f0fd76121e4cacb9f8af4ccbe2a3c74d","modified":1637305532000},{"_id":"themes/NexT/layout/_partials/post/post-copyright.swig","hash":"b68ccb90e2ee42bd98c93fc030a29d38689dd55c","modified":1637305532000},{"_id":"themes/NexT/layout/_partials/post/post-footer.swig","hash":"b654d63d2ed221a8b642223e220392e5172d8f4d","modified":1637305532000},{"_id":"themes/NexT/layout/_partials/post/post-related.swig","hash":"f05225f7d0ada3853c425899b515056b96ca49bf","modified":1637305532000},{"_id":"themes/NexT/layout/_partials/post/post-reward.swig","hash":"90a0869c6cc351d92fc97bf42fdc6e1bfa6bc513","modified":1637305532000},{"_id":"themes/NexT/layout/_partials/post/wechat-subscriber.swig","hash":"2edfaf1579ea58e15cb5583fb7962dfee9af2257","modified":1637305532000},{"_id":"themes/NexT/layout/_partials/search/algolia-search.swig","hash":"7fa01334a0ba84500e920bb9202baa08067d2ee1","modified":1637305532000},{"_id":"themes/NexT/layout/_partials/sidebar/site-overview.swig","hash":"381f6a88d117293d6e0fe53c43ee30fc71caf817","modified":1637305532000},{"_id":"themes/NexT/layout/_partials/search/index.swig","hash":"d6fa9e4432b87004c5678dfe2d4b2c1f4a702b93","modified":1637305532000},{"_id":"themes/NexT/layout/_partials/search/localsearch.swig","hash":"733d6874aa4f50d1071e670a554508a5a0094eb3","modified":1637305532000},{"_id":"themes/NexT/layout/_scripts/pages/schedule.swig","hash":"9e44c795565837ba318fd739e42713de365673fd","modified":1637305532000},{"_id":"themes/NexT/layout/_scripts/schemes/gemini.swig","hash":"ffc8e8836714ea79abeb77b75859634615652877","modified":1637305532000},{"_id":"themes/NexT/layout/_scripts/schemes/mist.swig","hash":"108b157fbd1ac3baaf19ae87234fa8728ab79556","modified":1637305532000},{"_id":"themes/NexT/layout/_scripts/schemes/muse.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1637305532000},{"_id":"themes/NexT/layout/_scripts/schemes/pisces.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1637305532000},{"_id":"themes/NexT/layout/_third-party/analytics/application-insights.swig","hash":"7fd0459d2f1cfe1254f2c2b8087dc094c8cb0e84","modified":1637305532000},{"_id":"themes/NexT/layout/_third-party/analytics/baidu-analytics.swig","hash":"4790058691b7d36cf6d2d6b4e93795a7b8d608ad","modified":1637305532000},{"_id":"themes/NexT/layout/_third-party/analytics/google-analytics.swig","hash":"9f73476ebcf5cd3b7f55525b3f35dc7e9f01e154","modified":1637305532000},{"_id":"themes/NexT/layout/_third-party/analytics/growingio.swig","hash":"42aa3022f7739a552c7a55de316d8c0994b2fdc1","modified":1637305532000},{"_id":"themes/NexT/layout/_third-party/analytics/index.swig","hash":"20fcbed44aede1b908bd17d7a0279b03639068b1","modified":1637305532000},{"_id":"themes/NexT/layout/_third-party/chat/chatra.swig","hash":"fdcf006e1ba2e53eab65e901b6c63159538307ef","modified":1637305532000},{"_id":"themes/NexT/layout/_third-party/chat/index.swig","hash":"5ab4a8b4306c837d2f8c211a9d7fdaed76fa254d","modified":1637305532000},{"_id":"themes/NexT/layout/_third-party/chat/tidio.swig","hash":"cba0e6e0fad08568a9e74ba9a5bee5341cfc04c1","modified":1637305532000},{"_id":"themes/NexT/layout/_third-party/comments/disqus.swig","hash":"86092b31761948486ecb379eb7445f66a158769d","modified":1637305532000},{"_id":"themes/NexT/layout/_third-party/comments/changyan.swig","hash":"1130b8bd60f3b84397974486e6586d7f0afaf836","modified":1637305532000},{"_id":"themes/NexT/layout/_third-party/comments/disqusjs.swig","hash":"df8413cba22deffca94cf4edd6d9f8d35d2bb58f","modified":1637305532000},{"_id":"themes/NexT/layout/_third-party/comments/gitalk.swig","hash":"261c4f1ab42f692279a310943b807ed34516df7c","modified":1637305532000},{"_id":"themes/NexT/layout/_third-party/comments/livere.swig","hash":"6f95bc4d7ffaddc3c0df0ef3eeeaac58ff83f560","modified":1637305532000},{"_id":"themes/NexT/layout/_third-party/comments/valine.swig","hash":"ab937195168a0e8a911bf5730307f680e6d521e9","modified":1637305532000},{"_id":"themes/NexT/layout/_third-party/math/index.swig","hash":"bc23c9eb9c06b0b377695f44373c14c5cde1d0e3","modified":1637305532000},{"_id":"themes/NexT/layout/_third-party/math/katex.swig","hash":"b9d7a99534e9c2608765b958eae3b5c50f5e4889","modified":1637305532000},{"_id":"themes/NexT/layout/_third-party/math/mathjax.swig","hash":"dff6835d0b03ecc2db6919ca27cfb7b63949e6a8","modified":1637305532000},{"_id":"themes/NexT/layout/_third-party/search/algolia-search.swig","hash":"ad7a22ee0f183481c7843ecd881b9f9e8e037e31","modified":1637305532000},{"_id":"themes/NexT/layout/_third-party/search/index.swig","hash":"b2fd17688f0433571b37704bc8df798e175e7811","modified":1637305532000},{"_id":"themes/NexT/layout/_third-party/search/localsearch.swig","hash":"767b6c714c22588bcd26ba70b0fc19b6810cbacd","modified":1637305532000},{"_id":"themes/NexT/layout/_third-party/search/swiftype.swig","hash":"ba0dbc06b9d244073a1c681ff7a722dcbf920b51","modified":1637305532000},{"_id":"themes/NexT/layout/_third-party/tags/index.swig","hash":"83d0a8f71878c6b96a04ba08567b9064de6cce83","modified":1637305532000},{"_id":"themes/NexT/layout/_third-party/tags/mermaid.swig","hash":"a54308f934c33b12f6bf28e4ce90e517f38cab57","modified":1637305532000},{"_id":"themes/NexT/layout/_third-party/tags/pdf.swig","hash":"7597800b6ce2f545baea797d95d1b8c7cf624299","modified":1637305532000},{"_id":"themes/NexT/source/css/_mixins/base.styl","hash":"0a25f3df1b5c39794365efde387647da81da884a","modified":1637305532000},{"_id":"themes/NexT/source/css/_mixins/Gemini.styl","hash":"2315dd8a7a2c7aabd29efa6193df08e805cb15fc","modified":1637305532000},{"_id":"themes/NexT/source/css/_mixins/Pisces.styl","hash":"644c1f0b02be9bf59955ebdf496136b3fa4b660b","modified":1637305532000},{"_id":"themes/NexT/source/css/_variables/Gemini.styl","hash":"52550138127ae9ebbe049bcdacd94d767c003855","modified":1637305532000},{"_id":"themes/NexT/source/css/_variables/Mist.styl","hash":"b9d7058db61df7bbd2b58779efe45621a06ffc18","modified":1637305532000},{"_id":"themes/NexT/source/css/_variables/Muse.styl","hash":"c261d685c5ed0df34718d94bb2ba977c0ed443e6","modified":1637305532000},{"_id":"themes/NexT/source/css/_variables/Pisces.styl","hash":"50bc57e66331c0f15a4527010b4ca3316ac92403","modified":1637305532000},{"_id":"themes/NexT/source/js/schemes/muse.js","hash":"f7183e7770b591c961a74ce8c0b702fc1b0886d5","modified":1637305532000},{"_id":"themes/NexT/source/css/_variables/base.styl","hash":"f99be76f2c72368cc5fbdafc02b676513de17e1e","modified":1637305532000},{"_id":"themes/NexT/source/js/schemes/pisces.js","hash":"1e47ffdda23f7f645a2a883a90e2e9d9ddbf9a46","modified":1637305532000},{"_id":"themes/NexT/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1637305532000},{"_id":"themes/NexT/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1637305532000},{"_id":"themes/NexT/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1637305532000},{"_id":"themes/NexT/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1637305532000},{"_id":"themes/NexT/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1637305532000},{"_id":"themes/NexT/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1637305532000},{"_id":"themes/NexT/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/outline/outline.styl","hash":"253be42759a997fa7e63e79d43f6fe432055d1f4","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/components/components.styl","hash":"65a38b8a443c7da0f9492d10b3d9c9bf1e82c649","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/components/back-to-top-sidebar.styl","hash":"cda066b495a4b6b10c7bc88b2a9b82722156b66b","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/components/rainbow.styl","hash":"8e9deaf1e0a27d5bf5f0401bf04f5637df12b6c4","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/components/reading-progress.styl","hash":"0dd11537a4b9a4d2faf3ad5cdae0f0f770a99ccf","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/components/back-to-top.styl","hash":"e0db0d9205cd47c48edba81c7397e09ed24783fa","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/components/scrollbar.styl","hash":"202ee1f1f8e64d8292df16f40ee176ff4e5d7e71","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/scaffolding/base.styl","hash":"f4c09c704448257ba034e932abeaf630a5c0c4e5","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/scaffolding/buttons.styl","hash":"060aeb5cff414014f7cdbb61e0ec7855cb0d4b32","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/scaffolding/comments.styl","hash":"3faa8a7cdb05ef3f3b02920d381773dfd54270a5","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/scaffolding/pagination.styl","hash":"48df8ba940038b5f6c8496f27a091f90d61f1263","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/scaffolding/normalize.styl","hash":"4f7140cc0db08b47a25c4c7aad71047d433051a1","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/scaffolding/scaffolding.styl","hash":"f9b3050f162d27d05b6167eaf8c7d0d8bc43a3c6","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/outline/mobile.styl","hash":"990bd301ce2de0a6b936781c58318f3945d81bc2","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/scaffolding/tables.styl","hash":"4ddbc8b2dba6fad900c5eca793a31f18ba850f5a","modified":1637305532000},{"_id":"themes/NexT/source/css/_schemes/Mist/_base.styl","hash":"71d75fa309cf5b96d876da536f57c047e57afcff","modified":1637305532000},{"_id":"themes/NexT/source/css/_schemes/Mist/_header.styl","hash":"87d19a45db10689aae9a09736efd1eb896a35b3d","modified":1637305532000},{"_id":"themes/NexT/source/css/_schemes/Mist/_menu.styl","hash":"042e2325cd8c0df7c7cdc8f96c82b1cff88fff98","modified":1637305532000},{"_id":"themes/NexT/source/css/_schemes/Mist/_posts-expand.styl","hash":"893272134c87ca8ea0a7894bc72591650fa52227","modified":1637305532000},{"_id":"themes/NexT/source/css/_schemes/Mist/index.styl","hash":"c6560cfb2f720dc8179a3a5785415baa5c6b1f2d","modified":1637305532000},{"_id":"themes/NexT/source/css/_schemes/Gemini/index.styl","hash":"05cfe46d5b31c04ced4ae3989f0651a39f3a6fa2","modified":1637305532000},{"_id":"themes/NexT/source/css/_schemes/Muse/_layout.styl","hash":"aab4583b237f7d2e7a49f702793ad32b80e833b5","modified":1637305532000},{"_id":"themes/NexT/source/css/_schemes/Muse/_logo.styl","hash":"3646e915b0a55f3b66e41d802b082aba88a76e06","modified":1637305532000},{"_id":"themes/NexT/source/css/_schemes/Muse/_sidebar.styl","hash":"eeab294e14abbae231107e1a327e907b25323136","modified":1637305532000},{"_id":"themes/NexT/source/css/_schemes/Muse/_menu.styl","hash":"fe8997092293420aff38fa9fe9810cd954a6d326","modified":1637305532000},{"_id":"themes/NexT/source/css/_schemes/Muse/index.styl","hash":"41b1d10a530913908e026fd991216e234766d148","modified":1637305532000},{"_id":"themes/NexT/source/css/_schemes/Mist/_logo.styl","hash":"3462ffd270f3e218e0a8362262466e79d731f975","modified":1637305532000},{"_id":"themes/NexT/source/css/_schemes/Pisces/_brand.styl","hash":"f1f81bca31e82ccbd375f0cb9fb8dbb3beac810d","modified":1637305532000},{"_id":"themes/NexT/source/css/_schemes/Pisces/_layout.styl","hash":"22419d2f94a478f086dd6c1887743bf3b1b537ff","modified":1637305532000},{"_id":"themes/NexT/source/css/_schemes/Pisces/_menu.styl","hash":"e30a31189051be145a10a768e19c423007b26aeb","modified":1637305532000},{"_id":"themes/NexT/source/css/_schemes/Pisces/_sidebar.styl","hash":"fcc6c42d7976a531f054c05b2d3d4ccf861a8107","modified":1637305532000},{"_id":"themes/NexT/source/css/_schemes/Pisces/_sub-menu.styl","hash":"e2d8d1f393dbf0ae0960ce9944ad89fba804ce74","modified":1637305532000},{"_id":"themes/NexT/source/css/_schemes/Pisces/index.styl","hash":"10b4794ba62726fc052c74d786d962ed79d0780b","modified":1637305532000},{"_id":"themes/NexT/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1637305532000},{"_id":"themes/NexT/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1637305532000},{"_id":"themes/NexT/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/outline/footer/footer.styl","hash":"48677e5fe4fc6d9a84fab8ad641cad7f2a1e0f59","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/outline/header/bookmark.styl","hash":"e02b1097a72a7d2ddc45ea8d53aa6d77c25ac407","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/outline/header/github-banner.styl","hash":"a475ca66b201b21a7c4022006743b3a79098829d","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/outline/header/header.styl","hash":"b98ba750be29c09784ff337f9e2a6e7a062aa3c0","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/outline/header/headerband.styl","hash":"0caf32492692ba8e854da43697a2ec8a41612194","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/outline/header/site-meta.styl","hash":"a35cce63504df289a0847a6d827e5a0885e7fe4a","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/outline/header/menu.styl","hash":"05b2d4e42c82f50fa9a90c1ef2dad8947a74bbc1","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/outline/header/site-nav.styl","hash":"4718d17fc4ee30802925890771a032d966133a31","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"9b3ff4aa24069eab0e9771437013f45e450d4217","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"95339b71ac90553fb1634c536c9749055e0c788a","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"2ef546b4cfa5038ebb050c592c5135bbeb51af41","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"41ccae779f918e6f9f5f625789a7360f1362454c","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"728ddfaf0959e1ec6cee3fea0e69d13cf817eb25","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"d055f8420583c7a009818dcdfaada592308bd628","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"f3108a247549fbdf11071d023add3f1b34ad2b23","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"782cf8847c9aca96f9194fcf1d910509e4073ce6","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/outline/sidebar/site-state.styl","hash":"02e5a998748a67fa885fb06fae242bcf3f2786fb","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/outline/sidebar/sidebar.styl","hash":"17c3f58fb84453603621d6a718fcc821c8d6bced","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/components/pages/pages.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/components/pages/breadcrumb.styl","hash":"fafc96c86926b22afba8bb9418c05e6afbc05a57","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/components/post/post-collapse.styl","hash":"692f787014322446eec5549d9ba295c0e5c83b7f","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/components/pages/tag-cloud.styl","hash":"7ddb7453bf9b85b01bff136e9d10a7f06baac9e8","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/components/pages/categories.styl","hash":"2bd0eb1512415325653b26d62a4463e6de83c5ac","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/components/pages/schedule.styl","hash":"919cc9aaf60b03c2bf00aca3748127f38a2026cf","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/components/post/post-copyright.styl","hash":"ac2105c5a7f581b1c0f2b59f2c0c3e87a7c28383","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/components/post/post-expand.styl","hash":"602a3c3d2785965b23412b5c219dfe74b5fb0844","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/components/post/post-eof.styl","hash":"3abf46c513e92f3f36c14d90f032983b94f36488","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/components/post/post-gallery.styl","hash":"caa9a78993d549117cdc8fa7a76c473a5e7f0f67","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/components/post/post-header.styl","hash":"a3596a0ad438a9069236319c1f9a7f208f9e438a","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/components/post/post-reward.styl","hash":"541d6257023915a7caca7540f12cdf283ce025f3","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/components/post/post-nav.styl","hash":"2e2a09dddd2a394a635bcefb6207b6cddcb784c7","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/components/post/post-rtl.styl","hash":"f5c2788a78790aca1a2f37f7149d6058afb539e0","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/components/post/post-tags.styl","hash":"469d5e4e188f484abff24eddd5640fa4d4d77ed1","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/components/post/post-widgets.styl","hash":"8b6481a0ac60007cf3defa3c9d85a6e412c91d6e","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/components/post/post.styl","hash":"5248880398c1318624bdab95109c1c9fdb8eec02","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/components/third-party/gitalk.styl","hash":"8a7fc03a568b95be8d3337195e38bc7ec5ba2b23","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/components/third-party/math.styl","hash":"ef66c0a08e4243a25e41408d70ca66682b8dcea1","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/components/third-party/related-posts.styl","hash":"e2992846b39bf3857b5104675af02ba73e72eed5","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/components/third-party/search.styl","hash":"38ce7d692b8bc6fde02e3271dfd50ad37e107e4e","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/components/third-party/third-party.styl","hash":"4525465f40f82bd66e5f34e986440c75a9e2d2b2","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/scaffolding/highlight/highlight.styl","hash":"4efe9174369bfe2125bd167feac18a07271635d6","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"0527bc64708a9446dc7bbb2c7e39ab3a61251c26","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"879f9cec9c88d65b2e31af4346b2bc0f6941f05d","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/scaffolding/tags/label.styl","hash":"78d309e22206a4addda3c393282518dae02250ed","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/scaffolding/tags/note.styl","hash":"a1eed8fe7f97885a9234502a197abf2e90ba22b6","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/scaffolding/tags/pdf.styl","hash":"2dc2a5b7becb11de1d4bdab6b5195588ae878cfc","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/scaffolding/highlight/diff.styl","hash":"d3f73688bb7423e3ab0de1efdf6db46db5e34f80","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/scaffolding/tags/tabs.styl","hash":"2f39b2f07c2bbca34e2f1e4805ea374566b79dbf","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/scaffolding/tags/tags.styl","hash":"9e4c0653cfd3cc6908fa0d97581bcf80861fb1e7","modified":1637305532000},{"_id":"source/_posts/记一次用代码分辨坑爹保险产品的经历/1.png","hash":"920bfa9fe201dbbc9075eaed3741ec44368a422d","modified":1637307151000},{"_id":"themes/NexT/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1637305532000},{"_id":"themes/NexT/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/scaffolding/highlight/theme.styl","hash":"3b3acc5caa0b95a2598bef4eeacb21bab21bea56","modified":1637305532000},{"_id":"themes/NexT/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"2124abd41b69ff152f4bb39e78d8fbce96a45c65","modified":1637305532000},{"_id":"themes/NexT/_config.yml","hash":"700344df98b0631b8a28c5bec9003de892d6942f","modified":1637305532000},{"_id":"themes/NexT/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1637305532000},{"_id":"source/_posts/hexo使用技巧/1.png","hash":"a6b47ecfff86eb276a7ddf5afef467f836584bec","modified":1637305532000},{"_id":"node_modules/hexo-theme-next/LICENSE.md","hash":"68fc9a03d50fd4b5ea97092b05967d1819dea2c4","modified":499162500000},{"_id":"node_modules/hexo-theme-next/README.md","hash":"fab15a85d9d8d90ecd8879525b9b74fb1c197978","modified":499162500000},{"_id":"node_modules/hexo-theme-next/_config.yml","hash":"0689d3281f35901334994480668a066d9b7b3fae","modified":499162500000},{"_id":"node_modules/hexo-theme-next/_vendors.yml","hash":"a9babdef991b0e7645f420c5a6b8e1a61b5d70d8","modified":499162500000},{"_id":"node_modules/hexo-theme-next/package.json","hash":"9c2a66dfa63c5710490e942948cf185201655971","modified":1637567665000},{"_id":"node_modules/hexo-theme-next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":499162500000},{"_id":"node_modules/hexo-theme-next/docs/AUTHORS.md","hash":"a648823121563c34a177ae91f5a774b5e29f01a0","modified":499162500000},{"_id":"node_modules/hexo-theme-next/docs/LICENSE.txt","hash":"f5b14f791b7cfa1d16da981d929152e088a5d1b8","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/README.md","hash":"b2567e32805dda79601157351a07e5ca9fe01315","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/ar.yml","hash":"bca66db21c015dbd32970d8708b898518a773e1e","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/de.yml","hash":"4be7b8b76c81bf1853eb36d2e874b17546a0e792","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/en.yml","hash":"814d81c27fed736055ee300e0a6505b26ff4313c","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/es.yml","hash":"651e3b33d86a7cdb9fd7895ca28279f8b1a24faa","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/fr.yml","hash":"b15dc05afdc94de02e5d3fee4f8d3dc5594dd37e","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/fa.yml","hash":"6456d40dd42f44101d9d6e7054e9884e9163f948","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/id.yml","hash":"14e794db4eca36b257994d81eb513e61d1edcbd6","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/it.yml","hash":"c1eeab4992c76bfd436bb205ce58b1cfeef55ee6","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/ja.yml","hash":"d48c4157e0e02e847aac7b513580d3364c81948c","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/ko.yml","hash":"6387357ac2dd498e8b8d630d27050a59180d7e8f","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/nl.yml","hash":"ecb8e39c6225f3c068a5fdd569ee7dafd5c41a1f","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/pt-BR.yml","hash":"a1f27b3a592fc58f17d247f5563ff4a90a3da5f2","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/pt.yml","hash":"63a3e1e728ba5e6e22150de7331bb8a654f34960","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/ru.yml","hash":"e9af1afe529ca747a04b801401d394b2ad696fde","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/si.yml","hash":"615d18d044f44df476d6bfbf73f7b0edc2632168","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/tr.yml","hash":"0bebba73d6f06c7dad61f80c0d7ad5f6f1791a01","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/uk.yml","hash":"7dd24580c0865c5a7bc4d391855045366a598936","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/vi.yml","hash":"c669c34da544a563ceae3e196addc9df6a78e024","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/zh-CN.yml","hash":"5a3ab21210304efef736e96bad254f789f42c567","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/zh-HK.yml","hash":"f195bb0502ffe66e850077a1af1033455ea65f93","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/zh-TW.yml","hash":"92256b90028de9a1e79c6bc0e5885b93e7fb4b17","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_layout.njk","hash":"20e4160cd0deb4fa272cc3aed0f43520b3cf4a9c","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/archive.njk","hash":"d759f4d2cf5ddc6875ea250113a00662c1caf6d1","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/category.njk","hash":"0a590e87af50e57b15fc37695c9a3bf4a97c3d92","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/index.njk","hash":"37ec3d1bcd20b8ac1d18e0d68f990450890b46cd","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/page.njk","hash":"9cd3eca2c468bb46c7c5bf391bea4b025af178f6","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/post.njk","hash":"6abeb85fb3e4c382ed4bb6049b12a807e6226e67","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/tag.njk","hash":"6cd707f846bfd6becbcfb060c26958bb4015c31f","modified":499162500000},{"_id":"node_modules/hexo-theme-next/docs/ru/README.md","hash":"87edab5a3eb7577a409c01df3f1631de40f8956f","modified":499162500000},{"_id":"node_modules/hexo-theme-next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"7a06d443f374bd1e84294067a0ac796afd9fbe60","modified":499162500000},{"_id":"node_modules/hexo-theme-next/docs/zh-CN/CONTRIBUTING.md","hash":"a089f7a8368ab0b7d7b9b7ec0ac3767a453435df","modified":499162500000},{"_id":"node_modules/hexo-theme-next/docs/zh-CN/README.md","hash":"02bafc6ee86263790603861e356596f0c916e392","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_macro/post-collapse.njk","hash":"1a30d751871dabfa80940042ddb1f77d07d830b9","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_macro/post.njk","hash":"b106599106285ecd4c0c1e0ed11c46a36b5a69d5","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_macro/sidebar.njk","hash":"eb786e8b35e354287cda345c524cd35ec955f692","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/comments.njk","hash":"c12f8a7497596441503f2541d2f746f2ee7dd594","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/footer.njk","hash":"19713f472972caac33ae5fbcfe9105da61257de4","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/pagination.njk","hash":"9876dbfc15713c7a47d4bcaa301f4757bd978269","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/languages.njk","hash":"e43f22198cccb5f6e306b1ce0d28d12a4fb891f8","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/widgets.njk","hash":"852a750524decf1efa587cd52b09e387ed8315de","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_scripts/index.njk","hash":"6668878a0f9a1166c6a879755f54a08d942da870","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_scripts/vendors.njk","hash":"be80b9fe415a9a09d74c28e230995fd292dfc123","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/fancybox.njk","hash":"844559f46e2ff1c8be234d5763703106e2072a7b","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/index.njk","hash":"d41eeb262978e34de4679d8971a9e7ac5d90ecbc","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/pace.njk","hash":"d7ad5714079f7f65446f880baf14722435ca9061","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/quicklink.njk","hash":"0efed71ed530447718c4ea5bbd5fc8695b0b0d5f","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/rating.njk","hash":"1bcdbc7fde26d6d9ef4e7fa43ffcff5a9506b20e","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/events/index.js","hash":"1ce12eda88fa5df7e76ec7b78b8463fc6618410c","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/filters/default-injects.js","hash":"872f01cb10e422a648ea505436532e776e92926b","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/filters/locals.js","hash":"0cd7da6755459d60779f0a7ccf311e26e184d55d","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/filters/minify.js","hash":"0af64049db8188d5f8cc226b353e0d7909819feb","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/filters/post.js","hash":"ab8bb12e4d55640b1ac4252514468ce37ebcb0b0","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/helpers/engine.js","hash":"b9785bc737470e9b8e910e7da9e8c45c2ead58fa","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/helpers/font.js","hash":"3394185a7f0393c16ce52c8028f90da3e9239c55","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/helpers/next-config.js","hash":"9a07f2d979fc8fe0c5e07d48304187b9b03ea7ff","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/helpers/next-url.js","hash":"a11b71ba0c5012e2cdcab31c15439156b215563e","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/helpers/next-vendors.js","hash":"afdd6a188a74c188f0dd154fac70efd4080ca262","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/tags/button.js","hash":"c6ad2ed544fbb25ecb5d820c36e76302504271b7","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/tags/caniuse.js","hash":"935a311142a409c1896b3ae3f01fe7a9e2db1134","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/tags/center-quote.js","hash":"92c19d796bdb3320df9caea59bf52df7a95d9da9","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/tags/group-pictures.js","hash":"79102d9e9bccff6224e77a77c4d2d363094ae3df","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/tags/index.js","hash":"17f9451ce1f10f78437f52218757d38d4e1591b0","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/tags/label.js","hash":"8a73348186113bae0a51ea2f891c1bb882fab05a","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/tags/link-grid.js","hash":"18a483c2d5afd701f6080ffdddf2d1321370336c","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/tags/mermaid.js","hash":"4fb01ca650fa8b256b8d48f50dc1b18350bd3d6d","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/tags/note.js","hash":"7b94ddb46b7d4b0fe815f2fbe4bd375f07f55363","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/tags/pdf.js","hash":"344636b6fd7e27e8831c1e194039afc0d61931cd","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/tags/tabs.js","hash":"0eabe51da40b4b13e16419c8fe02452d9a4fef73","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/tags/video.js","hash":"2ee926448583be8f95af1f2884ae2c9c4830151d","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_colors.styl","hash":"3c6798c10cc220d83481cb3f3782e78558cee789","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_mixins.styl","hash":"acef5acc728f24cb657be8d7010d836b4d556b0e","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/main.styl","hash":"78ce791cc4ac95386cf6839ca72f5f7b51f86ee9","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/noscript.styl","hash":"76bba5d7916e9930e68215a0fce3a7d81c44510f","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/images/avatar.gif","hash":"2dbc3e2f2d624b2ca1afe6edc2ca17307f1950c8","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/images/logo-algolia-nebula-blue-full.svg","hash":"b85e274207b1392782476a0430feac98db1e7da0","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/bookmark.js","hash":"0f563ffbf05fad30e854e413ab17ff7164ab5a53","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/images/logo.svg","hash":"2cb74fd3ea2635e015eabc58a8d488aed6cf6417","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/comments-buttons.js","hash":"1a7344440321713426a0b2ab17e276b5bdf85ade","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/config.js","hash":"4c4ebbe3b3f3841a26f9d5af6d0ba8bc6da01c54","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/comments.js","hash":"66ae2e26ea36a41b72c638ea8b220296638ae952","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/motion.js","hash":"6d4bd07a6f8e1b4083119dca0acb5b289533b619","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/next-boot.js","hash":"48497e2156a10155dc42311633a110c9685692c9","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/pjax.js","hash":"919f5281c4a04d11cfd94573ecf57b3dbabd3cc8","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/schedule.js","hash":"2b43e2d576a308289880befc27580dbb2aa34439","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/utils.js","hash":"e447160d342b1f93df5214b6a733441039ced439","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/head/head-unique.njk","hash":"9167e429a459686c9fc140790124a46d677e6b15","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/brand.njk","hash":"ffb6c69a9c90793cbe9bf0544b55f7a41c016d8f","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/head/head.njk","hash":"d3c094aaef1431fbc9df333529a7b1789ccd134c","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/menu-item.njk","hash":"b46f412c0b4f775fd329d50357f722f5d7c1a3ba","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/index.njk","hash":"53895b3af95667edc5bf5d7356f8a2b4fe091447","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/sub-menu.njk","hash":"75a158a5b54a3a76ee6590f5e0e2dd4a9f0be869","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/menu.njk","hash":"c9390824b57f23b7c8a5c23a9834514123673766","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/breadcrumb.njk","hash":"edb3bb6d644b7407673c5ef3a426a244e98fcf89","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/categories.njk","hash":"17156d99941f28a225951ffdcfa9a115e20dc2d2","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/page-header.njk","hash":"7ed4f102a1825195cff8d7995bf9219f323a9034","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/schedule.njk","hash":"ca2ccf3cf1874c45712f192ad45dea96fbd9920d","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/tags.njk","hash":"a18d1598e36cc72f2b0b24c3cc3c5990dfaa3254","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-copyright.njk","hash":"133942922e34abae9e4de7ea5591d77c0caa4b37","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-followme.njk","hash":"154df0bb323c332d8c25343f258ee865e5553423","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-footer.njk","hash":"bde2c7356d9362972bde41cc206d5816f8ed714d","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-meta.njk","hash":"471dcbe22d0dbe043dcf25a1a1c17ca76aa9a548","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-related.njk","hash":"7384e6390067ef2a84e7310d6adb3f6104ed62e2","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-reward.njk","hash":"002b51d0cae3f2e2e008bdc58be90c728282de5b","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/search/algolia-search.njk","hash":"efb2b6f19df02ba5ae623a1f274fff52aed21e6f","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/search/index.njk","hash":"8f6f256ab3b351ffc80f1f3f1d9834e9a7cfac31","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/search/localsearch.njk","hash":"661f7acae43f0be694266323320f977d84119abe","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/sidebar/site-overview.njk","hash":"5c01e380ba843f8016d8fa4593432430f5bd3584","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/baidu-analytics.njk","hash":"6215309aee028dcb734452beec448c5afb6c63fc","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/cloudflare.njk","hash":"c978e9efd472c4825f93b83524b11f1c4f7efaab","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/google-analytics.njk","hash":"d89066ff53879693f023e540d59c86137172c529","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/growingio.njk","hash":"8afaa772c390bd9d53a5cff9645ac3168334eb98","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/index.njk","hash":"2d36a481a70d5f450f1f166dc556ac1218b18537","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/chat/chatra.njk","hash":"d7263fca16d0278ccf1f6aa1c6df6902a6344a09","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/chat/gitter.njk","hash":"f8cc14b7aa949999a1faaeb7855e2f20b59a386d","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/chat/tidio.njk","hash":"02aab857c27fc103216029be991688b12a73a525","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/changyan.njk","hash":"d1c950f8fbdf85e7a3eae5463767a89e858e8220","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/disqus.njk","hash":"9375b19a89b7fa9474e558d085af5448d4c5c50c","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/disqusjs.njk","hash":"0749cb6902baecdfd01f779a2a2513f6d2f6a823","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/gitalk.njk","hash":"b63b7e2ede0d3e66e732fa1a06bda9b19e1e85d4","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/isso.njk","hash":"64cc3bdaf644fd32c0d0a247f29f5b6904da9af3","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/livere.njk","hash":"3b13b09fba84ec6000886890a6710736a2b8fafe","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/utterances.njk","hash":"5a94032bc3512a10ad4328fc19ec07b819a1d687","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/math/index.njk","hash":"abf37fc55aa86702118e8fdf5bf2d389dd589aa0","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/math/katex.njk","hash":"d82c24136bbd3443b85f07f5579845833b594684","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/math/mathjax.njk","hash":"3677017fd4572b158311f5f5d870590ab25184e0","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/search/algolia-search.njk","hash":"24ed76e0c72a25ac152820c750a05826a706b6f4","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/search/localsearch.njk","hash":"e45ea3542cdc9ed7ec8447b5e6f35df4c5e82758","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/busuanzi-counter.njk","hash":"a4bc501da0f22f7e420f0ca47e83988ce90b1368","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/firestore.njk","hash":"d32ebe94560fa95824478ebbff531bffc47b194d","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/index.njk","hash":"568ddf7955d11d93fb5e842b403a7ac8b1b7fdb1","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/lean-analytics.njk","hash":"2446e748cdc102c78492216319ac02148db7daf6","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/tags/mermaid.njk","hash":"099e031f52fb8e47b3af5b2684737efc9e643ee7","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/tags/pdf.njk","hash":"2c81984cc4f5123103460442f6e046f5b6c97127","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/config.js","hash":"b0ced2583fdd505da3ef27a9db9c55cc7b936732","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/highlight.js","hash":"6aec7b2c38c50989a23bfaa0d560e75c7f553e12","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/injects.js","hash":"d987709267a1bc6e5014411e9983d7c49c102c16","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/utils.js","hash":"b281be775b693f9bf32766c8f6ef703c72ac9b00","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/vendors.js","hash":"08dac57e15c9f06c7cf54884b045f2362595f9d2","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/changyan.js","hash":"aa05e6b3d613a756178b8ba06832ad27499d4c14","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/common.js","hash":"2486f3e0150c753e5f3af1a3665d074704b8ee2c","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/default-config.js","hash":"93ee5f9109dad885dc38c49bcee630c10f9dce6e","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/disqus.js","hash":"7f71d6b271ba65ff333d5682e7575711d368c0d2","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/disqusjs.js","hash":"135b87d151055eefdbc711d9e704b112b3214a84","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/gitalk.js","hash":"7bb7dafdd7f6bca8464b54e17e552ce7f1714195","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/isso.js","hash":"ff8b5b5145220a17d0ecd9508ba9bd2d3b2da47d","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/livere.js","hash":"5a07d8bb52bc1d51a624ca8db54be144566c306b","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/utterances.js","hash":"d3bded697bc32dace689d2a6dfb6eb7514169d15","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Gemini.styl","hash":"96e0a7c2a65ce68215e17e369085b2ea2f1334f2","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Mist.styl","hash":"e1fbf169b9b6a194b518240cbd06ec3c48b83d61","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Muse.styl","hash":"e3be898f5ebcf435a26542653a9297ff2c71aeb0","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Pisces.styl","hash":"c65536a128b9bc9dbe2fbb1b235a3cded2891002","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_variables/base.styl","hash":"c6b3c031d23b2a093e025c75b7cab6bc0379c6ea","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/schemes/muse.js","hash":"9a836d2bcc3defe4bd1ee51f5f4eb7006ebdd41b","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/fancybox.js","hash":"c098d14e65dd170537134358d4b8359ad0539c2c","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/pace.js","hash":"0ef04218b93561ba4d0ff420d556c3d90a756d32","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/quicklink.js","hash":"6f58cd7aa8f6f1ab92d5a96551add293f4e55312","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/rating.js","hash":"4e92c2d107ba47b47826829f9668030d5ea9bfb8","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/back-to-top.styl","hash":"bab653bcf226311381e8411a0492202f1bf1fce9","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/index.styl","hash":"fe1868f47681e00a33a96199302be85377282f63","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/reading-progress.styl","hash":"90a86045a33c1bae49fc2f6fa1e1b53170c7f77b","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/index.styl","hash":"8e34df131830d4fa3725e4590a672ba1cf1903e5","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/mobile.styl","hash":"64775c729512b30b144ab5ae9dc4a4dfd4e13f35","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/base.styl","hash":"2e58cb90a77d3dd16e02b8949808b4b16453828c","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/buttons.styl","hash":"a042571d85ff7265f799004239a45f36b716b8a6","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/comments.styl","hash":"e4fecc889ba3317a64e9abba5842c79dff9b7827","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/index.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/pagination.styl","hash":"b5c7782368889fa9fd93807d28ff2daf270e3703","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tables.styl","hash":"e840b23d33023e6d45e018f6e84b683dd56efd8d","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/toggles.styl","hash":"572a41499391677d84b16d8dbd6a996a3d5ce041","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Gemini/index.styl","hash":"fd49b521d67eaccc629f77b4e095cb7310327565","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_header.styl","hash":"4817e77577896ab5c0da434549917ee703a3f4cf","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_layout.styl","hash":"5604ac1e161099a4d3e5657d53507268866dc717","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_menu.styl","hash":"357b899ac0f0dfbbbebf1ea972030c7cefa463ce","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_posts-expand.styl","hash":"b332868d76d9f1651efd65abfc0d3c9d699b1a45","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/index.styl","hash":"ab16a3dcdc0393b9b582ef59dcc13db9320e917c","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_header.styl","hash":"06080fd963c904d96c00eff098a284e337953013","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_layout.styl","hash":"82a29572dd90451f75358a2ee2522b87304a0bb8","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_menu.styl","hash":"8a70d51d8f7cd113e5fbc9f0e70c46a072f282c8","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_sidebar.styl","hash":"944364893bd7160d954c10ba931af641c91515a4","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_header.styl","hash":"b741ab96e73370711c63a6581159f2ea8b5bfa1b","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_layout.styl","hash":"6eee86c8f0175d6c09e434053516cd8556f78d44","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_menu.styl","hash":"72dc825c50357402c342d62ab60fc0c478ab6bc1","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_sidebar.styl","hash":"d9141e6e14a56b5952488101e9a8388c2170e270","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"778ed2ad5643b93970c95626b325defeb586733f","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/index.styl","hash":"8000075b227749a7495eaf417cac6ccfbe441580","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/baidu-analytics.js","hash":"f629acc46ff40c071ffd31b77d5c7616f0fdd778","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/google-analytics.js","hash":"59684383385059dc4f8a1ff85dbbeb703bcdbcb5","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/growingio.js","hash":"78dd3cf04082b7dbe6246e404b2aa8e726922402","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/chatra.js","hash":"c32180522788c10e51df1803aa6842ef0432ddc9","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/gitter.js","hash":"cc38c94125f90dadde11b5ebac7d8bf99a1a08a2","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/tidio.js","hash":"b0079f6a4601e06ca6fe46e83a2f5af553e9bc3c","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/changyan.js","hash":"8c8ebec444c727b704ea41ad88b0b96ed2e4b8d4","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqus.js","hash":"e1cc671b0d524864fd445e3ab4ade9ee6d07e565","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqusjs.js","hash":"b6c58f098473b526d6a3cd35655caf34b77f7cff","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/gitalk.js","hash":"0ec038cf83e8ec067534f16a54041e47a3c1e59a","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/isso.js","hash":"753a873b6f566aff5ba77ca23f91b78eb880ca64","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/livere.js","hash":"2247d88c934c765c43013337860774aaa99f0b31","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/utterances.js","hash":"f67f90eb03e284c82da2b8cf2f1e31801813c16d","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/katex.js","hash":"83c54ee536e487a1031783443fe0cb63b1b4767e","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/mathjax.js","hash":"5c749b9c1c3bb738122d0516211ecff6496d4907","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/algolia-search.js","hash":"ac401e3736d56a3c9cb85ab885744cce0b813c55","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/local-search.js","hash":"45c485f82258d246f37deb66884bd2643323ef3a","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/firestore.js","hash":"0960f16107ed61452fb0dffc6ed22dc143de34ef","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/lean-analytics.js","hash":"5a928990856b8e456f0663cf3b6b406733672e39","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/mermaid.js","hash":"3dc4628efa6debd6490fc0ebddff2424a7b319d8","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/pdf.js","hash":"af78c22f0e61c8c8aa8794e585e0d632c6d4fcb8","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/breadcrumb.styl","hash":"8afdc311c6b8db121758371f95cf1c5e77354f42","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/categories.styl","hash":"b6e2eb1550a7845cb2adf86081a4ab6c7bde1e68","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/index.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/schedule.styl","hash":"6b816c2511242ee503fb5f34cd3e4dcdafc06b85","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/tag-cloud.styl","hash":"1a81d1a71fcf0699629ce6e72dfd0a15f3a2dd0a","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/index.styl","hash":"d0805a763176b3c0003967401644f41dfe3bc9e8","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-body.styl","hash":"ea351936d71e0b6259febac3d7d56d1be6927bf9","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-collapse.styl","hash":"ec37a36e94ba791663607a5022f763915778578f","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-followme.styl","hash":"fc1a7bac6493f24aa50665574f37f3dd954f210c","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-footer.styl","hash":"1d284f3ea03ba9b4feb76b375e539a8e0bccf1c3","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-gallery.styl","hash":"aa366d37389760c8595529b850f461569577a1c5","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-header.styl","hash":"010c901e4ef49a606f8a350efbf09044e76d2ff3","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-nav.styl","hash":"9ac6f477177264c26a46e8333b8456720a0444dc","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-reward.styl","hash":"07cff69f2d57e6321595f64c16d8b763dc88df6a","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-widgets.styl","hash":"b6677dc2a2368084ab82bb4f145ac79e5966c150","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/gitalk.styl","hash":"070737d101e7cd58e997e8c7af09958268c43a21","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/index.styl","hash":"b1bcc5f9357a9f8b8d6f8f285f073aaf3157f9db","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/math.styl","hash":"9d995eb4871a6c273d9d51558676a1fdabf69e72","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/related-posts.styl","hash":"41ed817e1eb64078074e245e771446ee041e5790","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/search.styl","hash":"c8e95e8ac4cbdba01cb93e9e0569b45603e41bc6","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/utterances.styl","hash":"56d90ae0559caa55b75f3c300ff2711f9ed65fc4","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/footer/index.styl","hash":"8b9407e5cfd0571ef8de7df19022b268f962fa2f","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/bookmark.styl","hash":"e74f4bb47a101b014ee2a1783c87f3b87323f9a0","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/github-banner.styl","hash":"38c64c2d04e46848382bfa246a0e9c508294767b","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/index.styl","hash":"650ed4ad6df1b6ff04647e7b6d568304e4d3ed2e","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/menu.styl","hash":"392fd53a8dd4e3f33a853ebb24290a622300e0ff","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/site-meta.styl","hash":"9a47c9045e443b8d20932f9c564a3a05fa4c6b51","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/site-nav.styl","hash":"bf3ad8b4268f763a1e26377681644887694bc009","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/index.styl","hash":"cee43480eba028c37d51cb620c2d81486aa24e01","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"52fc98b1435129eb3edb9293ced9e507741f1350","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"5b38ac4a0f1ade0e681aff0e3366c481d9cf3dcd","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"9950c3188a28e1c63b5498b7bdcd14b12ace3e28","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"b926e368f702f8686aaa2eb98d3d2e533418958c","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"fbdb63c6a8887d19b7137325ba7d6806f728139c","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"ee94a1a27090ad24e3ed579093088d97ff96d77d","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"021a37cf178440cc341940a299d3bca359996c6b","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"3103b81fc76b59e1e2c161e2c484625c770ed66f","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/site-state.styl","hash":"26dd0adfcb1db6df29c6090c8d7e9b5a43583fb0","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"83ee4993710fc8daa1c8dbfccd5d5091fd244c30","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/highlight/index.styl","hash":"0b3e2696eca39781c3524b2c5a2555ebc616e6e8","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"d6418fd2bbfba7b73ddf11ec62db9637fdf5d8af","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"393ff96234e4196b569d4b11496774eb78e147de","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/index.styl","hash":"3f76c73a891bbc10679753e702feba9e8a5ffdd2","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/label.styl","hash":"debee14539272fbe3835a7d3853af2230baa3501","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/link-grid.styl","hash":"7f8a7345e6537a62cd9e9a94c8f7065b541d9b04","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/mermaid.styl","hash":"48d35dba575a7c9e8845b16652e76b7d4a4646de","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/note.styl","hash":"d27fbf7799695295dd5860a161a13ac4d90c5ba4","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/pdf.styl","hash":"b6654a1d7cf82577d8263faffee8af3ad4a5c0e8","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/tabs.styl","hash":"9b34143aec49e390e18f380026a45096f7477722","modified":499162500000},{"_id":"public/2021/11/19/记一次用代码分辨坑爹保险产品的经历/index.html","hash":"10cc8a4b4007934ebf72bb74e3a23e96c55d8845","modified":1637631830675},{"_id":"public/2020/05/14/jenkins简单搭建/index.html","hash":"9d578db614dcf29a8ad071e5b7e5e564d2095c3b","modified":1637633632424},{"_id":"public/2020/04/29/azkaban简单搭建/index.html","hash":"f0828a99f6c26ca6e3f0044ae53ef830cce569da","modified":1637633632424},{"_id":"public/2019/11/20/Python数据爬虫实践-爬取历年东西部周最佳对比/index.html","hash":"c2c5d85ba0208f76db2bcc7c38940a47aa98caf0","modified":1637633632424},{"_id":"public/2019/11/05/logback日志配置模板/index.html","hash":"5f461e021f9da8f9907337d29b99a88ed8bf6744","modified":1637633839970},{"_id":"public/2019/11/04/解决Dubbo无法处理自定义异常的问题/index.html","hash":"5cd60f58ead373f83fd9deaa1b6f15a3c85958af","modified":1637633632424},{"_id":"public/2019/11/04/OracleJDBC/index.html","hash":"dca9fca815edff21db86064a88c1f5d57431b7ca","modified":1637633632424},{"_id":"public/2019/10/22/搭建新项目的框架/index.html","hash":"34db172fb02a7c57a4f96bc226e1a31cedd7d3b9","modified":1637631830675},{"_id":"public/2019/10/17/MySql-Document/index.html","hash":"487481e59ca767324ccfb9bc533047c487a0988c","modified":1637633839970},{"_id":"public/2019/10/16/linux日常维护命令/index.html","hash":"99e32f8d7530a7116e9db583ffb1a30f91527bd5","modified":1637633632424},{"_id":"public/2019/10/15/官方文档解释MySQL最左匹配(最左前缀)原则/index.html","hash":"f27daba7468b64cd2fb90574640411966c7f8420","modified":1637633632424},{"_id":"public/2019/10/14/ELK日常维护相关/index.html","hash":"19e2051c154b47d3687fd69549cd22abb0ae7452","modified":1637633632424},{"_id":"public/2019/10/10/新闻翻译-1/index.html","hash":"7dbe513d38843dabc7800bc0c593a2edb2779dd9","modified":1637633632424},{"_id":"public/2019/10/09/绩效统计/index.html","hash":"d314d28ef35b1f50783f0a1a9ead1cbafeac842b","modified":1637631830675},{"_id":"public/2019/10/08/hexo使用技巧/index.html","hash":"f313f84d433bfc684ea1a4d62d8d9d0d7ed6f234","modified":1637633632424},{"_id":"public/2019/10/08/利用hexo和github搭建个人博客/index.html","hash":"a54d321fbfee011595e7eda18444ba7552d9bd5f","modified":1637633632424},{"_id":"public/2019/10/07/ELK_FileBeats/index.html","hash":"eed0e6a1d8259d405dfc704bcd8d53229064a237","modified":1637633632424},{"_id":"public/archives/page/2/index.html","hash":"dd15acf0b49bece13e7d754b96b7d1e463a1c6b0","modified":1637631830675},{"_id":"public/archives/2019/page/2/index.html","hash":"fc0b41370cb9c9c3be367279a9b3a9a9eadb8ac0","modified":1637631830675},{"_id":"public/archives/2019/index.html","hash":"6f17df62aac78d1b3237c697644f5c1e61a13a0c","modified":1637631830675},{"_id":"public/archives/2019/10/index.html","hash":"b5b93c67fc1bd1b6cc03566ed7b1f836e5ffdcf9","modified":1637631830675},{"_id":"public/archives/2019/11/index.html","hash":"971cbb9e60ed562e6e2eb97062dc46e15082282d","modified":1637631830675},{"_id":"public/archives/2020/04/index.html","hash":"80b61861bc4ac4d867891c38969c6713daeb1236","modified":1637631830675},{"_id":"public/archives/2020/index.html","hash":"551b4e910189fe2303294dea34c347135729b913","modified":1637631830675},{"_id":"public/archives/2020/05/index.html","hash":"75779b8db66225e1a9d6df015a9eea9778cccef5","modified":1637631830675},{"_id":"public/categories/学习/index.html","hash":"a60dbda3dd8c1f04797795bf30e7e7e7d0b66fae","modified":1637631830675},{"_id":"public/categories/学习/page/2/index.html","hash":"98418c1614bbf26ac8146e444fa267981e3028df","modified":1637631830675},{"_id":"public/categories/学习/搭建相关/index.html","hash":"24f207d7079f1521e27496916e88fb55f786b237","modified":1637631830675},{"_id":"public/categories/学习/运维/index.html","hash":"ff3daa62b597ce7275c101bfb6da7c8766162205","modified":1637631830675},{"_id":"public/categories/学习/数据库/index.html","hash":"c7e639caed297fb7cd26a2c03e33eb7644d3af0a","modified":1637631830675},{"_id":"public/categories/学习/英语/index.html","hash":"495ea47ebf82fe37872f56999e5eec815c93638e","modified":1637631830675},{"_id":"public/categories/绩效/index.html","hash":"ac10fbc6e663c8560acc5fa1af9114b18b3e914a","modified":1637631830675},{"_id":"public/page/2/index.html","hash":"8fb67744fd61a94072d9fe1a43f0d0be56b34c52","modified":1637633632424},{"_id":"public/tags/elk/index.html","hash":"4cc4d5eaa1fae50b07e0cea1733003be02ab0253","modified":1637631830675},{"_id":"public/tags/solved/index.html","hash":"c697a449779ddbc078b847da0b83efebbf9ac8f8","modified":1637631830675},{"_id":"public/tags/python/index.html","hash":"b7a30fe30c67c5520e4dcd9728f9265cf21e967b","modified":1637631830675},{"_id":"public/tags/azkaban/index.html","hash":"3cb7f4272073dd7bb96d0f7d21e41185091e4548","modified":1637631830675},{"_id":"public/tags/hexo/index.html","hash":"bde5eadca35f0fc34c58bd633fdd629c3ea56278","modified":1637631830675},{"_id":"public/tags/jenkins/index.html","hash":"b0e8c21176d1faa82270459c7020362b17fcc16d","modified":1637631830675},{"_id":"public/tags/linux/index.html","hash":"c0e02ac2339ce9340e02d581826c23b5864fa800","modified":1637631830675},{"_id":"public/tags/github/index.html","hash":"5a843ac22b6bd1389d7bce2ea06902a903e31a9f","modified":1637631830675},{"_id":"public/tags/mysql/index.html","hash":"b1de4dfe4f235bfbf069eaf1dc8980f82f7e3ac1","modified":1637631830675},{"_id":"public/tags/translate/index.html","hash":"dc11db4c1088b0227cfeb6b57e592dc9a4d03a43","modified":1637631830675},{"_id":"public/tags/news/index.html","hash":"7c196ca8184a2ed58d51201de665972921605c7c","modified":1637631830675},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1637567678562},{"_id":"public/images/avatar.gif","hash":"2dbc3e2f2d624b2ca1afe6edc2ca17307f1950c8","modified":1637567678562},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1637567678562},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1637567678562},{"_id":"public/images/logo-algolia-nebula-blue-full.svg","hash":"b85e274207b1392782476a0430feac98db1e7da0","modified":1637567678562},{"_id":"public/images/logo.svg","hash":"2cb74fd3ea2635e015eabc58a8d488aed6cf6417","modified":1637567678562},{"_id":"public/css/main.css","hash":"a14bb1aee1bb4278bdabdf6d4628184efadb3e80","modified":1637567678562},{"_id":"public/css/noscript.css","hash":"54d14cd43dc297950a4a8d39ec9644dd5fc3499f","modified":1637567678562},{"_id":"public/js/bookmark.js","hash":"0f563ffbf05fad30e854e413ab17ff7164ab5a53","modified":1637567678562},{"_id":"public/js/comments.js","hash":"66ae2e26ea36a41b72c638ea8b220296638ae952","modified":1637567678562},{"_id":"public/js/comments-buttons.js","hash":"1a7344440321713426a0b2ab17e276b5bdf85ade","modified":1637567678562},{"_id":"public/js/config.js","hash":"4c4ebbe3b3f3841a26f9d5af6d0ba8bc6da01c54","modified":1637567678562},{"_id":"public/js/motion.js","hash":"6d4bd07a6f8e1b4083119dca0acb5b289533b619","modified":1637567678562},{"_id":"public/js/next-boot.js","hash":"48497e2156a10155dc42311633a110c9685692c9","modified":1637567678562},{"_id":"public/js/pjax.js","hash":"919f5281c4a04d11cfd94573ecf57b3dbabd3cc8","modified":1637567678562},{"_id":"public/js/schedule.js","hash":"2b43e2d576a308289880befc27580dbb2aa34439","modified":1637567678562},{"_id":"public/js/utils.js","hash":"e447160d342b1f93df5214b6a733441039ced439","modified":1637567678562},{"_id":"public/js/schemes/muse.js","hash":"9a836d2bcc3defe4bd1ee51f5f4eb7006ebdd41b","modified":1637567678562},{"_id":"public/js/third-party/fancybox.js","hash":"c098d14e65dd170537134358d4b8359ad0539c2c","modified":1637567678562},{"_id":"public/js/third-party/pace.js","hash":"0ef04218b93561ba4d0ff420d556c3d90a756d32","modified":1637567678562},{"_id":"public/js/third-party/quicklink.js","hash":"6f58cd7aa8f6f1ab92d5a96551add293f4e55312","modified":1637567678562},{"_id":"public/js/third-party/rating.js","hash":"4e92c2d107ba47b47826829f9668030d5ea9bfb8","modified":1637567678562},{"_id":"public/js/third-party/analytics/baidu-analytics.js","hash":"f629acc46ff40c071ffd31b77d5c7616f0fdd778","modified":1637567678562},{"_id":"public/js/third-party/analytics/google-analytics.js","hash":"59684383385059dc4f8a1ff85dbbeb703bcdbcb5","modified":1637567678562},{"_id":"public/js/third-party/analytics/growingio.js","hash":"78dd3cf04082b7dbe6246e404b2aa8e726922402","modified":1637567678562},{"_id":"public/js/third-party/chat/chatra.js","hash":"c32180522788c10e51df1803aa6842ef0432ddc9","modified":1637567678562},{"_id":"public/js/third-party/chat/gitter.js","hash":"cc38c94125f90dadde11b5ebac7d8bf99a1a08a2","modified":1637567678562},{"_id":"public/js/third-party/chat/tidio.js","hash":"b0079f6a4601e06ca6fe46e83a2f5af553e9bc3c","modified":1637567678562},{"_id":"public/js/third-party/comments/changyan.js","hash":"8c8ebec444c727b704ea41ad88b0b96ed2e4b8d4","modified":1637567678562},{"_id":"public/js/third-party/comments/disqus.js","hash":"e1cc671b0d524864fd445e3ab4ade9ee6d07e565","modified":1637567678562},{"_id":"public/js/third-party/comments/disqusjs.js","hash":"b6c58f098473b526d6a3cd35655caf34b77f7cff","modified":1637567678562},{"_id":"public/js/third-party/comments/gitalk.js","hash":"0ec038cf83e8ec067534f16a54041e47a3c1e59a","modified":1637567678562},{"_id":"public/js/third-party/comments/isso.js","hash":"753a873b6f566aff5ba77ca23f91b78eb880ca64","modified":1637567678562},{"_id":"public/js/third-party/comments/utterances.js","hash":"f67f90eb03e284c82da2b8cf2f1e31801813c16d","modified":1637567678562},{"_id":"public/js/third-party/comments/livere.js","hash":"2247d88c934c765c43013337860774aaa99f0b31","modified":1637567678562},{"_id":"public/js/third-party/math/katex.js","hash":"83c54ee536e487a1031783443fe0cb63b1b4767e","modified":1637567678562},{"_id":"public/js/third-party/math/mathjax.js","hash":"5c749b9c1c3bb738122d0516211ecff6496d4907","modified":1637567678562},{"_id":"public/js/third-party/search/algolia-search.js","hash":"ac401e3736d56a3c9cb85ab885744cce0b813c55","modified":1637567678562},{"_id":"public/js/third-party/search/local-search.js","hash":"45c485f82258d246f37deb66884bd2643323ef3a","modified":1637567678562},{"_id":"public/js/third-party/statistics/firestore.js","hash":"0960f16107ed61452fb0dffc6ed22dc143de34ef","modified":1637567678562},{"_id":"public/js/third-party/statistics/lean-analytics.js","hash":"5a928990856b8e456f0663cf3b6b406733672e39","modified":1637567678562},{"_id":"public/js/third-party/tags/mermaid.js","hash":"3dc4628efa6debd6490fc0ebddff2424a7b319d8","modified":1637567678562},{"_id":"public/js/third-party/tags/pdf.js","hash":"af78c22f0e61c8c8aa8794e585e0d632c6d4fcb8","modified":1637567678562},{"_id":"source/.DS_Store","hash":"b48c4f7d61a5928be717d4bd654481ff1eab36ee","modified":1637567831000},{"_id":"public/search.xml","hash":"24f9e324d917f90999a12123b7a37bb59ae00027","modified":1637633839970},{"_id":"source/categories/index.md","hash":"d0063d9c059bb0c75b651f7fae257a4dfd72f853","modified":1637628399000},{"_id":"source/tags/index.md","hash":"2a3a4f8d68aa46d2384bb874df9ba531ff9f7b9d","modified":1637628399000},{"_id":"public/categories/index.html","hash":"f07cdc4b9457ea2c11617967657131f1f54d78fc","modified":1637631830675},{"_id":"public/tags/index.html","hash":"4f11cb11a1c9904e3b22c9353cdfe29cc28d053a","modified":1637631830675},{"_id":"source/images/avatar.jpeg","hash":"e0bc7ee8b5d9f352615bc5191900cee4d00b75f6","modified":1637629165000},{"_id":"public/images/avatar.jpeg","hash":"e0bc7ee8b5d9f352615bc5191900cee4d00b75f6","modified":1637629273641},{"_id":"public/2019/10/07/ELK_FileBeats/1.png","hash":"6691b221f5804cc57c05dc6f6d31557ca964d168","modified":1637629934811},{"_id":"public/2019/10/07/ELK_FileBeats/10.png","hash":"953a41c20cfb9f55fb6844369f6c6741d1583f0c","modified":1637629934811},{"_id":"public/2019/10/07/ELK_FileBeats/2.png","hash":"92d67a3e43214686c353c60b843c02ad499312af","modified":1637629934811},{"_id":"public/2019/10/07/ELK_FileBeats/11.png","hash":"acdfc638d53fff0d5294eb8de5485c70476d8556","modified":1637629934811},{"_id":"public/2019/10/07/ELK_FileBeats/3.png","hash":"f42fbd3e2e45e1901b663c2471aaf26fb1a130b1","modified":1637629934811},{"_id":"public/2019/10/07/ELK_FileBeats/4.png","hash":"f499b0151b134ffba8c3b35a575d3b5b75a7736a","modified":1637629934811},{"_id":"public/2019/10/07/ELK_FileBeats/5.png","hash":"1806ce631496ce65e064b491fa55002c42c37ff3","modified":1637629934811},{"_id":"public/2019/10/07/ELK_FileBeats/6.png","hash":"03e319daaba930df20d24518b07d60d6741bcd8e","modified":1637629934811},{"_id":"public/2019/10/07/ELK_FileBeats/7.png","hash":"7162a104c3221f34a37db0d0b46249fbd7b4d4db","modified":1637629934811},{"_id":"public/2019/10/07/ELK_FileBeats/8.png","hash":"1437585bf63705a501807940de6863c4ed5686fd","modified":1637629934811},{"_id":"public/2019/10/07/ELK_FileBeats/9.png","hash":"205cc036f604167e5e4a8965661cd9192ace8de1","modified":1637629934811},{"_id":"public/2019/11/04/OracleJDBC/1.png","hash":"9659bff5e1a380f69417d7a49128257d786715be","modified":1637629934811},{"_id":"public/2019/11/04/OracleJDBC/2.png","hash":"85c4a86fa57b391d929c00825ec56cfd2b76311e","modified":1637629934811},{"_id":"public/2019/10/14/ELK日常维护相关/1.png","hash":"fd6ce814339338d7dc9b05f0586ba41bae3948a7","modified":1637629934811},{"_id":"public/2019/11/04/OracleJDBC/3.png","hash":"858d396a0800687ac917f1e91d7ada4023a6f43b","modified":1637629934811},{"_id":"public/2019/10/14/ELK日常维护相关/2.png","hash":"2d0e1de58b5b7c81918aca59c3a4b7d59485422c","modified":1637629934811},{"_id":"public/2019/11/04/OracleJDBC/4.png","hash":"ef7295fd4d9fde43c694f7cc9fa385f3cc1eb69c","modified":1637629934811},{"_id":"public/2019/11/20/Python数据爬虫实践-爬取历年东西部周最佳对比/1.png","hash":"b2709a0dbaedb54e05534b1fb246372b9aa7dd6c","modified":1637629934811},{"_id":"public/2019/11/20/Python数据爬虫实践-爬取历年东西部周最佳对比/2.png","hash":"82a294dedf18d33258af0886fd6aa2aaa56dcd42","modified":1637629934811},{"_id":"public/2019/11/20/Python数据爬虫实践-爬取历年东西部周最佳对比/4.png","hash":"88e04483420f1b5ae7cab61b8f3caedeaf0ac5ee","modified":1637629934811},{"_id":"public/2019/11/20/Python数据爬虫实践-爬取历年东西部周最佳对比/5.png","hash":"14d2988569f484cec58cea21298e5e4665e3ad0e","modified":1637629934811},{"_id":"public/2019/11/20/Python数据爬虫实践-爬取历年东西部周最佳对比/8.png","hash":"26546a053c8a49fea1e9893f9a72ba7a2ebb4abf","modified":1637629934811},{"_id":"public/2020/04/29/azkaban简单搭建/1.png","hash":"0c69fea1bcf2569cf8d45433fc80f2b460df592b","modified":1637629934811},{"_id":"public/2020/04/29/azkaban简单搭建/2.png","hash":"48628b399b48a52d5cb951ab53b35273452d49e8","modified":1637629934811},{"_id":"public/2019/10/08/hexo使用技巧/3.png","hash":"270b27f40649917d057bb0e59c8ca739b1a3e1fd","modified":1637629934811},{"_id":"public/2019/10/08/hexo使用技巧/4.png","hash":"c90c562815bd09bbc9ddb3c62a172fdab522b847","modified":1637629934811},{"_id":"public/2019/10/08/hexo使用技巧/5.png","hash":"26356566412db3ec03a876c36b504a69aa2e93fe","modified":1637629934811},{"_id":"public/2019/10/08/hexo使用技巧/7.png","hash":"5f01a0def272cbd01096dc16ad07c35a7452845e","modified":1637629934811},{"_id":"public/2019/10/08/hexo使用技巧/8.png","hash":"e3ee3ba3af2738147ce6cd2f54fbd589ad90a2d2","modified":1637629934811},{"_id":"public/2019/10/08/hexo使用技巧/9.png","hash":"cebd81bb85d77b9a9171549409ab1ee390588236","modified":1637629934811},{"_id":"public/2020/05/14/jenkins简单搭建/1.png","hash":"f2050a0f5ec45d0274b3b084116bf4297bdfd7b9","modified":1637629934811},{"_id":"public/2019/10/08/利用hexo和github搭建个人博客/1.png","hash":"0133de0656e67b679760006f46448c9837697956","modified":1637629934811},{"_id":"public/2019/10/08/利用hexo和github搭建个人博客/2.png","hash":"53b39d19ca94050b98856ed12e43449801ab75c6","modified":1637629934811},{"_id":"public/2019/10/08/利用hexo和github搭建个人博客/4.png","hash":"65daa20bc2074699de6b134e5c8b77303bcd748a","modified":1637629934811},{"_id":"public/2019/10/14/ELK日常维护相关/3.png","hash":"a7c196449555c806a398f0f79d989b1220bf1b70","modified":1637629934811},{"_id":"public/2019/11/20/Python数据爬虫实践-爬取历年东西部周最佳对比/3.png","hash":"9404bd8271cb97fbe33b2e1d141eb10d541c3210","modified":1637629934811},{"_id":"public/2019/11/20/Python数据爬虫实践-爬取历年东西部周最佳对比/6.png","hash":"a280800a6b91f35d77c0186db8c9148968ca0922","modified":1637629934811},{"_id":"public/2019/10/08/hexo使用技巧/6.png","hash":"daa3fd44aec333c799774676d4d1fe17b9254a8a","modified":1637629934811},{"_id":"public/2019/10/08/hexo使用技巧/2.png","hash":"dc4c49df9458ae63bf695e9797beef73bdb3ae87","modified":1637629934811},{"_id":"public/2020/05/14/jenkins简单搭建/2.png","hash":"989790480aa6cd1cd0a03a1801fa2b427645f966","modified":1637629934811},{"_id":"public/2019/10/08/利用hexo和github搭建个人博客/3.png","hash":"fe767683bb0e68678e197cd021773f68ba0f3c9a","modified":1637629934811},{"_id":"public/2019/11/20/Python数据爬虫实践-爬取历年东西部周最佳对比/11.png","hash":"a02715d3b38d6a8de59d4fa78a5aedfbec53f0b7","modified":1637629934811},{"_id":"public/2019/11/20/Python数据爬虫实践-爬取历年东西部周最佳对比/9.png","hash":"391a949171d93a038d07befc5a3b819669669ae9","modified":1637629934811},{"_id":"public/2019/11/20/Python数据爬虫实践-爬取历年东西部周最佳对比/7.png","hash":"2453862a15297498dbca9d8cf3d01bdcecd1528f","modified":1637629934811},{"_id":"public/2019/11/20/Python数据爬虫实践-爬取历年东西部周最佳对比/10.png","hash":"10b47285ca2b996119f1f8f42837b880d345994b","modified":1637629934811},{"_id":"public/2021/11/19/记一次用代码分辨坑爹保险产品的经历/1.png","hash":"920bfa9fe201dbbc9075eaed3741ec44368a422d","modified":1637629934811},{"_id":"public/2019/10/08/利用hexo和github搭建个人博客/5.png","hash":"8c7ed210d33a08a2d4705996a0a6a42748ac98ff","modified":1637629934811},{"_id":"public/2019/10/08/hexo使用技巧/1.png","hash":"a6b47ecfff86eb276a7ddf5afef467f836584bec","modified":1637629934811},{"_id":"public/lib/hbe.js","hash":"136dba00826bdd086153bf0acb5473aea7183ad1","modified":1637633632424},{"_id":"public/css/hbe.style.css","hash":"b0a0077cb588c0941823905fcc383aa7509ade73","modified":1637633632424}],"Category":[{"name":"学习","_id":"ckwadg4my000273cf6jqecknk"},{"name":"搭建相关","parent":"ckwadg4my000273cf6jqecknk","_id":"ckwadg4nb000h73cf1rsc0vro"},{"name":"运维","parent":"ckwadg4my000273cf6jqecknk","_id":"ckwadg4nm001a73cf10dm9h2z"},{"name":"数据库","parent":"ckwadg4my000273cf6jqecknk","_id":"ckwadg4np001n73cfazo66z40"},{"name":"英语","parent":"ckwadg4my000273cf6jqecknk","_id":"ckwadg4nq001t73cfdaa0d4mq"},{"name":"绩效","_id":"ckwadg4nq001x73cf0eu282kx"}],"Data":[],"Page":[{"title":"categories","date":"2021-11-23T00:46:12.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2021-11-23 08:46:12\ntype: categories\n---\n","updated":"2021-11-23T00:46:39.000Z","path":"categories/index.html","comments":1,"layout":"page","_id":"ckwbdo3p7000025cf6j547umv","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2021-11-23T00:45:50.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2021-11-23 08:45:50\ntype: tags\n---\n","updated":"2021-11-23T00:46:39.000Z","path":"tags/index.html","comments":1,"layout":"page","_id":"ckwbdo3pa000125cf9dli0jng","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"记一次ELK+FileBeats搭建","date":"2019-10-07T07:19:23.000Z","comments":1,"_content":"## 获取ElasticSearch+LogStash+Kibana+FileBeats  \n关于elk搭建的全部产品都可以从elastic的官方网站获取最新版本  \n[elastic官网](https://www.elastic.co/cn/products/)\n\n![](1.png)\n如图所示  \n当前elastic官方已经不再推荐单纯使用elk(ElasticSearch+LogStash+Kibana)三个产品搭建日志平台, 而是在此基础上加上了轻量级的日志收集插件FileBeats.  \n\n## 安装ElasticSearch  \n我们首先获取安装包  \n进入https://www.elastic.co/cn/downloads/elasticsearch  \n\n![](2.png)  \n在Downloads里点击linux就可以下载到用于linux安装的tar包  \n如果是直接在linux安装,使用wget命令即可  \n如 : wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.4.0-linux-x86_64.tar.gz  \n如果需要更旧的历史版本, 点击下面的past release即可\n<!-- more -->\n![](3.png)  \n\n在获取到安装包之后, windows环境需要将tar包传送到linux , 使用scp(windows需要预装git)命令即可  \n如: scp C:/Users/Administrator/Downloads/elasticsearch-7.3.1-linux-x86_64.tar.gz root@100.100.100.100:/home/elk/  \n在linux, 进入到安装包的目录, 使用tar -zxvf命令进行解压  \n如: tar -zxvf elasticsearch-7.3.1-linux-x86_64.tar.gz   \n解压完成后, elasticsearch其实就已经完成了安装  \n### 启动ElasticSearch  \n在启动elasticserach之前需要注意:elasticsearch不可以用root用户启动, 因此, 需要事先在linux建立一个非root用户    \n[linux如何创建一个管理员用户](https://www.cnblogs.com/sunyllove/p/9772053.html)  \n创建完linux用户后, 切换到该用户, 进入到elasticsearch目录, 执行bin/elasticserach即可  \n默认elasticsearch的端口是9200, 打开浏览器, 输入http://elasticsearch地址:9200/  , 出现如下画面, 说明elasticsearch启动成功\n\n![](4.png)\n\n## 安装LogStash\nwindows环境下载和上传到linux的方法不再赘述, 参照前文  \nlinux环境, 参照如下命令即可:  \n1.执行wget https://artifacts.elastic.co/downloads/logstash/logstash-7.4.0.tar.gz  \n2.进入logstash安装包目录, 执行tar -zxvf logstash-7.4.0.tar.gz  \n\n### 配置和启动LogStash  \n1.在启动logstash之前, 需要先新建一个logstash的配置文件  \n参照logstash目录下的config/logstash-sample.config文件(如图), 新建一个logstash-elk.config文件  \n\n![](5.png)  \ninput, 即输入数据的监听端口, 这个一般不需要改.  \noutput, 用于将接收到的数据发送到elasitcsearch. 将hosts改成elasticsearch部署的地址, 如果elasticsearch和logstash是同一台机器, 则不需要更改.   \n注意: 如果多个实例中的FileBeats发送过来的数据希望进入同一个elasticsearch实例, 并根据不同的ip地址划分为不同的索引, 按照如下方式配置  \n\n```\noutput {\n    if \"100.100.100.101\" in [host][ip] {\n        elasticsearch{\n          hosts => [\"localhost:9200\"]\n          index => \"sample1\"\n        }\n    }else if \"100.100.100.102\" in [host][ip] {\n        elasticsearch{\n          hosts => [\"localhost:9200\"]\n          index => \"sample2\"\n        }\n    } else {\n      elasticsearch{\n        hosts => [\"localhost:9200\"]\n        index => \"other\"\n      }\n    }\n\n}\n```\n配置完成后, 启动logstash, 执行bin/logstash -f config/logstash-elk.conf \n\n## 安装Kibana  \nlinux参照如下命令  \n1.wget https://artifacts.elastic.co/downloads/kibana/kibana-7.4.0-linux-x86_64.tar.gz  \n2.进入kibana安装包目录, 执行tar -zxvf kibana-7.4.0-linux-x86_64.tar.gz  \n\n### 配置和启动kibana\n进入config/kibana.yml  \n1.修改server.host为linux机器的实际地址  \n2.修改i18n.locale: \"zh-CN\" 这样kibana界面会显示为中文  \n3.返回kibana主目录, 执行bin/kibana  (注意:kibana也不能用root用户启动)  \n4.打开浏览器, 输入http://kibana地址:5601, 出现如下画面  \n\n![](6.png)\n\n## 安装FileBeats  \n注意: **FileBeats需要安装在所有需要发送日志的服务器上**  \nlinux参照如下命令  \n1.wget https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-7.4.0-linux-x86_64.tar.gz  \n2.tar -zxvf filebeat-7.4.0-linux-x86_64.tar.gz\n\n### 配置和启动FileBeats\n进入filebeats安装目录, vi filebeat.yml  \n1.修改paths下的目录, 输入filebeats所在服务器需要收集的日志地址, 如:  \n\n```\npaths:\n    - /home/sample1/logs/log.*\n    - /home/sample2/logs/log.*\n```\n\n2.修改output.logstash下的内容, 将logstash部署的地址输入, 参照如下:  \n\n```\noutput.logstash:\n  hosts: [\"100.100.100.101:5044\"]\n  enabled: true\n```\n3.进入filebeats主目录, 执行 ./filebeat -e -c filebeat.yml, 启动成功  \n\n## kibana查看日志内容\n将上述Elk+FileBeats都安装搭建完成后, 浏览器进入到kibana的界面.  \n1.打开管理-索引模式-创建索引模式, 进入如下界面:  \n\n![](7.png)  \n2.可以看到有三个索引可以匹配, 在索引模式的输入框内输入自己想要创建的索引, 如other, 然后点击下一步\n\n![](8.png)\n3.选择timestamp, 点击创建索引模式\n\n![](9.png)\n4.创建成功, 点击discover\n\n![](10.png)  \n5.可以看到有一个新的索引other可以选择\n\n![](11.png)\n\n6.到此, elk+filebeats的基本搭建工作就已经完成了","source":"_posts/ELK_FileBeats.md","raw":"---\ntitle: 记一次ELK+FileBeats搭建\ndate: 2019-10-07 15:19:23\ntags: elk\ncomments: true\ncategories: \n- 学习\n- 搭建相关\n---\n## 获取ElasticSearch+LogStash+Kibana+FileBeats  \n关于elk搭建的全部产品都可以从elastic的官方网站获取最新版本  \n[elastic官网](https://www.elastic.co/cn/products/)\n\n![](1.png)\n如图所示  \n当前elastic官方已经不再推荐单纯使用elk(ElasticSearch+LogStash+Kibana)三个产品搭建日志平台, 而是在此基础上加上了轻量级的日志收集插件FileBeats.  \n\n## 安装ElasticSearch  \n我们首先获取安装包  \n进入https://www.elastic.co/cn/downloads/elasticsearch  \n\n![](2.png)  \n在Downloads里点击linux就可以下载到用于linux安装的tar包  \n如果是直接在linux安装,使用wget命令即可  \n如 : wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.4.0-linux-x86_64.tar.gz  \n如果需要更旧的历史版本, 点击下面的past release即可\n<!-- more -->\n![](3.png)  \n\n在获取到安装包之后, windows环境需要将tar包传送到linux , 使用scp(windows需要预装git)命令即可  \n如: scp C:/Users/Administrator/Downloads/elasticsearch-7.3.1-linux-x86_64.tar.gz root@100.100.100.100:/home/elk/  \n在linux, 进入到安装包的目录, 使用tar -zxvf命令进行解压  \n如: tar -zxvf elasticsearch-7.3.1-linux-x86_64.tar.gz   \n解压完成后, elasticsearch其实就已经完成了安装  \n### 启动ElasticSearch  \n在启动elasticserach之前需要注意:elasticsearch不可以用root用户启动, 因此, 需要事先在linux建立一个非root用户    \n[linux如何创建一个管理员用户](https://www.cnblogs.com/sunyllove/p/9772053.html)  \n创建完linux用户后, 切换到该用户, 进入到elasticsearch目录, 执行bin/elasticserach即可  \n默认elasticsearch的端口是9200, 打开浏览器, 输入http://elasticsearch地址:9200/  , 出现如下画面, 说明elasticsearch启动成功\n\n![](4.png)\n\n## 安装LogStash\nwindows环境下载和上传到linux的方法不再赘述, 参照前文  \nlinux环境, 参照如下命令即可:  \n1.执行wget https://artifacts.elastic.co/downloads/logstash/logstash-7.4.0.tar.gz  \n2.进入logstash安装包目录, 执行tar -zxvf logstash-7.4.0.tar.gz  \n\n### 配置和启动LogStash  \n1.在启动logstash之前, 需要先新建一个logstash的配置文件  \n参照logstash目录下的config/logstash-sample.config文件(如图), 新建一个logstash-elk.config文件  \n\n![](5.png)  \ninput, 即输入数据的监听端口, 这个一般不需要改.  \noutput, 用于将接收到的数据发送到elasitcsearch. 将hosts改成elasticsearch部署的地址, 如果elasticsearch和logstash是同一台机器, 则不需要更改.   \n注意: 如果多个实例中的FileBeats发送过来的数据希望进入同一个elasticsearch实例, 并根据不同的ip地址划分为不同的索引, 按照如下方式配置  \n\n```\noutput {\n    if \"100.100.100.101\" in [host][ip] {\n        elasticsearch{\n          hosts => [\"localhost:9200\"]\n          index => \"sample1\"\n        }\n    }else if \"100.100.100.102\" in [host][ip] {\n        elasticsearch{\n          hosts => [\"localhost:9200\"]\n          index => \"sample2\"\n        }\n    } else {\n      elasticsearch{\n        hosts => [\"localhost:9200\"]\n        index => \"other\"\n      }\n    }\n\n}\n```\n配置完成后, 启动logstash, 执行bin/logstash -f config/logstash-elk.conf \n\n## 安装Kibana  \nlinux参照如下命令  \n1.wget https://artifacts.elastic.co/downloads/kibana/kibana-7.4.0-linux-x86_64.tar.gz  \n2.进入kibana安装包目录, 执行tar -zxvf kibana-7.4.0-linux-x86_64.tar.gz  \n\n### 配置和启动kibana\n进入config/kibana.yml  \n1.修改server.host为linux机器的实际地址  \n2.修改i18n.locale: \"zh-CN\" 这样kibana界面会显示为中文  \n3.返回kibana主目录, 执行bin/kibana  (注意:kibana也不能用root用户启动)  \n4.打开浏览器, 输入http://kibana地址:5601, 出现如下画面  \n\n![](6.png)\n\n## 安装FileBeats  \n注意: **FileBeats需要安装在所有需要发送日志的服务器上**  \nlinux参照如下命令  \n1.wget https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-7.4.0-linux-x86_64.tar.gz  \n2.tar -zxvf filebeat-7.4.0-linux-x86_64.tar.gz\n\n### 配置和启动FileBeats\n进入filebeats安装目录, vi filebeat.yml  \n1.修改paths下的目录, 输入filebeats所在服务器需要收集的日志地址, 如:  \n\n```\npaths:\n    - /home/sample1/logs/log.*\n    - /home/sample2/logs/log.*\n```\n\n2.修改output.logstash下的内容, 将logstash部署的地址输入, 参照如下:  \n\n```\noutput.logstash:\n  hosts: [\"100.100.100.101:5044\"]\n  enabled: true\n```\n3.进入filebeats主目录, 执行 ./filebeat -e -c filebeat.yml, 启动成功  \n\n## kibana查看日志内容\n将上述Elk+FileBeats都安装搭建完成后, 浏览器进入到kibana的界面.  \n1.打开管理-索引模式-创建索引模式, 进入如下界面:  \n\n![](7.png)  \n2.可以看到有三个索引可以匹配, 在索引模式的输入框内输入自己想要创建的索引, 如other, 然后点击下一步\n\n![](8.png)\n3.选择timestamp, 点击创建索引模式\n\n![](9.png)\n4.创建成功, 点击discover\n\n![](10.png)  \n5.可以看到有一个新的索引other可以选择\n\n![](11.png)\n\n6.到此, elk+filebeats的基本搭建工作就已经完成了","slug":"ELK_FileBeats","published":1,"updated":"2021-11-23T01:57:16.000Z","_id":"ckwadg4ms000073cf2qzub2hb","layout":"post","photos":[],"link":"","content":"<h2 id=\"获取ElasticSearch-LogStash-Kibana-FileBeats\"><a href=\"#获取ElasticSearch-LogStash-Kibana-FileBeats\" class=\"headerlink\" title=\"获取ElasticSearch+LogStash+Kibana+FileBeats\"></a>获取ElasticSearch+LogStash+Kibana+FileBeats</h2><p>关于elk搭建的全部产品都可以从elastic的官方网站获取最新版本<br><a href=\"https://www.elastic.co/cn/products/\">elastic官网</a></p>\n<p><img src=\"/2019/10/07/ELK_FileBeats/1.png\"><br>如图所示<br>当前elastic官方已经不再推荐单纯使用elk(ElasticSearch+LogStash+Kibana)三个产品搭建日志平台, 而是在此基础上加上了轻量级的日志收集插件FileBeats.  </p>\n<h2 id=\"安装ElasticSearch\"><a href=\"#安装ElasticSearch\" class=\"headerlink\" title=\"安装ElasticSearch\"></a>安装ElasticSearch</h2><p>我们首先获取安装包<br>进入<a href=\"https://www.elastic.co/cn/downloads/elasticsearch\">https://www.elastic.co/cn/downloads/elasticsearch</a>  </p>\n<p><img src=\"/2019/10/07/ELK_FileBeats/2.png\"><br>在Downloads里点击linux就可以下载到用于linux安装的tar包<br>如果是直接在linux安装,使用wget命令即可<br>如 : wget <a href=\"https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.4.0-linux-x86_64.tar.gz\">https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.4.0-linux-x86_64.tar.gz</a><br>如果需要更旧的历史版本, 点击下面的past release即可</p>\n<span id=\"more\"></span>\n<p><img src=\"/2019/10/07/ELK_FileBeats/3.png\">  </p>\n<p>在获取到安装包之后, windows环境需要将tar包传送到linux , 使用scp(windows需要预装git)命令即可<br>如: scp C:/Users/Administrator/Downloads/elasticsearch-7.3.1-linux-x86_64.tar.gz <a href=\"mailto:&#114;&#x6f;&#x6f;&#x74;&#64;&#x31;&#48;&#x30;&#x2e;&#x31;&#x30;&#x30;&#x2e;&#49;&#48;&#48;&#46;&#x31;&#48;&#48;\">&#114;&#x6f;&#x6f;&#x74;&#64;&#x31;&#48;&#x30;&#x2e;&#x31;&#x30;&#x30;&#x2e;&#49;&#48;&#48;&#46;&#x31;&#48;&#48;</a>:/home/elk/<br>在linux, 进入到安装包的目录, 使用tar -zxvf命令进行解压<br>如: tar -zxvf elasticsearch-7.3.1-linux-x86_64.tar.gz<br>解压完成后, elasticsearch其实就已经完成了安装  </p>\n<h3 id=\"启动ElasticSearch\"><a href=\"#启动ElasticSearch\" class=\"headerlink\" title=\"启动ElasticSearch\"></a>启动ElasticSearch</h3><p>在启动elasticserach之前需要注意:elasticsearch不可以用root用户启动, 因此, 需要事先在linux建立一个非root用户<br><a href=\"https://www.cnblogs.com/sunyllove/p/9772053.html\">linux如何创建一个管理员用户</a><br>创建完linux用户后, 切换到该用户, 进入到elasticsearch目录, 执行bin/elasticserach即可<br>默认elasticsearch的端口是9200, 打开浏览器, 输入<a href=\"http://elasticsearch地址:9200/\">http://elasticsearch地址:9200/</a>  , 出现如下画面, 说明elasticsearch启动成功</p>\n<p><img src=\"/2019/10/07/ELK_FileBeats/4.png\"></p>\n<h2 id=\"安装LogStash\"><a href=\"#安装LogStash\" class=\"headerlink\" title=\"安装LogStash\"></a>安装LogStash</h2><p>windows环境下载和上传到linux的方法不再赘述, 参照前文<br>linux环境, 参照如下命令即可:<br>1.执行wget <a href=\"https://artifacts.elastic.co/downloads/logstash/logstash-7.4.0.tar.gz\">https://artifacts.elastic.co/downloads/logstash/logstash-7.4.0.tar.gz</a><br>2.进入logstash安装包目录, 执行tar -zxvf logstash-7.4.0.tar.gz  </p>\n<h3 id=\"配置和启动LogStash\"><a href=\"#配置和启动LogStash\" class=\"headerlink\" title=\"配置和启动LogStash\"></a>配置和启动LogStash</h3><p>1.在启动logstash之前, 需要先新建一个logstash的配置文件<br>参照logstash目录下的config/logstash-sample.config文件(如图), 新建一个logstash-elk.config文件  </p>\n<p><img src=\"/2019/10/07/ELK_FileBeats/5.png\"><br>input, 即输入数据的监听端口, 这个一般不需要改.<br>output, 用于将接收到的数据发送到elasitcsearch. 将hosts改成elasticsearch部署的地址, 如果elasticsearch和logstash是同一台机器, 则不需要更改.<br>注意: 如果多个实例中的FileBeats发送过来的数据希望进入同一个elasticsearch实例, 并根据不同的ip地址划分为不同的索引, 按照如下方式配置  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">output &#123;</span><br><span class=\"line\">    if &quot;100.100.100.101&quot; in [host][ip] &#123;</span><br><span class=\"line\">        elasticsearch&#123;</span><br><span class=\"line\">          hosts =&gt; [&quot;localhost:9200&quot;]</span><br><span class=\"line\">          index =&gt; &quot;sample1&quot;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;else if &quot;100.100.100.102&quot; in [host][ip] &#123;</span><br><span class=\"line\">        elasticsearch&#123;</span><br><span class=\"line\">          hosts =&gt; [&quot;localhost:9200&quot;]</span><br><span class=\"line\">          index =&gt; &quot;sample2&quot;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">      elasticsearch&#123;</span><br><span class=\"line\">        hosts =&gt; [&quot;localhost:9200&quot;]</span><br><span class=\"line\">        index =&gt; &quot;other&quot;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>配置完成后, 启动logstash, 执行bin/logstash -f config/logstash-elk.conf </p>\n<h2 id=\"安装Kibana\"><a href=\"#安装Kibana\" class=\"headerlink\" title=\"安装Kibana\"></a>安装Kibana</h2><p>linux参照如下命令<br>1.wget <a href=\"https://artifacts.elastic.co/downloads/kibana/kibana-7.4.0-linux-x86_64.tar.gz\">https://artifacts.elastic.co/downloads/kibana/kibana-7.4.0-linux-x86_64.tar.gz</a><br>2.进入kibana安装包目录, 执行tar -zxvf kibana-7.4.0-linux-x86_64.tar.gz  </p>\n<h3 id=\"配置和启动kibana\"><a href=\"#配置和启动kibana\" class=\"headerlink\" title=\"配置和启动kibana\"></a>配置和启动kibana</h3><p>进入config/kibana.yml<br>1.修改server.host为linux机器的实际地址<br>2.修改i18n.locale: “zh-CN” 这样kibana界面会显示为中文<br>3.返回kibana主目录, 执行bin/kibana  (注意:kibana也不能用root用户启动)<br>4.打开浏览器, 输入<a href=\"http://kibana地址:5601/\">http://kibana地址:5601</a>, 出现如下画面  </p>\n<p><img src=\"/2019/10/07/ELK_FileBeats/6.png\"></p>\n<h2 id=\"安装FileBeats\"><a href=\"#安装FileBeats\" class=\"headerlink\" title=\"安装FileBeats\"></a>安装FileBeats</h2><p>注意: <strong>FileBeats需要安装在所有需要发送日志的服务器上</strong><br>linux参照如下命令<br>1.wget <a href=\"https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-7.4.0-linux-x86_64.tar.gz\">https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-7.4.0-linux-x86_64.tar.gz</a><br>2.tar -zxvf filebeat-7.4.0-linux-x86_64.tar.gz</p>\n<h3 id=\"配置和启动FileBeats\"><a href=\"#配置和启动FileBeats\" class=\"headerlink\" title=\"配置和启动FileBeats\"></a>配置和启动FileBeats</h3><p>进入filebeats安装目录, vi filebeat.yml<br>1.修改paths下的目录, 输入filebeats所在服务器需要收集的日志地址, 如:  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">paths:</span><br><span class=\"line\">    - /home/sample1/logs/log.*</span><br><span class=\"line\">    - /home/sample2/logs/log.*</span><br></pre></td></tr></table></figure>\n\n<p>2.修改output.logstash下的内容, 将logstash部署的地址输入, 参照如下:  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">output.logstash:</span><br><span class=\"line\">  hosts: [&quot;100.100.100.101:5044&quot;]</span><br><span class=\"line\">  enabled: true</span><br></pre></td></tr></table></figure>\n<p>3.进入filebeats主目录, 执行 ./filebeat -e -c filebeat.yml, 启动成功  </p>\n<h2 id=\"kibana查看日志内容\"><a href=\"#kibana查看日志内容\" class=\"headerlink\" title=\"kibana查看日志内容\"></a>kibana查看日志内容</h2><p>将上述Elk+FileBeats都安装搭建完成后, 浏览器进入到kibana的界面.<br>1.打开管理-索引模式-创建索引模式, 进入如下界面:  </p>\n<p><img src=\"/2019/10/07/ELK_FileBeats/7.png\"><br>2.可以看到有三个索引可以匹配, 在索引模式的输入框内输入自己想要创建的索引, 如other, 然后点击下一步</p>\n<p><img src=\"/2019/10/07/ELK_FileBeats/8.png\"><br>3.选择timestamp, 点击创建索引模式</p>\n<p><img src=\"/2019/10/07/ELK_FileBeats/9.png\"><br>4.创建成功, 点击discover</p>\n<p><img src=\"/2019/10/07/ELK_FileBeats/10.png\"><br>5.可以看到有一个新的索引other可以选择</p>\n<p><img src=\"/2019/10/07/ELK_FileBeats/11.png\"></p>\n<p>6.到此, elk+filebeats的基本搭建工作就已经完成了</p>\n","site":{"data":{}},"excerpt":"<h2 id=\"获取ElasticSearch-LogStash-Kibana-FileBeats\"><a href=\"#获取ElasticSearch-LogStash-Kibana-FileBeats\" class=\"headerlink\" title=\"获取ElasticSearch+LogStash+Kibana+FileBeats\"></a>获取ElasticSearch+LogStash+Kibana+FileBeats</h2><p>关于elk搭建的全部产品都可以从elastic的官方网站获取最新版本<br><a href=\"https://www.elastic.co/cn/products/\">elastic官网</a></p>\n<p><img src=\"/2019/10/07/ELK_FileBeats/1.png\"><br>如图所示<br>当前elastic官方已经不再推荐单纯使用elk(ElasticSearch+LogStash+Kibana)三个产品搭建日志平台, 而是在此基础上加上了轻量级的日志收集插件FileBeats.  </p>\n<h2 id=\"安装ElasticSearch\"><a href=\"#安装ElasticSearch\" class=\"headerlink\" title=\"安装ElasticSearch\"></a>安装ElasticSearch</h2><p>我们首先获取安装包<br>进入<a href=\"https://www.elastic.co/cn/downloads/elasticsearch\">https://www.elastic.co/cn/downloads/elasticsearch</a>  </p>\n<p><img src=\"/2019/10/07/ELK_FileBeats/2.png\"><br>在Downloads里点击linux就可以下载到用于linux安装的tar包<br>如果是直接在linux安装,使用wget命令即可<br>如 : wget <a href=\"https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.4.0-linux-x86_64.tar.gz\">https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.4.0-linux-x86_64.tar.gz</a><br>如果需要更旧的历史版本, 点击下面的past release即可</p>","more":"<p><img src=\"/2019/10/07/ELK_FileBeats/3.png\">  </p>\n<p>在获取到安装包之后, windows环境需要将tar包传送到linux , 使用scp(windows需要预装git)命令即可<br>如: scp C:/Users/Administrator/Downloads/elasticsearch-7.3.1-linux-x86_64.tar.gz <a href=\"mailto:&#114;&#x6f;&#x6f;&#x74;&#64;&#x31;&#48;&#x30;&#x2e;&#x31;&#x30;&#x30;&#x2e;&#49;&#48;&#48;&#46;&#x31;&#48;&#48;\">&#114;&#x6f;&#x6f;&#x74;&#64;&#x31;&#48;&#x30;&#x2e;&#x31;&#x30;&#x30;&#x2e;&#49;&#48;&#48;&#46;&#x31;&#48;&#48;</a>:/home/elk/<br>在linux, 进入到安装包的目录, 使用tar -zxvf命令进行解压<br>如: tar -zxvf elasticsearch-7.3.1-linux-x86_64.tar.gz<br>解压完成后, elasticsearch其实就已经完成了安装  </p>\n<h3 id=\"启动ElasticSearch\"><a href=\"#启动ElasticSearch\" class=\"headerlink\" title=\"启动ElasticSearch\"></a>启动ElasticSearch</h3><p>在启动elasticserach之前需要注意:elasticsearch不可以用root用户启动, 因此, 需要事先在linux建立一个非root用户<br><a href=\"https://www.cnblogs.com/sunyllove/p/9772053.html\">linux如何创建一个管理员用户</a><br>创建完linux用户后, 切换到该用户, 进入到elasticsearch目录, 执行bin/elasticserach即可<br>默认elasticsearch的端口是9200, 打开浏览器, 输入<a href=\"http://elasticsearch地址:9200/\">http://elasticsearch地址:9200/</a>  , 出现如下画面, 说明elasticsearch启动成功</p>\n<p><img src=\"/2019/10/07/ELK_FileBeats/4.png\"></p>\n<h2 id=\"安装LogStash\"><a href=\"#安装LogStash\" class=\"headerlink\" title=\"安装LogStash\"></a>安装LogStash</h2><p>windows环境下载和上传到linux的方法不再赘述, 参照前文<br>linux环境, 参照如下命令即可:<br>1.执行wget <a href=\"https://artifacts.elastic.co/downloads/logstash/logstash-7.4.0.tar.gz\">https://artifacts.elastic.co/downloads/logstash/logstash-7.4.0.tar.gz</a><br>2.进入logstash安装包目录, 执行tar -zxvf logstash-7.4.0.tar.gz  </p>\n<h3 id=\"配置和启动LogStash\"><a href=\"#配置和启动LogStash\" class=\"headerlink\" title=\"配置和启动LogStash\"></a>配置和启动LogStash</h3><p>1.在启动logstash之前, 需要先新建一个logstash的配置文件<br>参照logstash目录下的config/logstash-sample.config文件(如图), 新建一个logstash-elk.config文件  </p>\n<p><img src=\"/2019/10/07/ELK_FileBeats/5.png\"><br>input, 即输入数据的监听端口, 这个一般不需要改.<br>output, 用于将接收到的数据发送到elasitcsearch. 将hosts改成elasticsearch部署的地址, 如果elasticsearch和logstash是同一台机器, 则不需要更改.<br>注意: 如果多个实例中的FileBeats发送过来的数据希望进入同一个elasticsearch实例, 并根据不同的ip地址划分为不同的索引, 按照如下方式配置  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">output &#123;</span><br><span class=\"line\">    if &quot;100.100.100.101&quot; in [host][ip] &#123;</span><br><span class=\"line\">        elasticsearch&#123;</span><br><span class=\"line\">          hosts =&gt; [&quot;localhost:9200&quot;]</span><br><span class=\"line\">          index =&gt; &quot;sample1&quot;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;else if &quot;100.100.100.102&quot; in [host][ip] &#123;</span><br><span class=\"line\">        elasticsearch&#123;</span><br><span class=\"line\">          hosts =&gt; [&quot;localhost:9200&quot;]</span><br><span class=\"line\">          index =&gt; &quot;sample2&quot;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">      elasticsearch&#123;</span><br><span class=\"line\">        hosts =&gt; [&quot;localhost:9200&quot;]</span><br><span class=\"line\">        index =&gt; &quot;other&quot;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>配置完成后, 启动logstash, 执行bin/logstash -f config/logstash-elk.conf </p>\n<h2 id=\"安装Kibana\"><a href=\"#安装Kibana\" class=\"headerlink\" title=\"安装Kibana\"></a>安装Kibana</h2><p>linux参照如下命令<br>1.wget <a href=\"https://artifacts.elastic.co/downloads/kibana/kibana-7.4.0-linux-x86_64.tar.gz\">https://artifacts.elastic.co/downloads/kibana/kibana-7.4.0-linux-x86_64.tar.gz</a><br>2.进入kibana安装包目录, 执行tar -zxvf kibana-7.4.0-linux-x86_64.tar.gz  </p>\n<h3 id=\"配置和启动kibana\"><a href=\"#配置和启动kibana\" class=\"headerlink\" title=\"配置和启动kibana\"></a>配置和启动kibana</h3><p>进入config/kibana.yml<br>1.修改server.host为linux机器的实际地址<br>2.修改i18n.locale: “zh-CN” 这样kibana界面会显示为中文<br>3.返回kibana主目录, 执行bin/kibana  (注意:kibana也不能用root用户启动)<br>4.打开浏览器, 输入<a href=\"http://kibana地址:5601/\">http://kibana地址:5601</a>, 出现如下画面  </p>\n<p><img src=\"/2019/10/07/ELK_FileBeats/6.png\"></p>\n<h2 id=\"安装FileBeats\"><a href=\"#安装FileBeats\" class=\"headerlink\" title=\"安装FileBeats\"></a>安装FileBeats</h2><p>注意: <strong>FileBeats需要安装在所有需要发送日志的服务器上</strong><br>linux参照如下命令<br>1.wget <a href=\"https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-7.4.0-linux-x86_64.tar.gz\">https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-7.4.0-linux-x86_64.tar.gz</a><br>2.tar -zxvf filebeat-7.4.0-linux-x86_64.tar.gz</p>\n<h3 id=\"配置和启动FileBeats\"><a href=\"#配置和启动FileBeats\" class=\"headerlink\" title=\"配置和启动FileBeats\"></a>配置和启动FileBeats</h3><p>进入filebeats安装目录, vi filebeat.yml<br>1.修改paths下的目录, 输入filebeats所在服务器需要收集的日志地址, 如:  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">paths:</span><br><span class=\"line\">    - /home/sample1/logs/log.*</span><br><span class=\"line\">    - /home/sample2/logs/log.*</span><br></pre></td></tr></table></figure>\n\n<p>2.修改output.logstash下的内容, 将logstash部署的地址输入, 参照如下:  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">output.logstash:</span><br><span class=\"line\">  hosts: [&quot;100.100.100.101:5044&quot;]</span><br><span class=\"line\">  enabled: true</span><br></pre></td></tr></table></figure>\n<p>3.进入filebeats主目录, 执行 ./filebeat -e -c filebeat.yml, 启动成功  </p>\n<h2 id=\"kibana查看日志内容\"><a href=\"#kibana查看日志内容\" class=\"headerlink\" title=\"kibana查看日志内容\"></a>kibana查看日志内容</h2><p>将上述Elk+FileBeats都安装搭建完成后, 浏览器进入到kibana的界面.<br>1.打开管理-索引模式-创建索引模式, 进入如下界面:  </p>\n<p><img src=\"/2019/10/07/ELK_FileBeats/7.png\"><br>2.可以看到有三个索引可以匹配, 在索引模式的输入框内输入自己想要创建的索引, 如other, 然后点击下一步</p>\n<p><img src=\"/2019/10/07/ELK_FileBeats/8.png\"><br>3.选择timestamp, 点击创建索引模式</p>\n<p><img src=\"/2019/10/07/ELK_FileBeats/9.png\"><br>4.创建成功, 点击discover</p>\n<p><img src=\"/2019/10/07/ELK_FileBeats/10.png\"><br>5.可以看到有一个新的索引other可以选择</p>\n<p><img src=\"/2019/10/07/ELK_FileBeats/11.png\"></p>\n<p>6.到此, elk+filebeats的基本搭建工作就已经完成了</p>"},{"title":"ELK日常维护相关","date":"2019-10-14T05:25:13.000Z","comments":1,"_content":"## 配置启动ELK+FileBeats后台运行, 不随着窗口关闭而关闭  \n只要在后面加上&即可, 如  \n```shell\nbin/logstash -f config/log4j-es.conf &\n```\n注意: 退出时使用Ctrl+D命令, 直接关闭窗口依然有可能使得进程关闭  \n\n## LogStash自动重新加载配置  \n启动logstash时在后面加上命令--config.reload.automatic  \n```shell\nbin/logstash -f config/log4j-es.conf --config.reload.automatic &\n```\n\n## 重新发送filebeat抓取的内容  \n1.删除registry下的data.json  \n如:  \n```shell\nrm -rf /home/elk/filebeats/filebeat-7.3.1-linux-x86_64/data/registry/filebeat\n```\n2.重启filebeat  \n如果存在正在运行的filebeat, 先kill掉  \n```shell\nps aux | grep filebeat  \nkill -s 9 pid\n```\n然后执行  \n```shell\n./filebeat -e -c filebeat.yml\n```\n<!-- more -->\n## 设置索引内容30天过期删除  \n本来我理解的理论上应该可以用索引的生命周期来实现, 但是半天没整明白, 所以现在\n是简单粗暴的使用linux的cron任务来实现, 更具体的cron配置详见[cron详解](https://blog.csdn.net/mengzuchao/article/details/81172305)  \n1.编辑shell脚本, 文件名为removeDataByTime.sh, 内容如下  \n```shell\n#!/bin/bash\nlimit_date=30\nfor var in `curl 'localhost:9200/_cat/indices' | awk '!/kibana*/ {print $3}'`\ndo\n  curl -H \"Content-Type:application/json\" -X POST -d '{\"query\": {\"range\": {\"@timestamp\": {\"lt\": \"now-'${limit_date}'d/d\"}}}}' \"http://localhost:9200/${var}/_delete_by_query\"\ndone\n```\n2.编辑cron文件, 执行crantab -e, 打开crontab配置文件  \n加上刚才的shell脚本, 设置每天0点15分执行  \n```shell\n15 00 * * * /home/elk/removeDataByTime.sh\n```\n设置cron重新启动, 执行/sbin/service crond restart  \n\n3.查看cron执行情况  \n查看cron任务列表 : crontab -l  \n查看cron执行日志 : grep 'removeDataByTime' /var/log/cron  \n\n## 设置LogStash不写入指定的内容\n\n在logstash中写入如下内容即可 ：\n\n```shell\nfilter {\n\t# 过滤message中的内容 , 注意drop后面有一个空格\n    if \"somethingA\" in [message] {\n      drop {}\n    }\n    # 过滤tags中的内容\n    if \"somethingB\" in [tags] {\n      drop {}\n    }\n}\n```\n\n\n\n## 设置索引别名来实现中文索引搜索\n\n有时候需要在搜索页面使用中文的索引名，但是在ES中不支持直接用中文名来命名索引，原因我认为应该是跟索引的Btree算法有关。\n\n但是我们可以给索引设置别名来在搜索页面使用中文的索引来搜索。\n\n可以按照如下方式来设置\n\n- 在postman发送如下请求（前提：在ElasticSearch中已经存在datadocking和activity-provider两个索引）：\n\n```json\nPOST: 192.168.15.161:9200/_aliases\n{\n    \"actions\": [\n        {\n            \"add\": {\n                \"alias\": \"外部对接\",\n                \"index\": \"datadocking\"\n            }\n        },\n        {\n            \"add\": {\n                \"alias\": \"微商城活动\",\n                \"index\": \"activity-provider\"\n            }\n        }\n    ]\n}\n```\n\n- 进入项目的索引模式\n\n  ![](1.png)\n\n  输入刚刚设置的中文名，就可以直接对应到英文的索引名，然后按照步骤创建索引模式\n\n  ![](2.png)\n\n  在搜索界面就可以使用中文的索引名来搜索\n\n  ![](3.png)","source":"_posts/ELK日常维护相关.md","raw":"---\ntitle: ELK日常维护相关\ndate: 2019-10-14 13:25:13\ntags: \n- elk\ncomments: true\ncategories: \n- 学习\n- 搭建相关\n---\n## 配置启动ELK+FileBeats后台运行, 不随着窗口关闭而关闭  \n只要在后面加上&即可, 如  \n```shell\nbin/logstash -f config/log4j-es.conf &\n```\n注意: 退出时使用Ctrl+D命令, 直接关闭窗口依然有可能使得进程关闭  \n\n## LogStash自动重新加载配置  \n启动logstash时在后面加上命令--config.reload.automatic  \n```shell\nbin/logstash -f config/log4j-es.conf --config.reload.automatic &\n```\n\n## 重新发送filebeat抓取的内容  \n1.删除registry下的data.json  \n如:  \n```shell\nrm -rf /home/elk/filebeats/filebeat-7.3.1-linux-x86_64/data/registry/filebeat\n```\n2.重启filebeat  \n如果存在正在运行的filebeat, 先kill掉  \n```shell\nps aux | grep filebeat  \nkill -s 9 pid\n```\n然后执行  \n```shell\n./filebeat -e -c filebeat.yml\n```\n<!-- more -->\n## 设置索引内容30天过期删除  \n本来我理解的理论上应该可以用索引的生命周期来实现, 但是半天没整明白, 所以现在\n是简单粗暴的使用linux的cron任务来实现, 更具体的cron配置详见[cron详解](https://blog.csdn.net/mengzuchao/article/details/81172305)  \n1.编辑shell脚本, 文件名为removeDataByTime.sh, 内容如下  \n```shell\n#!/bin/bash\nlimit_date=30\nfor var in `curl 'localhost:9200/_cat/indices' | awk '!/kibana*/ {print $3}'`\ndo\n  curl -H \"Content-Type:application/json\" -X POST -d '{\"query\": {\"range\": {\"@timestamp\": {\"lt\": \"now-'${limit_date}'d/d\"}}}}' \"http://localhost:9200/${var}/_delete_by_query\"\ndone\n```\n2.编辑cron文件, 执行crantab -e, 打开crontab配置文件  \n加上刚才的shell脚本, 设置每天0点15分执行  \n```shell\n15 00 * * * /home/elk/removeDataByTime.sh\n```\n设置cron重新启动, 执行/sbin/service crond restart  \n\n3.查看cron执行情况  \n查看cron任务列表 : crontab -l  \n查看cron执行日志 : grep 'removeDataByTime' /var/log/cron  \n\n## 设置LogStash不写入指定的内容\n\n在logstash中写入如下内容即可 ：\n\n```shell\nfilter {\n\t# 过滤message中的内容 , 注意drop后面有一个空格\n    if \"somethingA\" in [message] {\n      drop {}\n    }\n    # 过滤tags中的内容\n    if \"somethingB\" in [tags] {\n      drop {}\n    }\n}\n```\n\n\n\n## 设置索引别名来实现中文索引搜索\n\n有时候需要在搜索页面使用中文的索引名，但是在ES中不支持直接用中文名来命名索引，原因我认为应该是跟索引的Btree算法有关。\n\n但是我们可以给索引设置别名来在搜索页面使用中文的索引来搜索。\n\n可以按照如下方式来设置\n\n- 在postman发送如下请求（前提：在ElasticSearch中已经存在datadocking和activity-provider两个索引）：\n\n```json\nPOST: 192.168.15.161:9200/_aliases\n{\n    \"actions\": [\n        {\n            \"add\": {\n                \"alias\": \"外部对接\",\n                \"index\": \"datadocking\"\n            }\n        },\n        {\n            \"add\": {\n                \"alias\": \"微商城活动\",\n                \"index\": \"activity-provider\"\n            }\n        }\n    ]\n}\n```\n\n- 进入项目的索引模式\n\n  ![](1.png)\n\n  输入刚刚设置的中文名，就可以直接对应到英文的索引名，然后按照步骤创建索引模式\n\n  ![](2.png)\n\n  在搜索界面就可以使用中文的索引名来搜索\n\n  ![](3.png)","slug":"ELK日常维护相关","published":1,"updated":"2021-11-23T02:00:17.000Z","_id":"ckwadg4mx000173cfdyyrdfic","layout":"post","photos":[],"link":"","content":"<h2 id=\"配置启动ELK-FileBeats后台运行-不随着窗口关闭而关闭\"><a href=\"#配置启动ELK-FileBeats后台运行-不随着窗口关闭而关闭\" class=\"headerlink\" title=\"配置启动ELK+FileBeats后台运行, 不随着窗口关闭而关闭\"></a>配置启动ELK+FileBeats后台运行, 不随着窗口关闭而关闭</h2><p>只要在后面加上&amp;即可, 如  </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bin/logstash -f config/log4j-es.conf &amp;</span><br></pre></td></tr></table></figure>\n<p>注意: 退出时使用Ctrl+D命令, 直接关闭窗口依然有可能使得进程关闭  </p>\n<h2 id=\"LogStash自动重新加载配置\"><a href=\"#LogStash自动重新加载配置\" class=\"headerlink\" title=\"LogStash自动重新加载配置\"></a>LogStash自动重新加载配置</h2><p>启动logstash时在后面加上命令–config.reload.automatic  </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bin/logstash -f config/log4j-es.conf --config.reload.automatic &amp;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"重新发送filebeat抓取的内容\"><a href=\"#重新发送filebeat抓取的内容\" class=\"headerlink\" title=\"重新发送filebeat抓取的内容\"></a>重新发送filebeat抓取的内容</h2><p>1.删除registry下的data.json<br>如:  </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rm -rf /home/elk/filebeats/filebeat-7.3.1-linux-x86_64/data/registry/filebeat</span><br></pre></td></tr></table></figure>\n<p>2.重启filebeat<br>如果存在正在运行的filebeat, 先kill掉  </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps aux | grep filebeat  </span><br><span class=\"line\">kill -s 9 pid</span><br></pre></td></tr></table></figure>\n<p>然后执行  </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./filebeat -e -c filebeat.yml</span><br></pre></td></tr></table></figure>\n<span id=\"more\"></span>\n<h2 id=\"设置索引内容30天过期删除\"><a href=\"#设置索引内容30天过期删除\" class=\"headerlink\" title=\"设置索引内容30天过期删除\"></a>设置索引内容30天过期删除</h2><p>本来我理解的理论上应该可以用索引的生命周期来实现, 但是半天没整明白, 所以现在<br>是简单粗暴的使用linux的cron任务来实现, 更具体的cron配置详见<a href=\"https://blog.csdn.net/mengzuchao/article/details/81172305\">cron详解</a><br>1.编辑shell脚本, 文件名为removeDataByTime.sh, 内容如下  </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">!/bin/bash</span></span><br><span class=\"line\">limit_date=30</span><br><span class=\"line\">for var in `curl &#x27;localhost:9200/_cat/indices&#x27; | awk &#x27;!/kibana*/ &#123;print $3&#125;&#x27;`</span><br><span class=\"line\">do</span><br><span class=\"line\">  curl -H &quot;Content-Type:application/json&quot; -X POST -d &#x27;&#123;&quot;query&quot;: &#123;&quot;range&quot;: &#123;&quot;@timestamp&quot;: &#123;&quot;lt&quot;: &quot;now-&#x27;$&#123;limit_date&#125;&#x27;d/d&quot;&#125;&#125;&#125;&#125;&#x27; &quot;http://localhost:9200/$&#123;var&#125;/_delete_by_query&quot;</span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure>\n<p>2.编辑cron文件, 执行crantab -e, 打开crontab配置文件<br>加上刚才的shell脚本, 设置每天0点15分执行  </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">15 00 * * * /home/elk/removeDataByTime.sh</span><br></pre></td></tr></table></figure>\n<p>设置cron重新启动, 执行/sbin/service crond restart  </p>\n<p>3.查看cron执行情况<br>查看cron任务列表 : crontab -l<br>查看cron执行日志 : grep ‘removeDataByTime’ /var/log/cron  </p>\n<h2 id=\"设置LogStash不写入指定的内容\"><a href=\"#设置LogStash不写入指定的内容\" class=\"headerlink\" title=\"设置LogStash不写入指定的内容\"></a>设置LogStash不写入指定的内容</h2><p>在logstash中写入如下内容即可 ：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">filter &#123;</span><br><span class=\"line\"><span class=\"meta\">\t#</span><span class=\"bash\"> 过滤message中的内容 , 注意drop后面有一个空格</span></span><br><span class=\"line\">    if &quot;somethingA&quot; in [message] &#123;</span><br><span class=\"line\">      drop &#123;&#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    # 过滤tags中的内容</span><br><span class=\"line\">    if &quot;somethingB&quot; in [tags] &#123;</span><br><span class=\"line\">      drop &#123;&#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"设置索引别名来实现中文索引搜索\"><a href=\"#设置索引别名来实现中文索引搜索\" class=\"headerlink\" title=\"设置索引别名来实现中文索引搜索\"></a>设置索引别名来实现中文索引搜索</h2><p>有时候需要在搜索页面使用中文的索引名，但是在ES中不支持直接用中文名来命名索引，原因我认为应该是跟索引的Btree算法有关。</p>\n<p>但是我们可以给索引设置别名来在搜索页面使用中文的索引来搜索。</p>\n<p>可以按照如下方式来设置</p>\n<ul>\n<li>在postman发送如下请求（前提：在ElasticSearch中已经存在datadocking和activity-provider两个索引）：</li>\n</ul>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST: <span class=\"number\">192.168</span><span class=\"number\">.15</span><span class=\"number\">.161</span>:<span class=\"number\">9200</span>/_aliases</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;actions&quot;</span>: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">&quot;add&quot;</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;alias&quot;</span>: <span class=\"string\">&quot;外部对接&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;index&quot;</span>: <span class=\"string\">&quot;datadocking&quot;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">&quot;add&quot;</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;alias&quot;</span>: <span class=\"string\">&quot;微商城活动&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;index&quot;</span>: <span class=\"string\">&quot;activity-provider&quot;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>进入项目的索引模式</p>\n<p><img src=\"/2019/10/14/ELK%E6%97%A5%E5%B8%B8%E7%BB%B4%E6%8A%A4%E7%9B%B8%E5%85%B3/1.png\"></p>\n<p>输入刚刚设置的中文名，就可以直接对应到英文的索引名，然后按照步骤创建索引模式</p>\n<p><img src=\"/2019/10/14/ELK%E6%97%A5%E5%B8%B8%E7%BB%B4%E6%8A%A4%E7%9B%B8%E5%85%B3/2.png\"></p>\n<p>在搜索界面就可以使用中文的索引名来搜索</p>\n<p><img src=\"/2019/10/14/ELK%E6%97%A5%E5%B8%B8%E7%BB%B4%E6%8A%A4%E7%9B%B8%E5%85%B3/3.png\"></p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"<h2 id=\"配置启动ELK-FileBeats后台运行-不随着窗口关闭而关闭\"><a href=\"#配置启动ELK-FileBeats后台运行-不随着窗口关闭而关闭\" class=\"headerlink\" title=\"配置启动ELK+FileBeats后台运行, 不随着窗口关闭而关闭\"></a>配置启动ELK+FileBeats后台运行, 不随着窗口关闭而关闭</h2><p>只要在后面加上&amp;即可, 如  </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bin/logstash -f config/log4j-es.conf &amp;</span><br></pre></td></tr></table></figure>\n<p>注意: 退出时使用Ctrl+D命令, 直接关闭窗口依然有可能使得进程关闭  </p>\n<h2 id=\"LogStash自动重新加载配置\"><a href=\"#LogStash自动重新加载配置\" class=\"headerlink\" title=\"LogStash自动重新加载配置\"></a>LogStash自动重新加载配置</h2><p>启动logstash时在后面加上命令–config.reload.automatic  </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bin/logstash -f config/log4j-es.conf --config.reload.automatic &amp;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"重新发送filebeat抓取的内容\"><a href=\"#重新发送filebeat抓取的内容\" class=\"headerlink\" title=\"重新发送filebeat抓取的内容\"></a>重新发送filebeat抓取的内容</h2><p>1.删除registry下的data.json<br>如:  </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rm -rf /home/elk/filebeats/filebeat-7.3.1-linux-x86_64/data/registry/filebeat</span><br></pre></td></tr></table></figure>\n<p>2.重启filebeat<br>如果存在正在运行的filebeat, 先kill掉  </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps aux | grep filebeat  </span><br><span class=\"line\">kill -s 9 pid</span><br></pre></td></tr></table></figure>\n<p>然后执行  </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./filebeat -e -c filebeat.yml</span><br></pre></td></tr></table></figure>","more":"<h2 id=\"设置索引内容30天过期删除\"><a href=\"#设置索引内容30天过期删除\" class=\"headerlink\" title=\"设置索引内容30天过期删除\"></a>设置索引内容30天过期删除</h2><p>本来我理解的理论上应该可以用索引的生命周期来实现, 但是半天没整明白, 所以现在<br>是简单粗暴的使用linux的cron任务来实现, 更具体的cron配置详见<a href=\"https://blog.csdn.net/mengzuchao/article/details/81172305\">cron详解</a><br>1.编辑shell脚本, 文件名为removeDataByTime.sh, 内容如下  </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">!/bin/bash</span></span><br><span class=\"line\">limit_date=30</span><br><span class=\"line\">for var in `curl &#x27;localhost:9200/_cat/indices&#x27; | awk &#x27;!/kibana*/ &#123;print $3&#125;&#x27;`</span><br><span class=\"line\">do</span><br><span class=\"line\">  curl -H &quot;Content-Type:application/json&quot; -X POST -d &#x27;&#123;&quot;query&quot;: &#123;&quot;range&quot;: &#123;&quot;@timestamp&quot;: &#123;&quot;lt&quot;: &quot;now-&#x27;$&#123;limit_date&#125;&#x27;d/d&quot;&#125;&#125;&#125;&#125;&#x27; &quot;http://localhost:9200/$&#123;var&#125;/_delete_by_query&quot;</span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure>\n<p>2.编辑cron文件, 执行crantab -e, 打开crontab配置文件<br>加上刚才的shell脚本, 设置每天0点15分执行  </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">15 00 * * * /home/elk/removeDataByTime.sh</span><br></pre></td></tr></table></figure>\n<p>设置cron重新启动, 执行/sbin/service crond restart  </p>\n<p>3.查看cron执行情况<br>查看cron任务列表 : crontab -l<br>查看cron执行日志 : grep ‘removeDataByTime’ /var/log/cron  </p>\n<h2 id=\"设置LogStash不写入指定的内容\"><a href=\"#设置LogStash不写入指定的内容\" class=\"headerlink\" title=\"设置LogStash不写入指定的内容\"></a>设置LogStash不写入指定的内容</h2><p>在logstash中写入如下内容即可 ：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">filter &#123;</span><br><span class=\"line\"><span class=\"meta\">\t#</span><span class=\"bash\"> 过滤message中的内容 , 注意drop后面有一个空格</span></span><br><span class=\"line\">    if &quot;somethingA&quot; in [message] &#123;</span><br><span class=\"line\">      drop &#123;&#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    # 过滤tags中的内容</span><br><span class=\"line\">    if &quot;somethingB&quot; in [tags] &#123;</span><br><span class=\"line\">      drop &#123;&#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"设置索引别名来实现中文索引搜索\"><a href=\"#设置索引别名来实现中文索引搜索\" class=\"headerlink\" title=\"设置索引别名来实现中文索引搜索\"></a>设置索引别名来实现中文索引搜索</h2><p>有时候需要在搜索页面使用中文的索引名，但是在ES中不支持直接用中文名来命名索引，原因我认为应该是跟索引的Btree算法有关。</p>\n<p>但是我们可以给索引设置别名来在搜索页面使用中文的索引来搜索。</p>\n<p>可以按照如下方式来设置</p>\n<ul>\n<li>在postman发送如下请求（前提：在ElasticSearch中已经存在datadocking和activity-provider两个索引）：</li>\n</ul>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST: <span class=\"number\">192.168</span><span class=\"number\">.15</span><span class=\"number\">.161</span>:<span class=\"number\">9200</span>/_aliases</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;actions&quot;</span>: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">&quot;add&quot;</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;alias&quot;</span>: <span class=\"string\">&quot;外部对接&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;index&quot;</span>: <span class=\"string\">&quot;datadocking&quot;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">&quot;add&quot;</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">&quot;alias&quot;</span>: <span class=\"string\">&quot;微商城活动&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">&quot;index&quot;</span>: <span class=\"string\">&quot;activity-provider&quot;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>进入项目的索引模式</p>\n<p><img src=\"/2019/10/14/ELK%E6%97%A5%E5%B8%B8%E7%BB%B4%E6%8A%A4%E7%9B%B8%E5%85%B3/1.png\"></p>\n<p>输入刚刚设置的中文名，就可以直接对应到英文的索引名，然后按照步骤创建索引模式</p>\n<p><img src=\"/2019/10/14/ELK%E6%97%A5%E5%B8%B8%E7%BB%B4%E6%8A%A4%E7%9B%B8%E5%85%B3/2.png\"></p>\n<p>在搜索界面就可以使用中文的索引名来搜索</p>\n<p><img src=\"/2019/10/14/ELK%E6%97%A5%E5%B8%B8%E7%BB%B4%E6%8A%A4%E7%9B%B8%E5%85%B3/3.png\"></p>\n</li>\n</ul>"},{"title":"解决maven库中无法引入Oracle_jdbc_driver","date":"2019-11-04T06:02:10.000Z","comments":1,"_content":"\n1.在maven库中直接引入oracle jdbc driver是不能下载到本地的，原因是oracle的jdbc工具包不是开放给公众下载的，需要用户是oracle的注册用户才能在oracle官网下载到。\n\n2.解决方式：目前没有发现更简便的方法，只能从oracle官网上下载jdbc driver的包，然后从本地upload到本地仓库。\n\n- 进入JDBC[下载网站](https://www.oracle.com/database/technologies/appdev/jdbc-downloads.html)，选择自己需要的JDBC driver版本，点击进入。\n![](1.png)\n\n- 下载需要的JDBC driver的jar包\n\n![](2.png)\n\n- 如果还没有登陆oracle账号，需要你登陆以后才能下载，没有注册过的注册一个账号，这里不再赘述。\n\n- 下载完成后，进入下载完成的文件夹。在这里需要手动执行命令，在该文件夹打开git窗口，如何在windows安装git请自行百度。执行如下命令。\n<!-- more -->\n  ```bash\n  mvn deploy:deploy-file -Dmaven.test.skip=true -Dfile=ojdbc6.jar -DgroupId=com.oracle -DartifactId=ojdbc6 -Dversion=11.0.0.7 -Dpackaging=jar -DrepositoryId=localmaven -Durl=http://localhost/nexus/content/repositories/releases\n  ```\n\n  各个参数含义如下：\n\n  -Dmaven.test.skip ：是否跳过jar包检测。这种官方的包，我们不需要对其进行测试，设置为true即可。\n\n  -Dfile：需要上传的jar包名。建议直接在jar包所在目录执行上述命令，可以避免再输入jar包的地址。\n\n  -DgroupId，-DartifactId，-Dversion：jar包在本地maven库中的地址。理论上这三个值都是自己定义的，只要自己能够区分出来即可。建议地址不要和官方的maven地址完全一致，改一个版本号，或者artifactId都行，这样可以避免自动从官方maven库下载jar包，导致还是不能引入。\n\n  -Dpackaging：打包方式。一般选择下载的是jar包，这里也写jar就行。\n\n  -DrepositoryId：部署的仓库ID。这个ID配置在maven的setings.xml中，参考如下：\n\n![](3.png)\n\n  自行写入本地仓库的用户名和密码。\n\n  -Durl：部署的本地仓库的地址。\n\n- 执行完成后，显示如下页面，就表示上传成功。\n\n![](4.png)\n\n- 在项目的pom.xml文件下需要做如下配置即可：\n\n  ```xml\n  <!--增加本地仓库地址-->\n  <repositories>\n      <repository>\n          <id>java.net2</id>\n          <url>http://localhost/nexus/content/groups/public/</url>\n      </repository>\n  </repositories>\n  <!--引入oracle包-->\n  <dependencies>\n      <!--oracle-->\n      <dependency>\n          <groupId>com.oracle</groupId>\n          <artifactId>ojdbc6</artifactId>\n          <version>11.0.0.7</version>\n      </dependency>\n  </dependencies>\n  ```","source":"_posts/OracleJDBC.md","raw":"---\ntitle: 解决maven库中无法引入Oracle_jdbc_driver\ndate: 2019-11-04 14:02:10\ntags: \n- solved\ncomments: true\ncategories: \n- 学习\n- 搭建相关\n---\n\n1.在maven库中直接引入oracle jdbc driver是不能下载到本地的，原因是oracle的jdbc工具包不是开放给公众下载的，需要用户是oracle的注册用户才能在oracle官网下载到。\n\n2.解决方式：目前没有发现更简便的方法，只能从oracle官网上下载jdbc driver的包，然后从本地upload到本地仓库。\n\n- 进入JDBC[下载网站](https://www.oracle.com/database/technologies/appdev/jdbc-downloads.html)，选择自己需要的JDBC driver版本，点击进入。\n![](1.png)\n\n- 下载需要的JDBC driver的jar包\n\n![](2.png)\n\n- 如果还没有登陆oracle账号，需要你登陆以后才能下载，没有注册过的注册一个账号，这里不再赘述。\n\n- 下载完成后，进入下载完成的文件夹。在这里需要手动执行命令，在该文件夹打开git窗口，如何在windows安装git请自行百度。执行如下命令。\n<!-- more -->\n  ```bash\n  mvn deploy:deploy-file -Dmaven.test.skip=true -Dfile=ojdbc6.jar -DgroupId=com.oracle -DartifactId=ojdbc6 -Dversion=11.0.0.7 -Dpackaging=jar -DrepositoryId=localmaven -Durl=http://localhost/nexus/content/repositories/releases\n  ```\n\n  各个参数含义如下：\n\n  -Dmaven.test.skip ：是否跳过jar包检测。这种官方的包，我们不需要对其进行测试，设置为true即可。\n\n  -Dfile：需要上传的jar包名。建议直接在jar包所在目录执行上述命令，可以避免再输入jar包的地址。\n\n  -DgroupId，-DartifactId，-Dversion：jar包在本地maven库中的地址。理论上这三个值都是自己定义的，只要自己能够区分出来即可。建议地址不要和官方的maven地址完全一致，改一个版本号，或者artifactId都行，这样可以避免自动从官方maven库下载jar包，导致还是不能引入。\n\n  -Dpackaging：打包方式。一般选择下载的是jar包，这里也写jar就行。\n\n  -DrepositoryId：部署的仓库ID。这个ID配置在maven的setings.xml中，参考如下：\n\n![](3.png)\n\n  自行写入本地仓库的用户名和密码。\n\n  -Durl：部署的本地仓库的地址。\n\n- 执行完成后，显示如下页面，就表示上传成功。\n\n![](4.png)\n\n- 在项目的pom.xml文件下需要做如下配置即可：\n\n  ```xml\n  <!--增加本地仓库地址-->\n  <repositories>\n      <repository>\n          <id>java.net2</id>\n          <url>http://localhost/nexus/content/groups/public/</url>\n      </repository>\n  </repositories>\n  <!--引入oracle包-->\n  <dependencies>\n      <!--oracle-->\n      <dependency>\n          <groupId>com.oracle</groupId>\n          <artifactId>ojdbc6</artifactId>\n          <version>11.0.0.7</version>\n      </dependency>\n  </dependencies>\n  ```","slug":"OracleJDBC","published":1,"updated":"2021-11-23T02:06:47.000Z","_id":"ckwadg4n0000473cf1vbqf9qp","layout":"post","photos":[],"link":"","content":"<p>1.在maven库中直接引入oracle jdbc driver是不能下载到本地的，原因是oracle的jdbc工具包不是开放给公众下载的，需要用户是oracle的注册用户才能在oracle官网下载到。</p>\n<p>2.解决方式：目前没有发现更简便的方法，只能从oracle官网上下载jdbc driver的包，然后从本地upload到本地仓库。</p>\n<ul>\n<li><p>进入JDBC<a href=\"https://www.oracle.com/database/technologies/appdev/jdbc-downloads.html\">下载网站</a>，选择自己需要的JDBC driver版本，点击进入。<br><img src=\"/2019/11/04/OracleJDBC/1.png\"></p>\n</li>\n<li><p>下载需要的JDBC driver的jar包</p>\n</li>\n</ul>\n<p><img src=\"/2019/11/04/OracleJDBC/2.png\"></p>\n<ul>\n<li><p>如果还没有登陆oracle账号，需要你登陆以后才能下载，没有注册过的注册一个账号，这里不再赘述。</p>\n</li>\n<li><p>下载完成后，进入下载完成的文件夹。在这里需要手动执行命令，在该文件夹打开git窗口，如何在windows安装git请自行百度。执行如下命令。</p>\n<span id=\"more\"></span>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn deploy:deploy-file -Dmaven.test.skip=<span class=\"literal\">true</span> -Dfile=ojdbc6.jar -DgroupId=com.oracle -DartifactId=ojdbc6 -Dversion=11.0.0.7 -Dpackaging=jar -DrepositoryId=localmaven -Durl=http://localhost/nexus/content/repositories/releases</span><br></pre></td></tr></table></figure>\n\n<p>各个参数含义如下：</p>\n<p>-Dmaven.test.skip ：是否跳过jar包检测。这种官方的包，我们不需要对其进行测试，设置为true即可。</p>\n<p>-Dfile：需要上传的jar包名。建议直接在jar包所在目录执行上述命令，可以避免再输入jar包的地址。</p>\n<p>-DgroupId，-DartifactId，-Dversion：jar包在本地maven库中的地址。理论上这三个值都是自己定义的，只要自己能够区分出来即可。建议地址不要和官方的maven地址完全一致，改一个版本号，或者artifactId都行，这样可以避免自动从官方maven库下载jar包，导致还是不能引入。</p>\n<p>-Dpackaging：打包方式。一般选择下载的是jar包，这里也写jar就行。</p>\n<p>-DrepositoryId：部署的仓库ID。这个ID配置在maven的setings.xml中，参考如下：</p>\n</li>\n</ul>\n<p><img src=\"/2019/11/04/OracleJDBC/3.png\"></p>\n<p>  自行写入本地仓库的用户名和密码。</p>\n<p>  -Durl：部署的本地仓库的地址。</p>\n<ul>\n<li>执行完成后，显示如下页面，就表示上传成功。</li>\n</ul>\n<p><img src=\"/2019/11/04/OracleJDBC/4.png\"></p>\n<ul>\n<li><p>在项目的pom.xml文件下需要做如下配置即可：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--增加本地仓库地址--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">repositories</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">repository</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>java.net2<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>http://localhost/nexus/content/groups/public/<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">repository</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">repositories</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--引入oracle包--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--oracle--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.oracle<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>ojdbc6<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>11.0.0.7<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>1.在maven库中直接引入oracle jdbc driver是不能下载到本地的，原因是oracle的jdbc工具包不是开放给公众下载的，需要用户是oracle的注册用户才能在oracle官网下载到。</p>\n<p>2.解决方式：目前没有发现更简便的方法，只能从oracle官网上下载jdbc driver的包，然后从本地upload到本地仓库。</p>\n<ul>\n<li><p>进入JDBC<a href=\"https://www.oracle.com/database/technologies/appdev/jdbc-downloads.html\">下载网站</a>，选择自己需要的JDBC driver版本，点击进入。<br><img src=\"/2019/11/04/OracleJDBC/1.png\"></p>\n</li>\n<li><p>下载需要的JDBC driver的jar包</p>\n</li>\n</ul>\n<p><img src=\"/2019/11/04/OracleJDBC/2.png\"></p>\n<ul>\n<li><p>如果还没有登陆oracle账号，需要你登陆以后才能下载，没有注册过的注册一个账号，这里不再赘述。</p>\n</li>\n<li><p>下载完成后，进入下载完成的文件夹。在这里需要手动执行命令，在该文件夹打开git窗口，如何在windows安装git请自行百度。执行如下命令。</p>","more":"<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn deploy:deploy-file -Dmaven.test.skip=<span class=\"literal\">true</span> -Dfile=ojdbc6.jar -DgroupId=com.oracle -DartifactId=ojdbc6 -Dversion=11.0.0.7 -Dpackaging=jar -DrepositoryId=localmaven -Durl=http://localhost/nexus/content/repositories/releases</span><br></pre></td></tr></table></figure>\n\n<p>各个参数含义如下：</p>\n<p>-Dmaven.test.skip ：是否跳过jar包检测。这种官方的包，我们不需要对其进行测试，设置为true即可。</p>\n<p>-Dfile：需要上传的jar包名。建议直接在jar包所在目录执行上述命令，可以避免再输入jar包的地址。</p>\n<p>-DgroupId，-DartifactId，-Dversion：jar包在本地maven库中的地址。理论上这三个值都是自己定义的，只要自己能够区分出来即可。建议地址不要和官方的maven地址完全一致，改一个版本号，或者artifactId都行，这样可以避免自动从官方maven库下载jar包，导致还是不能引入。</p>\n<p>-Dpackaging：打包方式。一般选择下载的是jar包，这里也写jar就行。</p>\n<p>-DrepositoryId：部署的仓库ID。这个ID配置在maven的setings.xml中，参考如下：</p>\n</li>\n</ul>\n<p><img src=\"/2019/11/04/OracleJDBC/3.png\"></p>\n<p>  自行写入本地仓库的用户名和密码。</p>\n<p>  -Durl：部署的本地仓库的地址。</p>\n<ul>\n<li>执行完成后，显示如下页面，就表示上传成功。</li>\n</ul>\n<p><img src=\"/2019/11/04/OracleJDBC/4.png\"></p>\n<ul>\n<li><p>在项目的pom.xml文件下需要做如下配置即可：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--增加本地仓库地址--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">repositories</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">repository</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>java.net2<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>http://localhost/nexus/content/groups/public/<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">repository</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">repositories</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--引入oracle包--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--oracle--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.oracle<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>ojdbc6<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>11.0.0.7<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n</ul>"},{"title":"Python数据爬虫实践-爬取历年东西部周最佳对比","date":"2019-11-20T08:43:40.000Z","_content":"\n## 数据来源\n\n历年周最佳的数据来自于NBA数据官网，链接为 http://www.stat-nba.com/award/item18.html\n\n![](1.png)\n\n这里可以看到每个赛季的周最佳球员。然后每个球员旁边有个数据的链接，表示的就是这名球员当周的平均数据。比如11月11日-11月17日的东部周最佳是武切维奇，其数据链接为http://www.stat-nba.com/player/3672.html\n\n![](2.png)\n\n## 数据处理\n\n### 爬取周最佳球员\n\n首先看周最佳的页面，链接是http://www.stat-nba.com/award/item18.html，选中武切维奇的名字，右键打开右键菜单，选择“查看页面元素”。出现如下页面：\n\n![](3.png)\n\n注意，我们需要获取到的是**所有的周最佳数据**，而不是某个人的，因此我们需要找到这个页面元素的父元素，因此才能找到这个父元素下面的所有子元素-即所有的周最佳数据。\n\n![](4.png)\n\n```\n如图所示，周最佳数据的节点来自于<td class='current'> -> <table class='stat-box'  style='width:170px;border:0'>  -> <td>\n\n根据网页上下文的查看，可以知道\"<td class=\"current\">是赛季的节点，<table class=\"stat-box\" style=\"width:170px;border:0\">是每个赛季下每周的节点，而<td>就是每周下面每个球员的节点。\n```\n<!-- more -->\n因此我们根据节点的继承关系，可以写出如下的基本的爬虫逻辑。\n\n```python\nfrom urllib.request import urlopen\nfrom bs4 import BeautifulSoup\n\n# 获取周最佳页面\nhtml = urlopen(\"http://www.stat-nba.com/award/item18.html\").read().decode('utf-8')\n# 格式化为lxml\nsoup = BeautifulSoup(html, features='lxml')\n# 查找<td class=\"current\"> 获取各个赛季\noutResult = soup.find_all(\"td\", {\"class\": \"current\"})\nfor i in range(len(outResult)):\n    single = outResult[i]\n    # 获取每赛季数据 \n    data = single.parent.find_all(\"table\", {\"class\": \"stat_box\", \"style\": \"width:170px;border:0\"})\n    for j in range(len(data)):\n        singleData = data[j]\n        # 获取周\n        week = singleData.find(\"th\")\n        tdList = singleData.find_all(\"td\")\n        for k in range(len(tdList)):\n            singleTd = tdList[k]\n            print(week.text, singleTd.text)\n\n```\n\n输出结果如下：\n\n![](5.png)\n\n\n\n### 爬取周最佳数据\n\n接下来我们爬取每个球员的周最佳数据，点击球员旁边的“数据”按钮，会跳转到周数据页面。\n\n![](6.png)\n\n\n\n![](7.png)\n\n根据看到数据页面是在球员td标签下的第二个a标签下\n\n![](8.png)\n\n根据a标签的结构使用如下代码来获取球员数据的链接：\n\n```python\ntdData = singleTd.find_all(\"a\")\nif len(tdData) > 1:\n    # 爬取最佳周数据\n    playerUrl = tdData[1].attrs['href'].replace(\"..\", \"http://www.stat-nba.com\", 1)\n```\n\n获取到链接之后，按照前文所述来爬取球员的详细数据：\n\n```python\n# 爬取最佳周数据\nplayerUrl = tdData[1].attrs['href'].replace(\"..\", \"http://www.stat-nba.com\", 1)\nplayerHtml = urlopen(playerUrl).read().decode('utf-8')\nplayerSoup = BeautifulSoup(playerHtml, features='lxml')\nplayerTable = playerSoup.find(\"table\", {\"class\": \"stat_box\"})\nif hasattr(playerTable, 'find_all'):\n    playerStatList = playerTable.find_all(\"td\")\n    if hasattr(playerTable, 'find_all'):\n        for m in range(1, len(playerStatList)):\n            playerStat = playerStatList[m]\n            # 打印数据\n            print(playerStat.text)\n```\n\n### 输出数据到Excel\n\n将前文进行整合，并将数据输出到Excel，代码如下：\n\n```python\nimport random\nimport time\nfrom urllib.request import urlopen\n\nimport xlwt as xlwt\nfrom bs4 import BeautifulSoup\n\n# 定义单元格格式\ndef set_style(name='Times New Roman', height=220, bold=False):\n    style = xlwt.XFStyle()\n    font = xlwt.Font()\n    font.name = name\n    font.bold = bold\n    font.color_index = 4\n    font.height = height\n    style.font = font\n    return style\n\n\nhtml = urlopen(\"http://www.stat-nba.com/award/item18.html\").read().decode('utf-8')\nsoup = BeautifulSoup(html, features='lxml')\noutResult = soup.find_all(\"td\", {\"class\": \"current\"})\n# 创建excel\nf = xlwt.Workbook()\nsheet1 = f.add_sheet('周最佳数据', cell_overwrite_ok=True)\nnum = 0\nstyle = set_style()\nfor i in range(len(outResult)):\n    single = outResult[i]\n    # 2000年以前数据不再显示\n    if single.text.startswith(\"19\"):\n        break\n    # 获取每赛季数据\n    data = single.parent.find_all(\"table\", {\"class\": \"stat_box\", \"style\": \"width:170px;border:0\"})\n    for j in range(len(data)):\n        singleData = data[j]\n        # 打印周\n        week = singleData.find(\"th\")\n        tdList = singleData.find_all(\"td\")\n        for k in range(len(tdList)):\n            singleTd = tdList[k]\n            # 暂停随机时间，以避免被反爬虫\n            sleeptime = random.randint(0, 1000)\n            time.sleep(sleeptime / 1000)\n            tdData = singleTd.find_all(\"a\")\n            # 获取球员名\n            playerName = tdData[0].text\n            print(single.text, week.text, playerName)\n            if len(tdData) > 1:\n                # 爬取最佳周数据\n                playerUrl = tdData[1].attrs['href'].replace(\"..\", \"http://www.stat-nba.com\", 1)\n                playerHtml = urlopen(playerUrl).read().decode('utf-8')\n                playerSoup = BeautifulSoup(playerHtml, features='lxml')\n                playerTable = playerSoup.find(\"table\", {\"class\": \"stat_box\"})\n                if hasattr(playerTable, 'find_all'):\n                    playerStatList = playerTable.find_all(\"td\")\n                sheet1.write(num, 0, single.text, style)\n                sheet1.write(num, 1, week.text, style)\n                if hasattr(playerTable, 'find_all'):\n                    for m in range(1, len(playerStatList)):\n                        playerStat = playerStatList[m]\n                        # 打印赛季\n                        sheet1.write(num, 1 + m, playerStat.text, style)\n                num = num + 1\nf.save('nbastat-week.xls')\n\n```\n\n\n\n输出的结果如下：\n\n![](9.png)\n\n\n\n## 分析数据\n\n分析过程我就懒得再写一遍了，之前已经将分析结果发布到虎扑，链接是https://bbs.hupu.com/30738461.html\n\n![](10.png)\n\n![](11.png)","source":"_posts/Python数据爬虫实践-爬取历年东西部周最佳对比.md","raw":"---\ntitle: Python数据爬虫实践-爬取历年东西部周最佳对比\ndate: 2019-11-20 16:43:40\ntags: python\n---\n\n## 数据来源\n\n历年周最佳的数据来自于NBA数据官网，链接为 http://www.stat-nba.com/award/item18.html\n\n![](1.png)\n\n这里可以看到每个赛季的周最佳球员。然后每个球员旁边有个数据的链接，表示的就是这名球员当周的平均数据。比如11月11日-11月17日的东部周最佳是武切维奇，其数据链接为http://www.stat-nba.com/player/3672.html\n\n![](2.png)\n\n## 数据处理\n\n### 爬取周最佳球员\n\n首先看周最佳的页面，链接是http://www.stat-nba.com/award/item18.html，选中武切维奇的名字，右键打开右键菜单，选择“查看页面元素”。出现如下页面：\n\n![](3.png)\n\n注意，我们需要获取到的是**所有的周最佳数据**，而不是某个人的，因此我们需要找到这个页面元素的父元素，因此才能找到这个父元素下面的所有子元素-即所有的周最佳数据。\n\n![](4.png)\n\n```\n如图所示，周最佳数据的节点来自于<td class='current'> -> <table class='stat-box'  style='width:170px;border:0'>  -> <td>\n\n根据网页上下文的查看，可以知道\"<td class=\"current\">是赛季的节点，<table class=\"stat-box\" style=\"width:170px;border:0\">是每个赛季下每周的节点，而<td>就是每周下面每个球员的节点。\n```\n<!-- more -->\n因此我们根据节点的继承关系，可以写出如下的基本的爬虫逻辑。\n\n```python\nfrom urllib.request import urlopen\nfrom bs4 import BeautifulSoup\n\n# 获取周最佳页面\nhtml = urlopen(\"http://www.stat-nba.com/award/item18.html\").read().decode('utf-8')\n# 格式化为lxml\nsoup = BeautifulSoup(html, features='lxml')\n# 查找<td class=\"current\"> 获取各个赛季\noutResult = soup.find_all(\"td\", {\"class\": \"current\"})\nfor i in range(len(outResult)):\n    single = outResult[i]\n    # 获取每赛季数据 \n    data = single.parent.find_all(\"table\", {\"class\": \"stat_box\", \"style\": \"width:170px;border:0\"})\n    for j in range(len(data)):\n        singleData = data[j]\n        # 获取周\n        week = singleData.find(\"th\")\n        tdList = singleData.find_all(\"td\")\n        for k in range(len(tdList)):\n            singleTd = tdList[k]\n            print(week.text, singleTd.text)\n\n```\n\n输出结果如下：\n\n![](5.png)\n\n\n\n### 爬取周最佳数据\n\n接下来我们爬取每个球员的周最佳数据，点击球员旁边的“数据”按钮，会跳转到周数据页面。\n\n![](6.png)\n\n\n\n![](7.png)\n\n根据看到数据页面是在球员td标签下的第二个a标签下\n\n![](8.png)\n\n根据a标签的结构使用如下代码来获取球员数据的链接：\n\n```python\ntdData = singleTd.find_all(\"a\")\nif len(tdData) > 1:\n    # 爬取最佳周数据\n    playerUrl = tdData[1].attrs['href'].replace(\"..\", \"http://www.stat-nba.com\", 1)\n```\n\n获取到链接之后，按照前文所述来爬取球员的详细数据：\n\n```python\n# 爬取最佳周数据\nplayerUrl = tdData[1].attrs['href'].replace(\"..\", \"http://www.stat-nba.com\", 1)\nplayerHtml = urlopen(playerUrl).read().decode('utf-8')\nplayerSoup = BeautifulSoup(playerHtml, features='lxml')\nplayerTable = playerSoup.find(\"table\", {\"class\": \"stat_box\"})\nif hasattr(playerTable, 'find_all'):\n    playerStatList = playerTable.find_all(\"td\")\n    if hasattr(playerTable, 'find_all'):\n        for m in range(1, len(playerStatList)):\n            playerStat = playerStatList[m]\n            # 打印数据\n            print(playerStat.text)\n```\n\n### 输出数据到Excel\n\n将前文进行整合，并将数据输出到Excel，代码如下：\n\n```python\nimport random\nimport time\nfrom urllib.request import urlopen\n\nimport xlwt as xlwt\nfrom bs4 import BeautifulSoup\n\n# 定义单元格格式\ndef set_style(name='Times New Roman', height=220, bold=False):\n    style = xlwt.XFStyle()\n    font = xlwt.Font()\n    font.name = name\n    font.bold = bold\n    font.color_index = 4\n    font.height = height\n    style.font = font\n    return style\n\n\nhtml = urlopen(\"http://www.stat-nba.com/award/item18.html\").read().decode('utf-8')\nsoup = BeautifulSoup(html, features='lxml')\noutResult = soup.find_all(\"td\", {\"class\": \"current\"})\n# 创建excel\nf = xlwt.Workbook()\nsheet1 = f.add_sheet('周最佳数据', cell_overwrite_ok=True)\nnum = 0\nstyle = set_style()\nfor i in range(len(outResult)):\n    single = outResult[i]\n    # 2000年以前数据不再显示\n    if single.text.startswith(\"19\"):\n        break\n    # 获取每赛季数据\n    data = single.parent.find_all(\"table\", {\"class\": \"stat_box\", \"style\": \"width:170px;border:0\"})\n    for j in range(len(data)):\n        singleData = data[j]\n        # 打印周\n        week = singleData.find(\"th\")\n        tdList = singleData.find_all(\"td\")\n        for k in range(len(tdList)):\n            singleTd = tdList[k]\n            # 暂停随机时间，以避免被反爬虫\n            sleeptime = random.randint(0, 1000)\n            time.sleep(sleeptime / 1000)\n            tdData = singleTd.find_all(\"a\")\n            # 获取球员名\n            playerName = tdData[0].text\n            print(single.text, week.text, playerName)\n            if len(tdData) > 1:\n                # 爬取最佳周数据\n                playerUrl = tdData[1].attrs['href'].replace(\"..\", \"http://www.stat-nba.com\", 1)\n                playerHtml = urlopen(playerUrl).read().decode('utf-8')\n                playerSoup = BeautifulSoup(playerHtml, features='lxml')\n                playerTable = playerSoup.find(\"table\", {\"class\": \"stat_box\"})\n                if hasattr(playerTable, 'find_all'):\n                    playerStatList = playerTable.find_all(\"td\")\n                sheet1.write(num, 0, single.text, style)\n                sheet1.write(num, 1, week.text, style)\n                if hasattr(playerTable, 'find_all'):\n                    for m in range(1, len(playerStatList)):\n                        playerStat = playerStatList[m]\n                        # 打印赛季\n                        sheet1.write(num, 1 + m, playerStat.text, style)\n                num = num + 1\nf.save('nbastat-week.xls')\n\n```\n\n\n\n输出的结果如下：\n\n![](9.png)\n\n\n\n## 分析数据\n\n分析过程我就懒得再写一遍了，之前已经将分析结果发布到虎扑，链接是https://bbs.hupu.com/30738461.html\n\n![](10.png)\n\n![](11.png)","slug":"Python数据爬虫实践-爬取历年东西部周最佳对比","published":1,"updated":"2021-11-23T02:06:47.000Z","_id":"ckwadg4n1000573cf7btw85dx","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"数据来源\"><a href=\"#数据来源\" class=\"headerlink\" title=\"数据来源\"></a>数据来源</h2><p>历年周最佳的数据来自于NBA数据官网，链接为 <a href=\"http://www.stat-nba.com/award/item18.html\">http://www.stat-nba.com/award/item18.html</a></p>\n<p><img src=\"/2019/11/20/Python%E6%95%B0%E6%8D%AE%E7%88%AC%E8%99%AB%E5%AE%9E%E8%B7%B5-%E7%88%AC%E5%8F%96%E5%8E%86%E5%B9%B4%E4%B8%9C%E8%A5%BF%E9%83%A8%E5%91%A8%E6%9C%80%E4%BD%B3%E5%AF%B9%E6%AF%94/1.png\"></p>\n<p>这里可以看到每个赛季的周最佳球员。然后每个球员旁边有个数据的链接，表示的就是这名球员当周的平均数据。比如11月11日-11月17日的东部周最佳是武切维奇，其数据链接为<a href=\"http://www.stat-nba.com/player/3672.html\">http://www.stat-nba.com/player/3672.html</a></p>\n<p><img src=\"/2019/11/20/Python%E6%95%B0%E6%8D%AE%E7%88%AC%E8%99%AB%E5%AE%9E%E8%B7%B5-%E7%88%AC%E5%8F%96%E5%8E%86%E5%B9%B4%E4%B8%9C%E8%A5%BF%E9%83%A8%E5%91%A8%E6%9C%80%E4%BD%B3%E5%AF%B9%E6%AF%94/2.png\"></p>\n<h2 id=\"数据处理\"><a href=\"#数据处理\" class=\"headerlink\" title=\"数据处理\"></a>数据处理</h2><h3 id=\"爬取周最佳球员\"><a href=\"#爬取周最佳球员\" class=\"headerlink\" title=\"爬取周最佳球员\"></a>爬取周最佳球员</h3><p>首先看周最佳的页面，链接是<a href=\"http://www.stat-nba.com/award/item18.html%EF%BC%8C%E9%80%89%E4%B8%AD%E6%AD%A6%E5%88%87%E7%BB%B4%E5%A5%87%E7%9A%84%E5%90%8D%E5%AD%97%EF%BC%8C%E5%8F%B3%E9%94%AE%E6%89%93%E5%BC%80%E5%8F%B3%E9%94%AE%E8%8F%9C%E5%8D%95%EF%BC%8C%E9%80%89%E6%8B%A9%E2%80%9C%E6%9F%A5%E7%9C%8B%E9%A1%B5%E9%9D%A2%E5%85%83%E7%B4%A0%E2%80%9D%E3%80%82%E5%87%BA%E7%8E%B0%E5%A6%82%E4%B8%8B%E9%A1%B5%E9%9D%A2%EF%BC%9A\">http://www.stat-nba.com/award/item18.html，选中武切维奇的名字，右键打开右键菜单，选择“查看页面元素”。出现如下页面：</a></p>\n<p><img src=\"/2019/11/20/Python%E6%95%B0%E6%8D%AE%E7%88%AC%E8%99%AB%E5%AE%9E%E8%B7%B5-%E7%88%AC%E5%8F%96%E5%8E%86%E5%B9%B4%E4%B8%9C%E8%A5%BF%E9%83%A8%E5%91%A8%E6%9C%80%E4%BD%B3%E5%AF%B9%E6%AF%94/3.png\"></p>\n<p>注意，我们需要获取到的是<strong>所有的周最佳数据</strong>，而不是某个人的，因此我们需要找到这个页面元素的父元素，因此才能找到这个父元素下面的所有子元素-即所有的周最佳数据。</p>\n<p><img src=\"/2019/11/20/Python%E6%95%B0%E6%8D%AE%E7%88%AC%E8%99%AB%E5%AE%9E%E8%B7%B5-%E7%88%AC%E5%8F%96%E5%8E%86%E5%B9%B4%E4%B8%9C%E8%A5%BF%E9%83%A8%E5%91%A8%E6%9C%80%E4%BD%B3%E5%AF%B9%E6%AF%94/4.png\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如图所示，周最佳数据的节点来自于&lt;td class=&#x27;current&#x27;&gt; -&gt; &lt;table class=&#x27;stat-box&#x27;  style=&#x27;width:170px;border:0&#x27;&gt;  -&gt; &lt;td&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">根据网页上下文的查看，可以知道&quot;&lt;td class=&quot;current&quot;&gt;是赛季的节点，&lt;table class=&quot;stat-box&quot; style=&quot;width:170px;border:0&quot;&gt;是每个赛季下每周的节点，而&lt;td&gt;就是每周下面每个球员的节点。</span><br></pre></td></tr></table></figure>\n<span id=\"more\"></span>\n<p>因此我们根据节点的继承关系，可以写出如下的基本的爬虫逻辑。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> urllib.request <span class=\"keyword\">import</span> urlopen</span><br><span class=\"line\"><span class=\"keyword\">from</span> bs4 <span class=\"keyword\">import</span> BeautifulSoup</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取周最佳页面</span></span><br><span class=\"line\">html = urlopen(<span class=\"string\">&quot;http://www.stat-nba.com/award/item18.html&quot;</span>).read().decode(<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 格式化为lxml</span></span><br><span class=\"line\">soup = BeautifulSoup(html, features=<span class=\"string\">&#x27;lxml&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 查找&lt;td class=&quot;current&quot;&gt; 获取各个赛季</span></span><br><span class=\"line\">outResult = soup.find_all(<span class=\"string\">&quot;td&quot;</span>, &#123;<span class=\"string\">&quot;class&quot;</span>: <span class=\"string\">&quot;current&quot;</span>&#125;)</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(outResult)):</span><br><span class=\"line\">    single = outResult[i]</span><br><span class=\"line\">    <span class=\"comment\"># 获取每赛季数据 </span></span><br><span class=\"line\">    data = single.parent.find_all(<span class=\"string\">&quot;table&quot;</span>, &#123;<span class=\"string\">&quot;class&quot;</span>: <span class=\"string\">&quot;stat_box&quot;</span>, <span class=\"string\">&quot;style&quot;</span>: <span class=\"string\">&quot;width:170px;border:0&quot;</span>&#125;)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(data)):</span><br><span class=\"line\">        singleData = data[j]</span><br><span class=\"line\">        <span class=\"comment\"># 获取周</span></span><br><span class=\"line\">        week = singleData.find(<span class=\"string\">&quot;th&quot;</span>)</span><br><span class=\"line\">        tdList = singleData.find_all(<span class=\"string\">&quot;td&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> k <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(tdList)):</span><br><span class=\"line\">            singleTd = tdList[k]</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(week.text, singleTd.text)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>输出结果如下：</p>\n<p><img src=\"/2019/11/20/Python%E6%95%B0%E6%8D%AE%E7%88%AC%E8%99%AB%E5%AE%9E%E8%B7%B5-%E7%88%AC%E5%8F%96%E5%8E%86%E5%B9%B4%E4%B8%9C%E8%A5%BF%E9%83%A8%E5%91%A8%E6%9C%80%E4%BD%B3%E5%AF%B9%E6%AF%94/5.png\"></p>\n<h3 id=\"爬取周最佳数据\"><a href=\"#爬取周最佳数据\" class=\"headerlink\" title=\"爬取周最佳数据\"></a>爬取周最佳数据</h3><p>接下来我们爬取每个球员的周最佳数据，点击球员旁边的“数据”按钮，会跳转到周数据页面。</p>\n<p><img src=\"/2019/11/20/Python%E6%95%B0%E6%8D%AE%E7%88%AC%E8%99%AB%E5%AE%9E%E8%B7%B5-%E7%88%AC%E5%8F%96%E5%8E%86%E5%B9%B4%E4%B8%9C%E8%A5%BF%E9%83%A8%E5%91%A8%E6%9C%80%E4%BD%B3%E5%AF%B9%E6%AF%94/6.png\"></p>\n<p><img src=\"/2019/11/20/Python%E6%95%B0%E6%8D%AE%E7%88%AC%E8%99%AB%E5%AE%9E%E8%B7%B5-%E7%88%AC%E5%8F%96%E5%8E%86%E5%B9%B4%E4%B8%9C%E8%A5%BF%E9%83%A8%E5%91%A8%E6%9C%80%E4%BD%B3%E5%AF%B9%E6%AF%94/7.png\"></p>\n<p>根据看到数据页面是在球员td标签下的第二个a标签下</p>\n<p><img src=\"/2019/11/20/Python%E6%95%B0%E6%8D%AE%E7%88%AC%E8%99%AB%E5%AE%9E%E8%B7%B5-%E7%88%AC%E5%8F%96%E5%8E%86%E5%B9%B4%E4%B8%9C%E8%A5%BF%E9%83%A8%E5%91%A8%E6%9C%80%E4%BD%B3%E5%AF%B9%E6%AF%94/8.png\"></p>\n<p>根据a标签的结构使用如下代码来获取球员数据的链接：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tdData = singleTd.find_all(<span class=\"string\">&quot;a&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(tdData) &gt; <span class=\"number\">1</span>:</span><br><span class=\"line\">    <span class=\"comment\"># 爬取最佳周数据</span></span><br><span class=\"line\">    playerUrl = tdData[<span class=\"number\">1</span>].attrs[<span class=\"string\">&#x27;href&#x27;</span>].replace(<span class=\"string\">&quot;..&quot;</span>, <span class=\"string\">&quot;http://www.stat-nba.com&quot;</span>, <span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n\n<p>获取到链接之后，按照前文所述来爬取球员的详细数据：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 爬取最佳周数据</span></span><br><span class=\"line\">playerUrl = tdData[<span class=\"number\">1</span>].attrs[<span class=\"string\">&#x27;href&#x27;</span>].replace(<span class=\"string\">&quot;..&quot;</span>, <span class=\"string\">&quot;http://www.stat-nba.com&quot;</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">playerHtml = urlopen(playerUrl).read().decode(<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\">playerSoup = BeautifulSoup(playerHtml, features=<span class=\"string\">&#x27;lxml&#x27;</span>)</span><br><span class=\"line\">playerTable = playerSoup.find(<span class=\"string\">&quot;table&quot;</span>, &#123;<span class=\"string\">&quot;class&quot;</span>: <span class=\"string\">&quot;stat_box&quot;</span>&#125;)</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"built_in\">hasattr</span>(playerTable, <span class=\"string\">&#x27;find_all&#x27;</span>):</span><br><span class=\"line\">    playerStatList = playerTable.find_all(<span class=\"string\">&quot;td&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">hasattr</span>(playerTable, <span class=\"string\">&#x27;find_all&#x27;</span>):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> m <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"built_in\">len</span>(playerStatList)):</span><br><span class=\"line\">            playerStat = playerStatList[m]</span><br><span class=\"line\">            <span class=\"comment\"># 打印数据</span></span><br><span class=\"line\">            <span class=\"built_in\">print</span>(playerStat.text)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"输出数据到Excel\"><a href=\"#输出数据到Excel\" class=\"headerlink\" title=\"输出数据到Excel\"></a>输出数据到Excel</h3><p>将前文进行整合，并将数据输出到Excel，代码如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">from</span> urllib.request <span class=\"keyword\">import</span> urlopen</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> xlwt <span class=\"keyword\">as</span> xlwt</span><br><span class=\"line\"><span class=\"keyword\">from</span> bs4 <span class=\"keyword\">import</span> BeautifulSoup</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 定义单元格格式</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">set_style</span>(<span class=\"params\">name=<span class=\"string\">&#x27;Times New Roman&#x27;</span>, height=<span class=\"number\">220</span>, bold=<span class=\"literal\">False</span></span>):</span></span><br><span class=\"line\">    style = xlwt.XFStyle()</span><br><span class=\"line\">    font = xlwt.Font()</span><br><span class=\"line\">    font.name = name</span><br><span class=\"line\">    font.bold = bold</span><br><span class=\"line\">    font.color_index = <span class=\"number\">4</span></span><br><span class=\"line\">    font.height = height</span><br><span class=\"line\">    style.font = font</span><br><span class=\"line\">    <span class=\"keyword\">return</span> style</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">html = urlopen(<span class=\"string\">&quot;http://www.stat-nba.com/award/item18.html&quot;</span>).read().decode(<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\">soup = BeautifulSoup(html, features=<span class=\"string\">&#x27;lxml&#x27;</span>)</span><br><span class=\"line\">outResult = soup.find_all(<span class=\"string\">&quot;td&quot;</span>, &#123;<span class=\"string\">&quot;class&quot;</span>: <span class=\"string\">&quot;current&quot;</span>&#125;)</span><br><span class=\"line\"><span class=\"comment\"># 创建excel</span></span><br><span class=\"line\">f = xlwt.Workbook()</span><br><span class=\"line\">sheet1 = f.add_sheet(<span class=\"string\">&#x27;周最佳数据&#x27;</span>, cell_overwrite_ok=<span class=\"literal\">True</span>)</span><br><span class=\"line\">num = <span class=\"number\">0</span></span><br><span class=\"line\">style = set_style()</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(outResult)):</span><br><span class=\"line\">    single = outResult[i]</span><br><span class=\"line\">    <span class=\"comment\"># 2000年以前数据不再显示</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> single.text.startswith(<span class=\"string\">&quot;19&quot;</span>):</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"comment\"># 获取每赛季数据</span></span><br><span class=\"line\">    data = single.parent.find_all(<span class=\"string\">&quot;table&quot;</span>, &#123;<span class=\"string\">&quot;class&quot;</span>: <span class=\"string\">&quot;stat_box&quot;</span>, <span class=\"string\">&quot;style&quot;</span>: <span class=\"string\">&quot;width:170px;border:0&quot;</span>&#125;)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(data)):</span><br><span class=\"line\">        singleData = data[j]</span><br><span class=\"line\">        <span class=\"comment\"># 打印周</span></span><br><span class=\"line\">        week = singleData.find(<span class=\"string\">&quot;th&quot;</span>)</span><br><span class=\"line\">        tdList = singleData.find_all(<span class=\"string\">&quot;td&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> k <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(tdList)):</span><br><span class=\"line\">            singleTd = tdList[k]</span><br><span class=\"line\">            <span class=\"comment\"># 暂停随机时间，以避免被反爬虫</span></span><br><span class=\"line\">            sleeptime = random.randint(<span class=\"number\">0</span>, <span class=\"number\">1000</span>)</span><br><span class=\"line\">            time.sleep(sleeptime / <span class=\"number\">1000</span>)</span><br><span class=\"line\">            tdData = singleTd.find_all(<span class=\"string\">&quot;a&quot;</span>)</span><br><span class=\"line\">            <span class=\"comment\"># 获取球员名</span></span><br><span class=\"line\">            playerName = tdData[<span class=\"number\">0</span>].text</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(single.text, week.text, playerName)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(tdData) &gt; <span class=\"number\">1</span>:</span><br><span class=\"line\">                <span class=\"comment\"># 爬取最佳周数据</span></span><br><span class=\"line\">                playerUrl = tdData[<span class=\"number\">1</span>].attrs[<span class=\"string\">&#x27;href&#x27;</span>].replace(<span class=\"string\">&quot;..&quot;</span>, <span class=\"string\">&quot;http://www.stat-nba.com&quot;</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">                playerHtml = urlopen(playerUrl).read().decode(<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\">                playerSoup = BeautifulSoup(playerHtml, features=<span class=\"string\">&#x27;lxml&#x27;</span>)</span><br><span class=\"line\">                playerTable = playerSoup.find(<span class=\"string\">&quot;table&quot;</span>, &#123;<span class=\"string\">&quot;class&quot;</span>: <span class=\"string\">&quot;stat_box&quot;</span>&#125;)</span><br><span class=\"line\">                <span class=\"keyword\">if</span> <span class=\"built_in\">hasattr</span>(playerTable, <span class=\"string\">&#x27;find_all&#x27;</span>):</span><br><span class=\"line\">                    playerStatList = playerTable.find_all(<span class=\"string\">&quot;td&quot;</span>)</span><br><span class=\"line\">                sheet1.write(num, <span class=\"number\">0</span>, single.text, style)</span><br><span class=\"line\">                sheet1.write(num, <span class=\"number\">1</span>, week.text, style)</span><br><span class=\"line\">                <span class=\"keyword\">if</span> <span class=\"built_in\">hasattr</span>(playerTable, <span class=\"string\">&#x27;find_all&#x27;</span>):</span><br><span class=\"line\">                    <span class=\"keyword\">for</span> m <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"built_in\">len</span>(playerStatList)):</span><br><span class=\"line\">                        playerStat = playerStatList[m]</span><br><span class=\"line\">                        <span class=\"comment\"># 打印赛季</span></span><br><span class=\"line\">                        sheet1.write(num, <span class=\"number\">1</span> + m, playerStat.text, style)</span><br><span class=\"line\">                num = num + <span class=\"number\">1</span></span><br><span class=\"line\">f.save(<span class=\"string\">&#x27;nbastat-week.xls&#x27;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<p>输出的结果如下：</p>\n<p><img src=\"/2019/11/20/Python%E6%95%B0%E6%8D%AE%E7%88%AC%E8%99%AB%E5%AE%9E%E8%B7%B5-%E7%88%AC%E5%8F%96%E5%8E%86%E5%B9%B4%E4%B8%9C%E8%A5%BF%E9%83%A8%E5%91%A8%E6%9C%80%E4%BD%B3%E5%AF%B9%E6%AF%94/9.png\"></p>\n<h2 id=\"分析数据\"><a href=\"#分析数据\" class=\"headerlink\" title=\"分析数据\"></a>分析数据</h2><p>分析过程我就懒得再写一遍了，之前已经将分析结果发布到虎扑，链接是<a href=\"https://bbs.hupu.com/30738461.html\">https://bbs.hupu.com/30738461.html</a></p>\n<p><img src=\"/2019/11/20/Python%E6%95%B0%E6%8D%AE%E7%88%AC%E8%99%AB%E5%AE%9E%E8%B7%B5-%E7%88%AC%E5%8F%96%E5%8E%86%E5%B9%B4%E4%B8%9C%E8%A5%BF%E9%83%A8%E5%91%A8%E6%9C%80%E4%BD%B3%E5%AF%B9%E6%AF%94/10.png\"></p>\n<p><img src=\"/2019/11/20/Python%E6%95%B0%E6%8D%AE%E7%88%AC%E8%99%AB%E5%AE%9E%E8%B7%B5-%E7%88%AC%E5%8F%96%E5%8E%86%E5%B9%B4%E4%B8%9C%E8%A5%BF%E9%83%A8%E5%91%A8%E6%9C%80%E4%BD%B3%E5%AF%B9%E6%AF%94/11.png\"></p>\n","site":{"data":{}},"excerpt":"<h2 id=\"数据来源\"><a href=\"#数据来源\" class=\"headerlink\" title=\"数据来源\"></a>数据来源</h2><p>历年周最佳的数据来自于NBA数据官网，链接为 <a href=\"http://www.stat-nba.com/award/item18.html\">http://www.stat-nba.com/award/item18.html</a></p>\n<p><img src=\"/2019/11/20/Python%E6%95%B0%E6%8D%AE%E7%88%AC%E8%99%AB%E5%AE%9E%E8%B7%B5-%E7%88%AC%E5%8F%96%E5%8E%86%E5%B9%B4%E4%B8%9C%E8%A5%BF%E9%83%A8%E5%91%A8%E6%9C%80%E4%BD%B3%E5%AF%B9%E6%AF%94/1.png\"></p>\n<p>这里可以看到每个赛季的周最佳球员。然后每个球员旁边有个数据的链接，表示的就是这名球员当周的平均数据。比如11月11日-11月17日的东部周最佳是武切维奇，其数据链接为<a href=\"http://www.stat-nba.com/player/3672.html\">http://www.stat-nba.com/player/3672.html</a></p>\n<p><img src=\"/2019/11/20/Python%E6%95%B0%E6%8D%AE%E7%88%AC%E8%99%AB%E5%AE%9E%E8%B7%B5-%E7%88%AC%E5%8F%96%E5%8E%86%E5%B9%B4%E4%B8%9C%E8%A5%BF%E9%83%A8%E5%91%A8%E6%9C%80%E4%BD%B3%E5%AF%B9%E6%AF%94/2.png\"></p>\n<h2 id=\"数据处理\"><a href=\"#数据处理\" class=\"headerlink\" title=\"数据处理\"></a>数据处理</h2><h3 id=\"爬取周最佳球员\"><a href=\"#爬取周最佳球员\" class=\"headerlink\" title=\"爬取周最佳球员\"></a>爬取周最佳球员</h3><p>首先看周最佳的页面，链接是<a href=\"http://www.stat-nba.com/award/item18.html%EF%BC%8C%E9%80%89%E4%B8%AD%E6%AD%A6%E5%88%87%E7%BB%B4%E5%A5%87%E7%9A%84%E5%90%8D%E5%AD%97%EF%BC%8C%E5%8F%B3%E9%94%AE%E6%89%93%E5%BC%80%E5%8F%B3%E9%94%AE%E8%8F%9C%E5%8D%95%EF%BC%8C%E9%80%89%E6%8B%A9%E2%80%9C%E6%9F%A5%E7%9C%8B%E9%A1%B5%E9%9D%A2%E5%85%83%E7%B4%A0%E2%80%9D%E3%80%82%E5%87%BA%E7%8E%B0%E5%A6%82%E4%B8%8B%E9%A1%B5%E9%9D%A2%EF%BC%9A\">http://www.stat-nba.com/award/item18.html，选中武切维奇的名字，右键打开右键菜单，选择“查看页面元素”。出现如下页面：</a></p>\n<p><img src=\"/2019/11/20/Python%E6%95%B0%E6%8D%AE%E7%88%AC%E8%99%AB%E5%AE%9E%E8%B7%B5-%E7%88%AC%E5%8F%96%E5%8E%86%E5%B9%B4%E4%B8%9C%E8%A5%BF%E9%83%A8%E5%91%A8%E6%9C%80%E4%BD%B3%E5%AF%B9%E6%AF%94/3.png\"></p>\n<p>注意，我们需要获取到的是<strong>所有的周最佳数据</strong>，而不是某个人的，因此我们需要找到这个页面元素的父元素，因此才能找到这个父元素下面的所有子元素-即所有的周最佳数据。</p>\n<p><img src=\"/2019/11/20/Python%E6%95%B0%E6%8D%AE%E7%88%AC%E8%99%AB%E5%AE%9E%E8%B7%B5-%E7%88%AC%E5%8F%96%E5%8E%86%E5%B9%B4%E4%B8%9C%E8%A5%BF%E9%83%A8%E5%91%A8%E6%9C%80%E4%BD%B3%E5%AF%B9%E6%AF%94/4.png\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如图所示，周最佳数据的节点来自于&lt;td class=&#x27;current&#x27;&gt; -&gt; &lt;table class=&#x27;stat-box&#x27;  style=&#x27;width:170px;border:0&#x27;&gt;  -&gt; &lt;td&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">根据网页上下文的查看，可以知道&quot;&lt;td class=&quot;current&quot;&gt;是赛季的节点，&lt;table class=&quot;stat-box&quot; style=&quot;width:170px;border:0&quot;&gt;是每个赛季下每周的节点，而&lt;td&gt;就是每周下面每个球员的节点。</span><br></pre></td></tr></table></figure>","more":"<p>因此我们根据节点的继承关系，可以写出如下的基本的爬虫逻辑。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> urllib.request <span class=\"keyword\">import</span> urlopen</span><br><span class=\"line\"><span class=\"keyword\">from</span> bs4 <span class=\"keyword\">import</span> BeautifulSoup</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取周最佳页面</span></span><br><span class=\"line\">html = urlopen(<span class=\"string\">&quot;http://www.stat-nba.com/award/item18.html&quot;</span>).read().decode(<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 格式化为lxml</span></span><br><span class=\"line\">soup = BeautifulSoup(html, features=<span class=\"string\">&#x27;lxml&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 查找&lt;td class=&quot;current&quot;&gt; 获取各个赛季</span></span><br><span class=\"line\">outResult = soup.find_all(<span class=\"string\">&quot;td&quot;</span>, &#123;<span class=\"string\">&quot;class&quot;</span>: <span class=\"string\">&quot;current&quot;</span>&#125;)</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(outResult)):</span><br><span class=\"line\">    single = outResult[i]</span><br><span class=\"line\">    <span class=\"comment\"># 获取每赛季数据 </span></span><br><span class=\"line\">    data = single.parent.find_all(<span class=\"string\">&quot;table&quot;</span>, &#123;<span class=\"string\">&quot;class&quot;</span>: <span class=\"string\">&quot;stat_box&quot;</span>, <span class=\"string\">&quot;style&quot;</span>: <span class=\"string\">&quot;width:170px;border:0&quot;</span>&#125;)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(data)):</span><br><span class=\"line\">        singleData = data[j]</span><br><span class=\"line\">        <span class=\"comment\"># 获取周</span></span><br><span class=\"line\">        week = singleData.find(<span class=\"string\">&quot;th&quot;</span>)</span><br><span class=\"line\">        tdList = singleData.find_all(<span class=\"string\">&quot;td&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> k <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(tdList)):</span><br><span class=\"line\">            singleTd = tdList[k]</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(week.text, singleTd.text)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>输出结果如下：</p>\n<p><img src=\"/2019/11/20/Python%E6%95%B0%E6%8D%AE%E7%88%AC%E8%99%AB%E5%AE%9E%E8%B7%B5-%E7%88%AC%E5%8F%96%E5%8E%86%E5%B9%B4%E4%B8%9C%E8%A5%BF%E9%83%A8%E5%91%A8%E6%9C%80%E4%BD%B3%E5%AF%B9%E6%AF%94/5.png\"></p>\n<h3 id=\"爬取周最佳数据\"><a href=\"#爬取周最佳数据\" class=\"headerlink\" title=\"爬取周最佳数据\"></a>爬取周最佳数据</h3><p>接下来我们爬取每个球员的周最佳数据，点击球员旁边的“数据”按钮，会跳转到周数据页面。</p>\n<p><img src=\"/2019/11/20/Python%E6%95%B0%E6%8D%AE%E7%88%AC%E8%99%AB%E5%AE%9E%E8%B7%B5-%E7%88%AC%E5%8F%96%E5%8E%86%E5%B9%B4%E4%B8%9C%E8%A5%BF%E9%83%A8%E5%91%A8%E6%9C%80%E4%BD%B3%E5%AF%B9%E6%AF%94/6.png\"></p>\n<p><img src=\"/2019/11/20/Python%E6%95%B0%E6%8D%AE%E7%88%AC%E8%99%AB%E5%AE%9E%E8%B7%B5-%E7%88%AC%E5%8F%96%E5%8E%86%E5%B9%B4%E4%B8%9C%E8%A5%BF%E9%83%A8%E5%91%A8%E6%9C%80%E4%BD%B3%E5%AF%B9%E6%AF%94/7.png\"></p>\n<p>根据看到数据页面是在球员td标签下的第二个a标签下</p>\n<p><img src=\"/2019/11/20/Python%E6%95%B0%E6%8D%AE%E7%88%AC%E8%99%AB%E5%AE%9E%E8%B7%B5-%E7%88%AC%E5%8F%96%E5%8E%86%E5%B9%B4%E4%B8%9C%E8%A5%BF%E9%83%A8%E5%91%A8%E6%9C%80%E4%BD%B3%E5%AF%B9%E6%AF%94/8.png\"></p>\n<p>根据a标签的结构使用如下代码来获取球员数据的链接：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tdData = singleTd.find_all(<span class=\"string\">&quot;a&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(tdData) &gt; <span class=\"number\">1</span>:</span><br><span class=\"line\">    <span class=\"comment\"># 爬取最佳周数据</span></span><br><span class=\"line\">    playerUrl = tdData[<span class=\"number\">1</span>].attrs[<span class=\"string\">&#x27;href&#x27;</span>].replace(<span class=\"string\">&quot;..&quot;</span>, <span class=\"string\">&quot;http://www.stat-nba.com&quot;</span>, <span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n\n<p>获取到链接之后，按照前文所述来爬取球员的详细数据：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 爬取最佳周数据</span></span><br><span class=\"line\">playerUrl = tdData[<span class=\"number\">1</span>].attrs[<span class=\"string\">&#x27;href&#x27;</span>].replace(<span class=\"string\">&quot;..&quot;</span>, <span class=\"string\">&quot;http://www.stat-nba.com&quot;</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">playerHtml = urlopen(playerUrl).read().decode(<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\">playerSoup = BeautifulSoup(playerHtml, features=<span class=\"string\">&#x27;lxml&#x27;</span>)</span><br><span class=\"line\">playerTable = playerSoup.find(<span class=\"string\">&quot;table&quot;</span>, &#123;<span class=\"string\">&quot;class&quot;</span>: <span class=\"string\">&quot;stat_box&quot;</span>&#125;)</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"built_in\">hasattr</span>(playerTable, <span class=\"string\">&#x27;find_all&#x27;</span>):</span><br><span class=\"line\">    playerStatList = playerTable.find_all(<span class=\"string\">&quot;td&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">hasattr</span>(playerTable, <span class=\"string\">&#x27;find_all&#x27;</span>):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> m <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"built_in\">len</span>(playerStatList)):</span><br><span class=\"line\">            playerStat = playerStatList[m]</span><br><span class=\"line\">            <span class=\"comment\"># 打印数据</span></span><br><span class=\"line\">            <span class=\"built_in\">print</span>(playerStat.text)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"输出数据到Excel\"><a href=\"#输出数据到Excel\" class=\"headerlink\" title=\"输出数据到Excel\"></a>输出数据到Excel</h3><p>将前文进行整合，并将数据输出到Excel，代码如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">from</span> urllib.request <span class=\"keyword\">import</span> urlopen</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> xlwt <span class=\"keyword\">as</span> xlwt</span><br><span class=\"line\"><span class=\"keyword\">from</span> bs4 <span class=\"keyword\">import</span> BeautifulSoup</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 定义单元格格式</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">set_style</span>(<span class=\"params\">name=<span class=\"string\">&#x27;Times New Roman&#x27;</span>, height=<span class=\"number\">220</span>, bold=<span class=\"literal\">False</span></span>):</span></span><br><span class=\"line\">    style = xlwt.XFStyle()</span><br><span class=\"line\">    font = xlwt.Font()</span><br><span class=\"line\">    font.name = name</span><br><span class=\"line\">    font.bold = bold</span><br><span class=\"line\">    font.color_index = <span class=\"number\">4</span></span><br><span class=\"line\">    font.height = height</span><br><span class=\"line\">    style.font = font</span><br><span class=\"line\">    <span class=\"keyword\">return</span> style</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">html = urlopen(<span class=\"string\">&quot;http://www.stat-nba.com/award/item18.html&quot;</span>).read().decode(<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\">soup = BeautifulSoup(html, features=<span class=\"string\">&#x27;lxml&#x27;</span>)</span><br><span class=\"line\">outResult = soup.find_all(<span class=\"string\">&quot;td&quot;</span>, &#123;<span class=\"string\">&quot;class&quot;</span>: <span class=\"string\">&quot;current&quot;</span>&#125;)</span><br><span class=\"line\"><span class=\"comment\"># 创建excel</span></span><br><span class=\"line\">f = xlwt.Workbook()</span><br><span class=\"line\">sheet1 = f.add_sheet(<span class=\"string\">&#x27;周最佳数据&#x27;</span>, cell_overwrite_ok=<span class=\"literal\">True</span>)</span><br><span class=\"line\">num = <span class=\"number\">0</span></span><br><span class=\"line\">style = set_style()</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(outResult)):</span><br><span class=\"line\">    single = outResult[i]</span><br><span class=\"line\">    <span class=\"comment\"># 2000年以前数据不再显示</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> single.text.startswith(<span class=\"string\">&quot;19&quot;</span>):</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"comment\"># 获取每赛季数据</span></span><br><span class=\"line\">    data = single.parent.find_all(<span class=\"string\">&quot;table&quot;</span>, &#123;<span class=\"string\">&quot;class&quot;</span>: <span class=\"string\">&quot;stat_box&quot;</span>, <span class=\"string\">&quot;style&quot;</span>: <span class=\"string\">&quot;width:170px;border:0&quot;</span>&#125;)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(data)):</span><br><span class=\"line\">        singleData = data[j]</span><br><span class=\"line\">        <span class=\"comment\"># 打印周</span></span><br><span class=\"line\">        week = singleData.find(<span class=\"string\">&quot;th&quot;</span>)</span><br><span class=\"line\">        tdList = singleData.find_all(<span class=\"string\">&quot;td&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> k <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(tdList)):</span><br><span class=\"line\">            singleTd = tdList[k]</span><br><span class=\"line\">            <span class=\"comment\"># 暂停随机时间，以避免被反爬虫</span></span><br><span class=\"line\">            sleeptime = random.randint(<span class=\"number\">0</span>, <span class=\"number\">1000</span>)</span><br><span class=\"line\">            time.sleep(sleeptime / <span class=\"number\">1000</span>)</span><br><span class=\"line\">            tdData = singleTd.find_all(<span class=\"string\">&quot;a&quot;</span>)</span><br><span class=\"line\">            <span class=\"comment\"># 获取球员名</span></span><br><span class=\"line\">            playerName = tdData[<span class=\"number\">0</span>].text</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(single.text, week.text, playerName)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(tdData) &gt; <span class=\"number\">1</span>:</span><br><span class=\"line\">                <span class=\"comment\"># 爬取最佳周数据</span></span><br><span class=\"line\">                playerUrl = tdData[<span class=\"number\">1</span>].attrs[<span class=\"string\">&#x27;href&#x27;</span>].replace(<span class=\"string\">&quot;..&quot;</span>, <span class=\"string\">&quot;http://www.stat-nba.com&quot;</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">                playerHtml = urlopen(playerUrl).read().decode(<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\">                playerSoup = BeautifulSoup(playerHtml, features=<span class=\"string\">&#x27;lxml&#x27;</span>)</span><br><span class=\"line\">                playerTable = playerSoup.find(<span class=\"string\">&quot;table&quot;</span>, &#123;<span class=\"string\">&quot;class&quot;</span>: <span class=\"string\">&quot;stat_box&quot;</span>&#125;)</span><br><span class=\"line\">                <span class=\"keyword\">if</span> <span class=\"built_in\">hasattr</span>(playerTable, <span class=\"string\">&#x27;find_all&#x27;</span>):</span><br><span class=\"line\">                    playerStatList = playerTable.find_all(<span class=\"string\">&quot;td&quot;</span>)</span><br><span class=\"line\">                sheet1.write(num, <span class=\"number\">0</span>, single.text, style)</span><br><span class=\"line\">                sheet1.write(num, <span class=\"number\">1</span>, week.text, style)</span><br><span class=\"line\">                <span class=\"keyword\">if</span> <span class=\"built_in\">hasattr</span>(playerTable, <span class=\"string\">&#x27;find_all&#x27;</span>):</span><br><span class=\"line\">                    <span class=\"keyword\">for</span> m <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"built_in\">len</span>(playerStatList)):</span><br><span class=\"line\">                        playerStat = playerStatList[m]</span><br><span class=\"line\">                        <span class=\"comment\"># 打印赛季</span></span><br><span class=\"line\">                        sheet1.write(num, <span class=\"number\">1</span> + m, playerStat.text, style)</span><br><span class=\"line\">                num = num + <span class=\"number\">1</span></span><br><span class=\"line\">f.save(<span class=\"string\">&#x27;nbastat-week.xls&#x27;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<p>输出的结果如下：</p>\n<p><img src=\"/2019/11/20/Python%E6%95%B0%E6%8D%AE%E7%88%AC%E8%99%AB%E5%AE%9E%E8%B7%B5-%E7%88%AC%E5%8F%96%E5%8E%86%E5%B9%B4%E4%B8%9C%E8%A5%BF%E9%83%A8%E5%91%A8%E6%9C%80%E4%BD%B3%E5%AF%B9%E6%AF%94/9.png\"></p>\n<h2 id=\"分析数据\"><a href=\"#分析数据\" class=\"headerlink\" title=\"分析数据\"></a>分析数据</h2><p>分析过程我就懒得再写一遍了，之前已经将分析结果发布到虎扑，链接是<a href=\"https://bbs.hupu.com/30738461.html\">https://bbs.hupu.com/30738461.html</a></p>\n<p><img src=\"/2019/11/20/Python%E6%95%B0%E6%8D%AE%E7%88%AC%E8%99%AB%E5%AE%9E%E8%B7%B5-%E7%88%AC%E5%8F%96%E5%8E%86%E5%B9%B4%E4%B8%9C%E8%A5%BF%E9%83%A8%E5%91%A8%E6%9C%80%E4%BD%B3%E5%AF%B9%E6%AF%94/10.png\"></p>\n<p><img src=\"/2019/11/20/Python%E6%95%B0%E6%8D%AE%E7%88%AC%E8%99%AB%E5%AE%9E%E8%B7%B5-%E7%88%AC%E5%8F%96%E5%8E%86%E5%B9%B4%E4%B8%9C%E8%A5%BF%E9%83%A8%E5%91%A8%E6%9C%80%E4%BD%B3%E5%AF%B9%E6%AF%94/11.png\"></p>"},{"title":"azkaban简单搭建","date":"2020-04-29T01:15:11.000Z","_content":"前言：\nazkaban的用处和好处不再赘述，这里只讲怎么将azkaban在项目中使用起来。\n另外非常推荐直接看[官方的英文文档](https://azkaban.readthedocs.io/en/latest/)进行学习，那将是最新最可靠的教程。\n## 下载和安装azkaban  \n### 下载azkaban  \n方法1：直接到azkaban的github网页下载tar.gz包。截止2020.4.29日最新版本的包地址为(https://github.com/azkaban/azkaban/archive/3.84.10.tar.gz)  \n方法2：在linux执行   \n```shell\nwget https://github.com/azkaban/azkaban/archive/3.84.10.tar.gz\n```\n### 安装azkaban  \n将包进行解压，执行\n```shell\ntar -zxvf azkaban-3.81.10.tar.gz\n```\n解压完成后目录结构如下图  \n<!-- more -->\n![](1.png)  \n如果使用solo-server方式的话，不需要建表，下面的步骤也都可以不用看，直接跳转看[solo-server](https://azkaban.readthedocs.io/en/latest/getStarted.html#getting-started-with-the-solo-server)  \n但是个人理解solo-server只适用于小型简单的项目，如果考虑项目以后的扩充和发展的话，建议一开始就使用multi-executor-server方式，该方式需要建表。  \n步骤如下：\n### 新增azkaban相关表  \n复制如下文件内的sql语句，在事先建好的数据库内执行  \n```shell\nvi azkaban-3.81.10/azkaban-db/build/sql/create-all-sql-0.1.0-SNAPSHOT.sql\n```\n- 可能有的坑：\n早期版本的mysql可能不支持长度过长的字段设为索引和主键，遇到这种报错时，需要将对应的字段改短再执行。过长的字段比如 execution_logs.name，sql给设置的长度是varchar(640)，在我的mysql数据库中执行会报错，我改成了varchar(200)，这个字段的含义是任务名，一般来说你正常命名的话完全用不到640个字段的长度，所以可以放心修改。  \n### 编译azkaban  \n在azkaban目录下执行  \n```\n./gradlew build installDist\n```\n可能有的坑:\n- 部分依赖包可能无法下载，修改build.gradle，将repositories指向国内阿里云地址，如下：\n```\nbuildscript {\n  repositories {\n        maven {\n            url 'http://maven.aliyun.com/nexus/content/groups/public/'\n        }\n        maven {\n            url 'http://maven.aliyun.com/repository/google'\n        }\n        maven {\n            url 'http://maven.aliyun.com/repository/jcenter'\n        }\n  }\n  dependencies {\n    classpath 'com.cinnober.gradle:semver-git:2.2.3'\n    classpath 'net.ltgt.gradle:gradle-errorprone-plugin:0.0.14'\n    classpath  'com.github.jengelman.gradle.plugins:shadow:4.0.0'\n  }\n}\n```\n\n- 如果出现编译报错的情况，可以尝试将编译期间的test过程注释掉，或者进入azkaban-executor-server和azkban-web-server目录下单独编译这两个包。  \n\n### 启动azkban-executor-server  \n- 修改配置文件 \n```\nvi ../azkaban-3.81.0/azkaban-exec-server/build/install/azkaban-exec-server/conf/azkaban.properties\n```\n需要修改的内容如下  \n> default.timezone.id=Asia/Shanghai # 修改为中国时区\nazkaban.webserver.url=localhost:8199 # 指向本地的azkaban-web-server地址\n#数据库配置，指向azkban建表的数据库，根据实际的数据库配置来\ndatabase.type=mysql\nmysql.port=3306\nmysql.host=110.110.110.110\nmysql.database=azkaban\nmysql.user=azkaban\nmysql.password=azkaban  \n\n- 启动azkaban-executor-server  \n```shell\ncd ../azkaban-3.81.0/azkaban-exec-server/build/install/azkaban-exec-server;\nbin/start-exec.sh; # 注意一定要按照这个语句执行,不要在bin目录下执行./start-exe.sh，否则某些资源文件会加载不到，导致报错\n```\n-  激活executor\n```\n# 指向executor地址和端口\ncurl localhost:port/executor?action=activate\n```\n\n### 启动azkaban-web-server  \n- 修改配置文件\n```\nvi ../azkaban-3.81.0/azkaban-web-server/build/install/azkaban-exec-server/conf/azkaban.properties\n```\n需要修改的内容如下  \n> default.timezone.id=Asia/Shanghai # 修改为中国时区\n#邮件配置\nmail.sender=888888@qq.com # 发送邮件的邮箱\nmail.host=smtp.qq.com  # 邮件服务器\nmail.user=888888@qq.com # 邮件用户\nmail.password=abc123456 #密码需要取qq邮箱中获取到的授权码\njob.failure.email=8888888@qq.com # 定时任务执行失败发送邮件的邮箱\n#数据库配置，指向azkban建表的数据库，根据实际的数据库配置来\ndatabase.type=mysql\nmysql.port=3306\nmysql.host=110.110.110.110\nmysql.database=azkaban\nmysql.user=azkaban\nmysql.password=azkaban\n\n- 启动azkaban-web-server  \n```shell\ncd ../azkaban-3.81.0/azkaban-web-server/build/install/azkaban-web-server;\nbin/start-web.sh;\n```\n### 访问azkaban  \n浏览器输入 localhost:8199，出现如下界面 \n![](2.png)  \n用户名密码默认均为azkban，可以在 ../azkaban-3.81.0/azkaban-web-server/build/install/azkaban-web-server/conf/azkaban-users.xml 修改用户和密码  \n\n## 配置定时任务  \n","source":"_posts/azkaban简单搭建.md","raw":"---\ntitle: azkaban简单搭建\ndate: 2020-04-29 09:15:11\ntags:\n- azkaban\ncategories:\n- 学习\n- 搭建相关\n---\n前言：\nazkaban的用处和好处不再赘述，这里只讲怎么将azkaban在项目中使用起来。\n另外非常推荐直接看[官方的英文文档](https://azkaban.readthedocs.io/en/latest/)进行学习，那将是最新最可靠的教程。\n## 下载和安装azkaban  \n### 下载azkaban  \n方法1：直接到azkaban的github网页下载tar.gz包。截止2020.4.29日最新版本的包地址为(https://github.com/azkaban/azkaban/archive/3.84.10.tar.gz)  \n方法2：在linux执行   \n```shell\nwget https://github.com/azkaban/azkaban/archive/3.84.10.tar.gz\n```\n### 安装azkaban  \n将包进行解压，执行\n```shell\ntar -zxvf azkaban-3.81.10.tar.gz\n```\n解压完成后目录结构如下图  \n<!-- more -->\n![](1.png)  \n如果使用solo-server方式的话，不需要建表，下面的步骤也都可以不用看，直接跳转看[solo-server](https://azkaban.readthedocs.io/en/latest/getStarted.html#getting-started-with-the-solo-server)  \n但是个人理解solo-server只适用于小型简单的项目，如果考虑项目以后的扩充和发展的话，建议一开始就使用multi-executor-server方式，该方式需要建表。  \n步骤如下：\n### 新增azkaban相关表  \n复制如下文件内的sql语句，在事先建好的数据库内执行  \n```shell\nvi azkaban-3.81.10/azkaban-db/build/sql/create-all-sql-0.1.0-SNAPSHOT.sql\n```\n- 可能有的坑：\n早期版本的mysql可能不支持长度过长的字段设为索引和主键，遇到这种报错时，需要将对应的字段改短再执行。过长的字段比如 execution_logs.name，sql给设置的长度是varchar(640)，在我的mysql数据库中执行会报错，我改成了varchar(200)，这个字段的含义是任务名，一般来说你正常命名的话完全用不到640个字段的长度，所以可以放心修改。  \n### 编译azkaban  \n在azkaban目录下执行  \n```\n./gradlew build installDist\n```\n可能有的坑:\n- 部分依赖包可能无法下载，修改build.gradle，将repositories指向国内阿里云地址，如下：\n```\nbuildscript {\n  repositories {\n        maven {\n            url 'http://maven.aliyun.com/nexus/content/groups/public/'\n        }\n        maven {\n            url 'http://maven.aliyun.com/repository/google'\n        }\n        maven {\n            url 'http://maven.aliyun.com/repository/jcenter'\n        }\n  }\n  dependencies {\n    classpath 'com.cinnober.gradle:semver-git:2.2.3'\n    classpath 'net.ltgt.gradle:gradle-errorprone-plugin:0.0.14'\n    classpath  'com.github.jengelman.gradle.plugins:shadow:4.0.0'\n  }\n}\n```\n\n- 如果出现编译报错的情况，可以尝试将编译期间的test过程注释掉，或者进入azkaban-executor-server和azkban-web-server目录下单独编译这两个包。  \n\n### 启动azkban-executor-server  \n- 修改配置文件 \n```\nvi ../azkaban-3.81.0/azkaban-exec-server/build/install/azkaban-exec-server/conf/azkaban.properties\n```\n需要修改的内容如下  \n> default.timezone.id=Asia/Shanghai # 修改为中国时区\nazkaban.webserver.url=localhost:8199 # 指向本地的azkaban-web-server地址\n#数据库配置，指向azkban建表的数据库，根据实际的数据库配置来\ndatabase.type=mysql\nmysql.port=3306\nmysql.host=110.110.110.110\nmysql.database=azkaban\nmysql.user=azkaban\nmysql.password=azkaban  \n\n- 启动azkaban-executor-server  \n```shell\ncd ../azkaban-3.81.0/azkaban-exec-server/build/install/azkaban-exec-server;\nbin/start-exec.sh; # 注意一定要按照这个语句执行,不要在bin目录下执行./start-exe.sh，否则某些资源文件会加载不到，导致报错\n```\n-  激活executor\n```\n# 指向executor地址和端口\ncurl localhost:port/executor?action=activate\n```\n\n### 启动azkaban-web-server  \n- 修改配置文件\n```\nvi ../azkaban-3.81.0/azkaban-web-server/build/install/azkaban-exec-server/conf/azkaban.properties\n```\n需要修改的内容如下  \n> default.timezone.id=Asia/Shanghai # 修改为中国时区\n#邮件配置\nmail.sender=888888@qq.com # 发送邮件的邮箱\nmail.host=smtp.qq.com  # 邮件服务器\nmail.user=888888@qq.com # 邮件用户\nmail.password=abc123456 #密码需要取qq邮箱中获取到的授权码\njob.failure.email=8888888@qq.com # 定时任务执行失败发送邮件的邮箱\n#数据库配置，指向azkban建表的数据库，根据实际的数据库配置来\ndatabase.type=mysql\nmysql.port=3306\nmysql.host=110.110.110.110\nmysql.database=azkaban\nmysql.user=azkaban\nmysql.password=azkaban\n\n- 启动azkaban-web-server  \n```shell\ncd ../azkaban-3.81.0/azkaban-web-server/build/install/azkaban-web-server;\nbin/start-web.sh;\n```\n### 访问azkaban  \n浏览器输入 localhost:8199，出现如下界面 \n![](2.png)  \n用户名密码默认均为azkban，可以在 ../azkaban-3.81.0/azkaban-web-server/build/install/azkaban-web-server/conf/azkaban-users.xml 修改用户和密码  \n\n## 配置定时任务  \n","slug":"azkaban简单搭建","published":1,"updated":"2021-11-23T01:56:24.000Z","_id":"ckwadg4n2000673cf8ad5g5xu","comments":1,"layout":"post","photos":[],"link":"","content":"<p>前言：<br>azkaban的用处和好处不再赘述，这里只讲怎么将azkaban在项目中使用起来。<br>另外非常推荐直接看<a href=\"https://azkaban.readthedocs.io/en/latest/\">官方的英文文档</a>进行学习，那将是最新最可靠的教程。</p>\n<h2 id=\"下载和安装azkaban\"><a href=\"#下载和安装azkaban\" class=\"headerlink\" title=\"下载和安装azkaban\"></a>下载和安装azkaban</h2><h3 id=\"下载azkaban\"><a href=\"#下载azkaban\" class=\"headerlink\" title=\"下载azkaban\"></a>下载azkaban</h3><p>方法1：直接到azkaban的github网页下载tar.gz包。截止2020.4.29日最新版本的包地址为(<a href=\"https://github.com/azkaban/azkaban/archive/3.84.10.tar.gz\">https://github.com/azkaban/azkaban/archive/3.84.10.tar.gz</a>)<br>方法2：在linux执行   </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://github.com/azkaban/azkaban/archive/3.84.10.tar.gz</span><br></pre></td></tr></table></figure>\n<h3 id=\"安装azkaban\"><a href=\"#安装azkaban\" class=\"headerlink\" title=\"安装azkaban\"></a>安装azkaban</h3><p>将包进行解压，执行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -zxvf azkaban-3.81.10.tar.gz</span><br></pre></td></tr></table></figure>\n<p>解压完成后目录结构如下图  </p>\n<span id=\"more\"></span>\n<p><img src=\"/2020/04/29/azkaban%E7%AE%80%E5%8D%95%E6%90%AD%E5%BB%BA/1.png\"><br>如果使用solo-server方式的话，不需要建表，下面的步骤也都可以不用看，直接跳转看<a href=\"https://azkaban.readthedocs.io/en/latest/getStarted.html#getting-started-with-the-solo-server\">solo-server</a><br>但是个人理解solo-server只适用于小型简单的项目，如果考虑项目以后的扩充和发展的话，建议一开始就使用multi-executor-server方式，该方式需要建表。<br>步骤如下：</p>\n<h3 id=\"新增azkaban相关表\"><a href=\"#新增azkaban相关表\" class=\"headerlink\" title=\"新增azkaban相关表\"></a>新增azkaban相关表</h3><p>复制如下文件内的sql语句，在事先建好的数据库内执行  </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi azkaban-3.81.10/azkaban-db/build/sql/create-all-sql-0.1.0-SNAPSHOT.sql</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>可能有的坑：<br>早期版本的mysql可能不支持长度过长的字段设为索引和主键，遇到这种报错时，需要将对应的字段改短再执行。过长的字段比如 execution_logs.name，sql给设置的长度是varchar(640)，在我的mysql数据库中执行会报错，我改成了varchar(200)，这个字段的含义是任务名，一般来说你正常命名的话完全用不到640个字段的长度，所以可以放心修改。  </p>\n<h3 id=\"编译azkaban\"><a href=\"#编译azkaban\" class=\"headerlink\" title=\"编译azkaban\"></a>编译azkaban</h3><p>在azkaban目录下执行  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./gradlew build installDist</span><br></pre></td></tr></table></figure>\n<p>可能有的坑:</p>\n</li>\n<li><p>部分依赖包可能无法下载，修改build.gradle，将repositories指向国内阿里云地址，如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">buildscript &#123;</span><br><span class=\"line\">  repositories &#123;</span><br><span class=\"line\">        maven &#123;</span><br><span class=\"line\">            url &#x27;http://maven.aliyun.com/nexus/content/groups/public/&#x27;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        maven &#123;</span><br><span class=\"line\">            url &#x27;http://maven.aliyun.com/repository/google&#x27;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        maven &#123;</span><br><span class=\"line\">            url &#x27;http://maven.aliyun.com/repository/jcenter&#x27;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  dependencies &#123;</span><br><span class=\"line\">    classpath &#x27;com.cinnober.gradle:semver-git:2.2.3&#x27;</span><br><span class=\"line\">    classpath &#x27;net.ltgt.gradle:gradle-errorprone-plugin:0.0.14&#x27;</span><br><span class=\"line\">    classpath  &#x27;com.github.jengelman.gradle.plugins:shadow:4.0.0&#x27;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>如果出现编译报错的情况，可以尝试将编译期间的test过程注释掉，或者进入azkaban-executor-server和azkban-web-server目录下单独编译这两个包。  </p>\n</li>\n</ul>\n<h3 id=\"启动azkban-executor-server\"><a href=\"#启动azkban-executor-server\" class=\"headerlink\" title=\"启动azkban-executor-server\"></a>启动azkban-executor-server</h3><ul>\n<li><p>修改配置文件 </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi ../azkaban-3.81.0/azkaban-exec-server/build/install/azkaban-exec-server/conf/azkaban.properties</span><br></pre></td></tr></table></figure>\n<p>需要修改的内容如下  </p>\n<blockquote>\n<p>default.timezone.id=Asia/Shanghai # 修改为中国时区<br>azkaban.webserver.url=localhost:8199 # 指向本地的azkaban-web-server地址<br>#数据库配置，指向azkban建表的数据库，根据实际的数据库配置来<br>database.type=mysql<br>mysql.port=3306<br>mysql.host=110.110.110.110<br>mysql.database=azkaban<br>mysql.user=azkaban<br>mysql.password=azkaban  </p>\n</blockquote>\n</li>\n<li><p>启动azkaban-executor-server  </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ../azkaban-3.81.0/azkaban-exec-server/build/install/azkaban-exec-server;</span><br><span class=\"line\">bin/start-exec.sh; # 注意一定要按照这个语句执行,不要在bin目录下执行./start-exe.sh，否则某些资源文件会加载不到，导致报错</span><br></pre></td></tr></table></figure></li>\n<li><p> 激活executor</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 指向executor地址和端口</span><br><span class=\"line\">curl localhost:port/executor?action=activate</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"启动azkaban-web-server\"><a href=\"#启动azkaban-web-server\" class=\"headerlink\" title=\"启动azkaban-web-server\"></a>启动azkaban-web-server</h3><ul>\n<li><p>修改配置文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi ../azkaban-3.81.0/azkaban-web-server/build/install/azkaban-exec-server/conf/azkaban.properties</span><br></pre></td></tr></table></figure>\n<p>需要修改的内容如下  </p>\n<blockquote>\n<p>default.timezone.id=Asia/Shanghai # 修改为中国时区<br>#邮件配置<br>mail.sender=<a href=\"mailto:&#x38;&#x38;&#x38;&#x38;&#x38;&#56;&#x40;&#113;&#x71;&#46;&#99;&#111;&#109;\">&#x38;&#x38;&#x38;&#x38;&#x38;&#56;&#x40;&#113;&#x71;&#46;&#99;&#111;&#109;</a> # 发送邮件的邮箱<br>mail.host=smtp.qq.com  # 邮件服务器<br>mail.user=<a href=\"mailto:&#56;&#x38;&#x38;&#x38;&#56;&#x38;&#x40;&#113;&#x71;&#46;&#99;&#111;&#109;\">&#56;&#x38;&#x38;&#x38;&#56;&#x38;&#x40;&#113;&#x71;&#46;&#99;&#111;&#109;</a> # 邮件用户<br>mail.password=abc123456 #密码需要取qq邮箱中获取到的授权码<br>job.failure.email=<a href=\"mailto:&#56;&#x38;&#x38;&#56;&#56;&#56;&#56;&#64;&#x71;&#113;&#x2e;&#x63;&#111;&#109;\">&#56;&#x38;&#x38;&#56;&#56;&#56;&#56;&#64;&#x71;&#113;&#x2e;&#x63;&#111;&#109;</a> # 定时任务执行失败发送邮件的邮箱<br>#数据库配置，指向azkban建表的数据库，根据实际的数据库配置来<br>database.type=mysql<br>mysql.port=3306<br>mysql.host=110.110.110.110<br>mysql.database=azkaban<br>mysql.user=azkaban<br>mysql.password=azkaban</p>\n</blockquote>\n</li>\n<li><p>启动azkaban-web-server  </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ../azkaban-3.81.0/azkaban-web-server/build/install/azkaban-web-server;</span><br><span class=\"line\">bin/start-web.sh;</span><br></pre></td></tr></table></figure>\n<h3 id=\"访问azkaban\"><a href=\"#访问azkaban\" class=\"headerlink\" title=\"访问azkaban\"></a>访问azkaban</h3><p>浏览器输入 localhost:8199，出现如下界面<br><img src=\"/2020/04/29/azkaban%E7%AE%80%E5%8D%95%E6%90%AD%E5%BB%BA/2.png\"><br>用户名密码默认均为azkban，可以在 ../azkaban-3.81.0/azkaban-web-server/build/install/azkaban-web-server/conf/azkaban-users.xml 修改用户和密码  </p>\n</li>\n</ul>\n<h2 id=\"配置定时任务\"><a href=\"#配置定时任务\" class=\"headerlink\" title=\"配置定时任务\"></a>配置定时任务</h2>","site":{"data":{}},"excerpt":"<p>前言：<br>azkaban的用处和好处不再赘述，这里只讲怎么将azkaban在项目中使用起来。<br>另外非常推荐直接看<a href=\"https://azkaban.readthedocs.io/en/latest/\">官方的英文文档</a>进行学习，那将是最新最可靠的教程。</p>\n<h2 id=\"下载和安装azkaban\"><a href=\"#下载和安装azkaban\" class=\"headerlink\" title=\"下载和安装azkaban\"></a>下载和安装azkaban</h2><h3 id=\"下载azkaban\"><a href=\"#下载azkaban\" class=\"headerlink\" title=\"下载azkaban\"></a>下载azkaban</h3><p>方法1：直接到azkaban的github网页下载tar.gz包。截止2020.4.29日最新版本的包地址为(<a href=\"https://github.com/azkaban/azkaban/archive/3.84.10.tar.gz\">https://github.com/azkaban/azkaban/archive/3.84.10.tar.gz</a>)<br>方法2：在linux执行   </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://github.com/azkaban/azkaban/archive/3.84.10.tar.gz</span><br></pre></td></tr></table></figure>\n<h3 id=\"安装azkaban\"><a href=\"#安装azkaban\" class=\"headerlink\" title=\"安装azkaban\"></a>安装azkaban</h3><p>将包进行解压，执行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -zxvf azkaban-3.81.10.tar.gz</span><br></pre></td></tr></table></figure>\n<p>解压完成后目录结构如下图  </p>","more":"<p><img src=\"/2020/04/29/azkaban%E7%AE%80%E5%8D%95%E6%90%AD%E5%BB%BA/1.png\"><br>如果使用solo-server方式的话，不需要建表，下面的步骤也都可以不用看，直接跳转看<a href=\"https://azkaban.readthedocs.io/en/latest/getStarted.html#getting-started-with-the-solo-server\">solo-server</a><br>但是个人理解solo-server只适用于小型简单的项目，如果考虑项目以后的扩充和发展的话，建议一开始就使用multi-executor-server方式，该方式需要建表。<br>步骤如下：</p>\n<h3 id=\"新增azkaban相关表\"><a href=\"#新增azkaban相关表\" class=\"headerlink\" title=\"新增azkaban相关表\"></a>新增azkaban相关表</h3><p>复制如下文件内的sql语句，在事先建好的数据库内执行  </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi azkaban-3.81.10/azkaban-db/build/sql/create-all-sql-0.1.0-SNAPSHOT.sql</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>可能有的坑：<br>早期版本的mysql可能不支持长度过长的字段设为索引和主键，遇到这种报错时，需要将对应的字段改短再执行。过长的字段比如 execution_logs.name，sql给设置的长度是varchar(640)，在我的mysql数据库中执行会报错，我改成了varchar(200)，这个字段的含义是任务名，一般来说你正常命名的话完全用不到640个字段的长度，所以可以放心修改。  </p>\n<h3 id=\"编译azkaban\"><a href=\"#编译azkaban\" class=\"headerlink\" title=\"编译azkaban\"></a>编译azkaban</h3><p>在azkaban目录下执行  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./gradlew build installDist</span><br></pre></td></tr></table></figure>\n<p>可能有的坑:</p>\n</li>\n<li><p>部分依赖包可能无法下载，修改build.gradle，将repositories指向国内阿里云地址，如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">buildscript &#123;</span><br><span class=\"line\">  repositories &#123;</span><br><span class=\"line\">        maven &#123;</span><br><span class=\"line\">            url &#x27;http://maven.aliyun.com/nexus/content/groups/public/&#x27;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        maven &#123;</span><br><span class=\"line\">            url &#x27;http://maven.aliyun.com/repository/google&#x27;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        maven &#123;</span><br><span class=\"line\">            url &#x27;http://maven.aliyun.com/repository/jcenter&#x27;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  dependencies &#123;</span><br><span class=\"line\">    classpath &#x27;com.cinnober.gradle:semver-git:2.2.3&#x27;</span><br><span class=\"line\">    classpath &#x27;net.ltgt.gradle:gradle-errorprone-plugin:0.0.14&#x27;</span><br><span class=\"line\">    classpath  &#x27;com.github.jengelman.gradle.plugins:shadow:4.0.0&#x27;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>如果出现编译报错的情况，可以尝试将编译期间的test过程注释掉，或者进入azkaban-executor-server和azkban-web-server目录下单独编译这两个包。  </p>\n</li>\n</ul>\n<h3 id=\"启动azkban-executor-server\"><a href=\"#启动azkban-executor-server\" class=\"headerlink\" title=\"启动azkban-executor-server\"></a>启动azkban-executor-server</h3><ul>\n<li><p>修改配置文件 </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi ../azkaban-3.81.0/azkaban-exec-server/build/install/azkaban-exec-server/conf/azkaban.properties</span><br></pre></td></tr></table></figure>\n<p>需要修改的内容如下  </p>\n<blockquote>\n<p>default.timezone.id=Asia/Shanghai # 修改为中国时区<br>azkaban.webserver.url=localhost:8199 # 指向本地的azkaban-web-server地址<br>#数据库配置，指向azkban建表的数据库，根据实际的数据库配置来<br>database.type=mysql<br>mysql.port=3306<br>mysql.host=110.110.110.110<br>mysql.database=azkaban<br>mysql.user=azkaban<br>mysql.password=azkaban  </p>\n</blockquote>\n</li>\n<li><p>启动azkaban-executor-server  </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ../azkaban-3.81.0/azkaban-exec-server/build/install/azkaban-exec-server;</span><br><span class=\"line\">bin/start-exec.sh; # 注意一定要按照这个语句执行,不要在bin目录下执行./start-exe.sh，否则某些资源文件会加载不到，导致报错</span><br></pre></td></tr></table></figure></li>\n<li><p> 激活executor</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 指向executor地址和端口</span><br><span class=\"line\">curl localhost:port/executor?action=activate</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"启动azkaban-web-server\"><a href=\"#启动azkaban-web-server\" class=\"headerlink\" title=\"启动azkaban-web-server\"></a>启动azkaban-web-server</h3><ul>\n<li><p>修改配置文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi ../azkaban-3.81.0/azkaban-web-server/build/install/azkaban-exec-server/conf/azkaban.properties</span><br></pre></td></tr></table></figure>\n<p>需要修改的内容如下  </p>\n<blockquote>\n<p>default.timezone.id=Asia/Shanghai # 修改为中国时区<br>#邮件配置<br>mail.sender=<a href=\"mailto:&#x38;&#x38;&#x38;&#x38;&#x38;&#56;&#x40;&#113;&#x71;&#46;&#99;&#111;&#109;\">&#x38;&#x38;&#x38;&#x38;&#x38;&#56;&#x40;&#113;&#x71;&#46;&#99;&#111;&#109;</a> # 发送邮件的邮箱<br>mail.host=smtp.qq.com  # 邮件服务器<br>mail.user=<a href=\"mailto:&#56;&#x38;&#x38;&#x38;&#56;&#x38;&#x40;&#113;&#x71;&#46;&#99;&#111;&#109;\">&#56;&#x38;&#x38;&#x38;&#56;&#x38;&#x40;&#113;&#x71;&#46;&#99;&#111;&#109;</a> # 邮件用户<br>mail.password=abc123456 #密码需要取qq邮箱中获取到的授权码<br>job.failure.email=<a href=\"mailto:&#56;&#x38;&#x38;&#56;&#56;&#56;&#56;&#64;&#x71;&#113;&#x2e;&#x63;&#111;&#109;\">&#56;&#x38;&#x38;&#56;&#56;&#56;&#56;&#64;&#x71;&#113;&#x2e;&#x63;&#111;&#109;</a> # 定时任务执行失败发送邮件的邮箱<br>#数据库配置，指向azkban建表的数据库，根据实际的数据库配置来<br>database.type=mysql<br>mysql.port=3306<br>mysql.host=110.110.110.110<br>mysql.database=azkaban<br>mysql.user=azkaban<br>mysql.password=azkaban</p>\n</blockquote>\n</li>\n<li><p>启动azkaban-web-server  </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ../azkaban-3.81.0/azkaban-web-server/build/install/azkaban-web-server;</span><br><span class=\"line\">bin/start-web.sh;</span><br></pre></td></tr></table></figure>\n<h3 id=\"访问azkaban\"><a href=\"#访问azkaban\" class=\"headerlink\" title=\"访问azkaban\"></a>访问azkaban</h3><p>浏览器输入 localhost:8199，出现如下界面<br><img src=\"/2020/04/29/azkaban%E7%AE%80%E5%8D%95%E6%90%AD%E5%BB%BA/2.png\"><br>用户名密码默认均为azkban，可以在 ../azkaban-3.81.0/azkaban-web-server/build/install/azkaban-web-server/conf/azkaban-users.xml 修改用户和密码  </p>\n</li>\n</ul>\n<h2 id=\"配置定时任务\"><a href=\"#配置定时任务\" class=\"headerlink\" title=\"配置定时任务\"></a>配置定时任务</h2>"},{"title":"hexo使用技巧","date":"2019-10-08T08:07:43.000Z","comments":1,"_content":"## 更换主题  \n1.进入https://hexo.io/themes/ 可以选择多种主题  \n![](1.png) \n点击图片进去可以看到这种主题的预览效果  \n点击文字进去将进入这个主题的github站点, 里面会详细说明该主题的安装和配置方式  \n\n2.目前最流行的hexo主题应该是NexT, 我这次选的是3-hexo作为例子来讲解一下, 这个也是一个优秀的国产hexo主题  \n其最终效果如图  \n![](2.png)   \n\n3.关于3-hexo的安装和设置方法, 都可以直接参照[该主题的github主页](https://github.com/yelog/hexo-theme-3-hexo)  \n简单介绍一下:  \n  - 获取3-hexo: git clone https://github.com/yelog/hexo-theme-3-hexo.git themes/3-hexo  \n  - 将3-hexo的主题文件夹复制到hexo的themes目录下  \n  - 修改3-hexo目录下的_config.yml文件, 修改方式在_config.yml中已经有详细的注释, 按照注释修改即可  \n  - hexo主目录下打开git窗口, 依次输入如下命令  \n    hexo clean (清除静态页面缓存文件, 防止出现缓存影响页面样式的情况)  \n    hexo g (生成静态页面)  \n    hexo s (启动本地hexo服务器, 可以打开localhost:4000查看页面效果)  \n    hexo d (发布到github)  \n<!-- more -->\n\n## 设置分类和标签  \n1.每一个由hexo生成的md文件, 其内容开头都是由两个\"---\"组成的, hexo把这部分称为[Front-Matter](https://hexo.io/zh-cn/docs/front-matter), 如图:  \n![](3.png)  \n \n2.在Front-Matter的区域内可以设置关于文章的诸多信息, 包括标题, 创建时间, 标签, 目录, 是否开启评论等  \n\n3.标签的参数名称为tags, 目录的参数名称为categories, 设置单个标签和目录的格式如下:  \n```\ntags: hexo\ncategories: hexo\n```\n设置多个标签和多级目录的格式如下:  \n```\ntags: \n- hexo\n- blog\ncategories: \n- 学习\n- 搭建相关\n```\n**注意:目录的先后顺序决定了其父子级关系, 如上面的例子中, \"学习\"目录是\"搭建相关\"目录的父目录. 在3-hexo主题中的效果如下:**  \n![](4.png)\n\n### 以下是我的hexo更新之后需要额外操作的步骤\n4.使用命令创建tags和categories目录\n ```\n hexo new page tags\n hexo new page categories\n ```\n这样会在source目录下生成tags和categories目录，并在该目录下生成index.md文件\n5.在tags目录下index.md文件内增加一行 **type: tags**，如下\n```\ntitle: tags\ndate: 2021-11-23 08:46:12\ntype: tags\n```\n在categories.md文件内增加一行 **type: categories**，如下\n```\ntitle: categories\ndate: 2021-11-23 08:46:12\ntype: categories\n```\n6.重新执行hexo g即生成目录和标签\n\n## MarkDown开发工具  \n我本人不太喜欢为markdown开发再安装一个软件, 所以以下都是针对程序员电脑上通常已有的软件上安装插件, 当然如果没有这些软件, 那推荐直接安装[typora](https://typora.io/)  \n\n1.Notepad++插件MarkdownViewer++  \n如果已经安装了Notepad++, 可以直接下载[MarkdownViewer++](https://github.com/nea/MarkdownViewerPlusPlus/releases)插件  \n下载完成后, 直接将dll文件放入Notepad++主目录下的plugin文件夹下, 然后重新启动Notepad++即可, 在Notepad++的工具栏会出现一个\"m\"图标:  \n![](5.png)  \n点击即可实时查看页面效果  \n优点: 插件轻量级, 1MB不到, 占用系统的内存消耗极小  \n缺点: 功能非常有限, 只能实时查看效果, 不能对markdown语法高亮  \n\n2.Idea插件MarkDown Navigator\n其实Idea自带了一个MarkDown的插件, 但是这个插件不太好用, 所以这里不再介绍了  \n打开Idea, 打开File-Settings-Plugins-Browse Repositories, 查找MarkDown Navigator, 点击Install, 重新启动Idea即可  \n效果如图:  \n![](6.png)  \n优点: 支持MarkDown语法高亮, 支持语法快捷键, 且在Idea内开发, 对于程序员来说比较习惯  \n缺点: 毕竟需要Idea来开发, 对于仅仅只要写博客的人来说, 显得有点笨重  \n\n3.MarkDown在线编辑器  \n在线编辑的好处不言自明, 不用安装任何软件和插件, 只要有浏览器就行\n推荐https://www.mdeditor.com/ \n\n## 为博客设置密码  \n1.安装插件: 在hexo主目录下执行npm install --save hexo-blog-encrypt  \n2.在需要设置密码的博客的Front-Matter里面加一个参数  \npassword:*****  \n\n## 如何上传图片  \n1.在github存储图片并在博客内关联图片链接  \n这种方式比较推荐, 因为别的博客网站通常都会有防止外部访问的措施在, 存储\n在github上的图片不会有外部无法访问的情况. 对于各个版本的hexo都能适用.\n  - 打开hexo主目录下的_config.yml文件, 修改参数post_asset_folder为true\n  - 使用hexo n \"博客标题\" 新建博客时将会同时新建一个同名的资源文件夹, 如图  \n  ![](7.png)  \n  - 将博客内用到的图片放置到资源文件夹内, 可以按顺序号命名, 如图  \n  ![](8.png)\n  - 在博客内链接该图片, 格式为 \n  ```hexo\n  ![](https://raw.githubusercontent.com/#username/#username.github.io/master/#YYYY/#MM/#DD/#title/#photoname)  \n  #username : github用户名\n  #YYYY/#MM/#DD : 如果没有修改_config.yml里的默认文件夹创建方式的话, 就是填入年月日即可, 如2019/10/14  \n  #title : 文章标题  \n  #photoname : 图片名称  \n  ```\n  比如我这篇博客的图片链接地址如下图  \n  ![](9.png)  \n  - 链接完图片后目前在博客的预览界面还无法看到图片, 需要先执行  \n  hexo clean (非必要步骤, 如果博客页面格式显示不正确, 需要执行)  \n  hexo g (创建博客静态网页文件)  \n  hexo d (这一步用于发布博客, 也同时发布图片)  \n  hexo d的命令将会把图片发布到github服务器上, 也就可以在上述格式的图片地址里看到该图片  \n  \n2.直接链接本地地址, 这种方式也很方便, 网上也有挺多人使用这种方式, 主要优点\n是不用多操作一步链接网络地址, 我贴一下该方式:\n  1. 打开hexo主目录下的_config.yml文件, 修改参数post_asset_folder为true\n  2. 安装图片插件 npm install hexo-asset-image --save \n     或者安装  npm install hexo-renderer-marked -s\n  3. 在博客内直接引用本地地址即可, 如  \n  ``` hexo\n  ![](/1.png)\n  ```\n## 设置首页文章摘要\n有三种方法，推荐使用第一种，更加灵活的根据文章进行不同长度的摘要截断，而且对于不同的插件也有最好的适应性\n1.在文章中使用 <!-- more --> 手动进行截断，Hexo 提供的方式\n2.在文章的 front-matter 中添加 description，并提供文章摘录 \n3.自动形成摘要，在 主题配置文件 中添加\n```properties\nauto_excerpt:\n  enable: true\n  length: 150\n```\n默认截取的长度为 150 字符，可以根据需要自行设定","source":"_posts/hexo使用技巧.md","raw":"---\ntitle: hexo使用技巧\ndate: 2019-10-08 16:07:43\ntags: \n- hexo\ncomments: true\ncategories: \n- 学习\n- 搭建相关\n---\n## 更换主题  \n1.进入https://hexo.io/themes/ 可以选择多种主题  \n![](1.png) \n点击图片进去可以看到这种主题的预览效果  \n点击文字进去将进入这个主题的github站点, 里面会详细说明该主题的安装和配置方式  \n\n2.目前最流行的hexo主题应该是NexT, 我这次选的是3-hexo作为例子来讲解一下, 这个也是一个优秀的国产hexo主题  \n其最终效果如图  \n![](2.png)   \n\n3.关于3-hexo的安装和设置方法, 都可以直接参照[该主题的github主页](https://github.com/yelog/hexo-theme-3-hexo)  \n简单介绍一下:  \n  - 获取3-hexo: git clone https://github.com/yelog/hexo-theme-3-hexo.git themes/3-hexo  \n  - 将3-hexo的主题文件夹复制到hexo的themes目录下  \n  - 修改3-hexo目录下的_config.yml文件, 修改方式在_config.yml中已经有详细的注释, 按照注释修改即可  \n  - hexo主目录下打开git窗口, 依次输入如下命令  \n    hexo clean (清除静态页面缓存文件, 防止出现缓存影响页面样式的情况)  \n    hexo g (生成静态页面)  \n    hexo s (启动本地hexo服务器, 可以打开localhost:4000查看页面效果)  \n    hexo d (发布到github)  \n<!-- more -->\n\n## 设置分类和标签  \n1.每一个由hexo生成的md文件, 其内容开头都是由两个\"---\"组成的, hexo把这部分称为[Front-Matter](https://hexo.io/zh-cn/docs/front-matter), 如图:  \n![](3.png)  \n \n2.在Front-Matter的区域内可以设置关于文章的诸多信息, 包括标题, 创建时间, 标签, 目录, 是否开启评论等  \n\n3.标签的参数名称为tags, 目录的参数名称为categories, 设置单个标签和目录的格式如下:  \n```\ntags: hexo\ncategories: hexo\n```\n设置多个标签和多级目录的格式如下:  \n```\ntags: \n- hexo\n- blog\ncategories: \n- 学习\n- 搭建相关\n```\n**注意:目录的先后顺序决定了其父子级关系, 如上面的例子中, \"学习\"目录是\"搭建相关\"目录的父目录. 在3-hexo主题中的效果如下:**  \n![](4.png)\n\n### 以下是我的hexo更新之后需要额外操作的步骤\n4.使用命令创建tags和categories目录\n ```\n hexo new page tags\n hexo new page categories\n ```\n这样会在source目录下生成tags和categories目录，并在该目录下生成index.md文件\n5.在tags目录下index.md文件内增加一行 **type: tags**，如下\n```\ntitle: tags\ndate: 2021-11-23 08:46:12\ntype: tags\n```\n在categories.md文件内增加一行 **type: categories**，如下\n```\ntitle: categories\ndate: 2021-11-23 08:46:12\ntype: categories\n```\n6.重新执行hexo g即生成目录和标签\n\n## MarkDown开发工具  \n我本人不太喜欢为markdown开发再安装一个软件, 所以以下都是针对程序员电脑上通常已有的软件上安装插件, 当然如果没有这些软件, 那推荐直接安装[typora](https://typora.io/)  \n\n1.Notepad++插件MarkdownViewer++  \n如果已经安装了Notepad++, 可以直接下载[MarkdownViewer++](https://github.com/nea/MarkdownViewerPlusPlus/releases)插件  \n下载完成后, 直接将dll文件放入Notepad++主目录下的plugin文件夹下, 然后重新启动Notepad++即可, 在Notepad++的工具栏会出现一个\"m\"图标:  \n![](5.png)  \n点击即可实时查看页面效果  \n优点: 插件轻量级, 1MB不到, 占用系统的内存消耗极小  \n缺点: 功能非常有限, 只能实时查看效果, 不能对markdown语法高亮  \n\n2.Idea插件MarkDown Navigator\n其实Idea自带了一个MarkDown的插件, 但是这个插件不太好用, 所以这里不再介绍了  \n打开Idea, 打开File-Settings-Plugins-Browse Repositories, 查找MarkDown Navigator, 点击Install, 重新启动Idea即可  \n效果如图:  \n![](6.png)  \n优点: 支持MarkDown语法高亮, 支持语法快捷键, 且在Idea内开发, 对于程序员来说比较习惯  \n缺点: 毕竟需要Idea来开发, 对于仅仅只要写博客的人来说, 显得有点笨重  \n\n3.MarkDown在线编辑器  \n在线编辑的好处不言自明, 不用安装任何软件和插件, 只要有浏览器就行\n推荐https://www.mdeditor.com/ \n\n## 为博客设置密码  \n1.安装插件: 在hexo主目录下执行npm install --save hexo-blog-encrypt  \n2.在需要设置密码的博客的Front-Matter里面加一个参数  \npassword:*****  \n\n## 如何上传图片  \n1.在github存储图片并在博客内关联图片链接  \n这种方式比较推荐, 因为别的博客网站通常都会有防止外部访问的措施在, 存储\n在github上的图片不会有外部无法访问的情况. 对于各个版本的hexo都能适用.\n  - 打开hexo主目录下的_config.yml文件, 修改参数post_asset_folder为true\n  - 使用hexo n \"博客标题\" 新建博客时将会同时新建一个同名的资源文件夹, 如图  \n  ![](7.png)  \n  - 将博客内用到的图片放置到资源文件夹内, 可以按顺序号命名, 如图  \n  ![](8.png)\n  - 在博客内链接该图片, 格式为 \n  ```hexo\n  ![](https://raw.githubusercontent.com/#username/#username.github.io/master/#YYYY/#MM/#DD/#title/#photoname)  \n  #username : github用户名\n  #YYYY/#MM/#DD : 如果没有修改_config.yml里的默认文件夹创建方式的话, 就是填入年月日即可, 如2019/10/14  \n  #title : 文章标题  \n  #photoname : 图片名称  \n  ```\n  比如我这篇博客的图片链接地址如下图  \n  ![](9.png)  \n  - 链接完图片后目前在博客的预览界面还无法看到图片, 需要先执行  \n  hexo clean (非必要步骤, 如果博客页面格式显示不正确, 需要执行)  \n  hexo g (创建博客静态网页文件)  \n  hexo d (这一步用于发布博客, 也同时发布图片)  \n  hexo d的命令将会把图片发布到github服务器上, 也就可以在上述格式的图片地址里看到该图片  \n  \n2.直接链接本地地址, 这种方式也很方便, 网上也有挺多人使用这种方式, 主要优点\n是不用多操作一步链接网络地址, 我贴一下该方式:\n  1. 打开hexo主目录下的_config.yml文件, 修改参数post_asset_folder为true\n  2. 安装图片插件 npm install hexo-asset-image --save \n     或者安装  npm install hexo-renderer-marked -s\n  3. 在博客内直接引用本地地址即可, 如  \n  ``` hexo\n  ![](/1.png)\n  ```\n## 设置首页文章摘要\n有三种方法，推荐使用第一种，更加灵活的根据文章进行不同长度的摘要截断，而且对于不同的插件也有最好的适应性\n1.在文章中使用 <!-- more --> 手动进行截断，Hexo 提供的方式\n2.在文章的 front-matter 中添加 description，并提供文章摘录 \n3.自动形成摘要，在 主题配置文件 中添加\n```properties\nauto_excerpt:\n  enable: true\n  length: 150\n```\n默认截取的长度为 150 字符，可以根据需要自行设定","slug":"hexo使用技巧","published":1,"updated":"2021-11-23T01:56:04.000Z","_id":"ckwadg4n4000a73cf2fbt9o4z","layout":"post","photos":[],"link":"","content":"<h2 id=\"更换主题\"><a href=\"#更换主题\" class=\"headerlink\" title=\"更换主题\"></a>更换主题</h2><p>1.进入<a href=\"https://hexo.io/themes/\">https://hexo.io/themes/</a> 可以选择多种主题<br><img src=\"/2019/10/08/hexo%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/1.png\"><br>点击图片进去可以看到这种主题的预览效果<br>点击文字进去将进入这个主题的github站点, 里面会详细说明该主题的安装和配置方式  </p>\n<p>2.目前最流行的hexo主题应该是NexT, 我这次选的是3-hexo作为例子来讲解一下, 这个也是一个优秀的国产hexo主题<br>其最终效果如图<br><img src=\"/2019/10/08/hexo%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/2.png\">   </p>\n<p>3.关于3-hexo的安装和设置方法, 都可以直接参照<a href=\"https://github.com/yelog/hexo-theme-3-hexo\">该主题的github主页</a><br>简单介绍一下:  </p>\n<ul>\n<li>获取3-hexo: git clone <a href=\"https://github.com/yelog/hexo-theme-3-hexo.git\">https://github.com/yelog/hexo-theme-3-hexo.git</a> themes/3-hexo  </li>\n<li>将3-hexo的主题文件夹复制到hexo的themes目录下  </li>\n<li>修改3-hexo目录下的_config.yml文件, 修改方式在_config.yml中已经有详细的注释, 按照注释修改即可  </li>\n<li>hexo主目录下打开git窗口, 依次输入如下命令<br>hexo clean (清除静态页面缓存文件, 防止出现缓存影响页面样式的情况)<br>hexo g (生成静态页面)<br>hexo s (启动本地hexo服务器, 可以打开localhost:4000查看页面效果)<br>hexo d (发布到github)  <span id=\"more\"></span></li>\n</ul>\n<h2 id=\"设置分类和标签\"><a href=\"#设置分类和标签\" class=\"headerlink\" title=\"设置分类和标签\"></a>设置分类和标签</h2><p>1.每一个由hexo生成的md文件, 其内容开头都是由两个”—“组成的, hexo把这部分称为<a href=\"https://hexo.io/zh-cn/docs/front-matter\">Front-Matter</a>, 如图:<br><img src=\"/2019/10/08/hexo%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/3.png\">  </p>\n<p>2.在Front-Matter的区域内可以设置关于文章的诸多信息, 包括标题, 创建时间, 标签, 目录, 是否开启评论等  </p>\n<p>3.标签的参数名称为tags, 目录的参数名称为categories, 设置单个标签和目录的格式如下:  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tags: hexo</span><br><span class=\"line\">categories: hexo</span><br></pre></td></tr></table></figure>\n<p>设置多个标签和多级目录的格式如下:  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tags: </span><br><span class=\"line\">- hexo</span><br><span class=\"line\">- blog</span><br><span class=\"line\">categories: </span><br><span class=\"line\">- 学习</span><br><span class=\"line\">- 搭建相关</span><br></pre></td></tr></table></figure>\n<p><strong>注意:目录的先后顺序决定了其父子级关系, 如上面的例子中, “学习”目录是”搭建相关”目录的父目录. 在3-hexo主题中的效果如下:</strong><br><img src=\"/2019/10/08/hexo%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/4.png\"></p>\n<h3 id=\"以下是我的hexo更新之后需要额外操作的步骤\"><a href=\"#以下是我的hexo更新之后需要额外操作的步骤\" class=\"headerlink\" title=\"以下是我的hexo更新之后需要额外操作的步骤\"></a>以下是我的hexo更新之后需要额外操作的步骤</h3><p>4.使用命令创建tags和categories目录<br> <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page tags</span><br><span class=\"line\">hexo new page categories</span><br></pre></td></tr></table></figure><br>这样会在source目录下生成tags和categories目录，并在该目录下生成index.md文件<br>5.在tags目录下index.md文件内增加一行 <strong>type: tags</strong>，如下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: tags</span><br><span class=\"line\">date: 2021-11-23 08:46:12</span><br><span class=\"line\">type: tags</span><br></pre></td></tr></table></figure>\n<p>在categories.md文件内增加一行 <strong>type: categories</strong>，如下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: categories</span><br><span class=\"line\">date: 2021-11-23 08:46:12</span><br><span class=\"line\">type: categories</span><br></pre></td></tr></table></figure>\n<p>6.重新执行hexo g即生成目录和标签</p>\n<h2 id=\"MarkDown开发工具\"><a href=\"#MarkDown开发工具\" class=\"headerlink\" title=\"MarkDown开发工具\"></a>MarkDown开发工具</h2><p>我本人不太喜欢为markdown开发再安装一个软件, 所以以下都是针对程序员电脑上通常已有的软件上安装插件, 当然如果没有这些软件, 那推荐直接安装<a href=\"https://typora.io/\">typora</a>  </p>\n<p>1.Notepad++插件MarkdownViewer++<br>如果已经安装了Notepad++, 可以直接下载<a href=\"https://github.com/nea/MarkdownViewerPlusPlus/releases\">MarkdownViewer++</a>插件<br>下载完成后, 直接将dll文件放入Notepad++主目录下的plugin文件夹下, 然后重新启动Notepad++即可, 在Notepad++的工具栏会出现一个”m”图标:<br><img src=\"/2019/10/08/hexo%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/5.png\"><br>点击即可实时查看页面效果<br>优点: 插件轻量级, 1MB不到, 占用系统的内存消耗极小<br>缺点: 功能非常有限, 只能实时查看效果, 不能对markdown语法高亮  </p>\n<p>2.Idea插件MarkDown Navigator<br>其实Idea自带了一个MarkDown的插件, 但是这个插件不太好用, 所以这里不再介绍了<br>打开Idea, 打开File-Settings-Plugins-Browse Repositories, 查找MarkDown Navigator, 点击Install, 重新启动Idea即可<br>效果如图:<br><img src=\"/2019/10/08/hexo%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/6.png\"><br>优点: 支持MarkDown语法高亮, 支持语法快捷键, 且在Idea内开发, 对于程序员来说比较习惯<br>缺点: 毕竟需要Idea来开发, 对于仅仅只要写博客的人来说, 显得有点笨重  </p>\n<p>3.MarkDown在线编辑器<br>在线编辑的好处不言自明, 不用安装任何软件和插件, 只要有浏览器就行<br>推荐<a href=\"https://www.mdeditor.com/\">https://www.mdeditor.com/</a> </p>\n<h2 id=\"为博客设置密码\"><a href=\"#为博客设置密码\" class=\"headerlink\" title=\"为博客设置密码\"></a>为博客设置密码</h2><p>1.安装插件: 在hexo主目录下执行npm install –save hexo-blog-encrypt<br>2.在需要设置密码的博客的Front-Matter里面加一个参数<br>password:*****  </p>\n<h2 id=\"如何上传图片\"><a href=\"#如何上传图片\" class=\"headerlink\" title=\"如何上传图片\"></a>如何上传图片</h2><p>1.在github存储图片并在博客内关联图片链接<br>这种方式比较推荐, 因为别的博客网站通常都会有防止外部访问的措施在, 存储<br>在github上的图片不会有外部无法访问的情况. 对于各个版本的hexo都能适用.</p>\n<ul>\n<li>打开hexo主目录下的_config.yml文件, 修改参数post_asset_folder为true</li>\n<li>使用hexo n “博客标题” 新建博客时将会同时新建一个同名的资源文件夹, 如图<br><img src=\"/2019/10/08/hexo%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/7.png\">  </li>\n<li>将博客内用到的图片放置到资源文件夹内, 可以按顺序号命名, 如图<br><img src=\"/2019/10/08/hexo%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/8.png\"></li>\n<li>在博客内链接该图片, 格式为 <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![](https://raw.githubusercontent.com/#username/#username.github.io/master/#YYYY/#MM/#DD/#title/#photoname)  </span><br><span class=\"line\">#username : github用户名</span><br><span class=\"line\">#YYYY/#MM/#DD : 如果没有修改_config.yml里的默认文件夹创建方式的话, 就是填入年月日即可, 如2019/10/14  </span><br><span class=\"line\">#title : 文章标题  </span><br><span class=\"line\">#photoname : 图片名称  </span><br></pre></td></tr></table></figure>\n比如我这篇博客的图片链接地址如下图<br><img src=\"/2019/10/08/hexo%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/9.png\">  </li>\n<li>链接完图片后目前在博客的预览界面还无法看到图片, 需要先执行<br>hexo clean (非必要步骤, 如果博客页面格式显示不正确, 需要执行)<br>hexo g (创建博客静态网页文件)<br>hexo d (这一步用于发布博客, 也同时发布图片)<br>hexo d的命令将会把图片发布到github服务器上, 也就可以在上述格式的图片地址里看到该图片  </li>\n</ul>\n<p>2.直接链接本地地址, 这种方式也很方便, 网上也有挺多人使用这种方式, 主要优点<br>是不用多操作一步链接网络地址, 我贴一下该方式:</p>\n<ol>\n<li>打开hexo主目录下的_config.yml文件, 修改参数post_asset_folder为true</li>\n<li>安装图片插件 npm install hexo-asset-image –save<br>或者安装  npm install hexo-renderer-marked -s</li>\n<li>在博客内直接引用本地地址即可, 如  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![](/1.png)</span><br></pre></td></tr></table></figure>\n<h2 id=\"设置首页文章摘要\"><a href=\"#设置首页文章摘要\" class=\"headerlink\" title=\"设置首页文章摘要\"></a>设置首页文章摘要</h2>有三种方法，推荐使用第一种，更加灵活的根据文章进行不同长度的摘要截断，而且对于不同的插件也有最好的适应性</li>\n<li>在文章中使用 <!-- more --> 手动进行截断，Hexo 提供的方式</li>\n<li>在文章的 front-matter 中添加 description，并提供文章摘录 </li>\n<li>自动形成摘要，在 主题配置文件 中添加<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">auto_excerpt</span>:<span class=\"string\"></span></span><br><span class=\"line\">  <span class=\"attr\">enable</span>: <span class=\"string\">true</span></span><br><span class=\"line\">  <span class=\"attr\">length</span>: <span class=\"string\">150</span></span><br></pre></td></tr></table></figure>\n默认截取的长度为 150 字符，可以根据需要自行设定</li>\n</ol>\n","site":{"data":{}},"excerpt":"<h2 id=\"更换主题\"><a href=\"#更换主题\" class=\"headerlink\" title=\"更换主题\"></a>更换主题</h2><p>1.进入<a href=\"https://hexo.io/themes/\">https://hexo.io/themes/</a> 可以选择多种主题<br><img src=\"/2019/10/08/hexo%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/1.png\"><br>点击图片进去可以看到这种主题的预览效果<br>点击文字进去将进入这个主题的github站点, 里面会详细说明该主题的安装和配置方式  </p>\n<p>2.目前最流行的hexo主题应该是NexT, 我这次选的是3-hexo作为例子来讲解一下, 这个也是一个优秀的国产hexo主题<br>其最终效果如图<br><img src=\"/2019/10/08/hexo%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/2.png\">   </p>\n<p>3.关于3-hexo的安装和设置方法, 都可以直接参照<a href=\"https://github.com/yelog/hexo-theme-3-hexo\">该主题的github主页</a><br>简单介绍一下:  </p>\n<ul>\n<li>获取3-hexo: git clone <a href=\"https://github.com/yelog/hexo-theme-3-hexo.git\">https://github.com/yelog/hexo-theme-3-hexo.git</a> themes/3-hexo  </li>\n<li>将3-hexo的主题文件夹复制到hexo的themes目录下  </li>\n<li>修改3-hexo目录下的_config.yml文件, 修改方式在_config.yml中已经有详细的注释, 按照注释修改即可  </li>\n<li>hexo主目录下打开git窗口, 依次输入如下命令<br>hexo clean (清除静态页面缓存文件, 防止出现缓存影响页面样式的情况)<br>hexo g (生成静态页面)<br>hexo s (启动本地hexo服务器, 可以打开localhost:4000查看页面效果)<br>hexo d (发布到github)","more":"</li>\n</ul>\n<h2 id=\"设置分类和标签\"><a href=\"#设置分类和标签\" class=\"headerlink\" title=\"设置分类和标签\"></a>设置分类和标签</h2><p>1.每一个由hexo生成的md文件, 其内容开头都是由两个”—“组成的, hexo把这部分称为<a href=\"https://hexo.io/zh-cn/docs/front-matter\">Front-Matter</a>, 如图:<br><img src=\"/2019/10/08/hexo%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/3.png\">  </p>\n<p>2.在Front-Matter的区域内可以设置关于文章的诸多信息, 包括标题, 创建时间, 标签, 目录, 是否开启评论等  </p>\n<p>3.标签的参数名称为tags, 目录的参数名称为categories, 设置单个标签和目录的格式如下:  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tags: hexo</span><br><span class=\"line\">categories: hexo</span><br></pre></td></tr></table></figure>\n<p>设置多个标签和多级目录的格式如下:  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tags: </span><br><span class=\"line\">- hexo</span><br><span class=\"line\">- blog</span><br><span class=\"line\">categories: </span><br><span class=\"line\">- 学习</span><br><span class=\"line\">- 搭建相关</span><br></pre></td></tr></table></figure>\n<p><strong>注意:目录的先后顺序决定了其父子级关系, 如上面的例子中, “学习”目录是”搭建相关”目录的父目录. 在3-hexo主题中的效果如下:</strong><br><img src=\"/2019/10/08/hexo%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/4.png\"></p>\n<h3 id=\"以下是我的hexo更新之后需要额外操作的步骤\"><a href=\"#以下是我的hexo更新之后需要额外操作的步骤\" class=\"headerlink\" title=\"以下是我的hexo更新之后需要额外操作的步骤\"></a>以下是我的hexo更新之后需要额外操作的步骤</h3><p>4.使用命令创建tags和categories目录<br> <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page tags</span><br><span class=\"line\">hexo new page categories</span><br></pre></td></tr></table></figure><br>这样会在source目录下生成tags和categories目录，并在该目录下生成index.md文件<br>5.在tags目录下index.md文件内增加一行 <strong>type: tags</strong>，如下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: tags</span><br><span class=\"line\">date: 2021-11-23 08:46:12</span><br><span class=\"line\">type: tags</span><br></pre></td></tr></table></figure>\n<p>在categories.md文件内增加一行 <strong>type: categories</strong>，如下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: categories</span><br><span class=\"line\">date: 2021-11-23 08:46:12</span><br><span class=\"line\">type: categories</span><br></pre></td></tr></table></figure>\n<p>6.重新执行hexo g即生成目录和标签</p>\n<h2 id=\"MarkDown开发工具\"><a href=\"#MarkDown开发工具\" class=\"headerlink\" title=\"MarkDown开发工具\"></a>MarkDown开发工具</h2><p>我本人不太喜欢为markdown开发再安装一个软件, 所以以下都是针对程序员电脑上通常已有的软件上安装插件, 当然如果没有这些软件, 那推荐直接安装<a href=\"https://typora.io/\">typora</a>  </p>\n<p>1.Notepad++插件MarkdownViewer++<br>如果已经安装了Notepad++, 可以直接下载<a href=\"https://github.com/nea/MarkdownViewerPlusPlus/releases\">MarkdownViewer++</a>插件<br>下载完成后, 直接将dll文件放入Notepad++主目录下的plugin文件夹下, 然后重新启动Notepad++即可, 在Notepad++的工具栏会出现一个”m”图标:<br><img src=\"/2019/10/08/hexo%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/5.png\"><br>点击即可实时查看页面效果<br>优点: 插件轻量级, 1MB不到, 占用系统的内存消耗极小<br>缺点: 功能非常有限, 只能实时查看效果, 不能对markdown语法高亮  </p>\n<p>2.Idea插件MarkDown Navigator<br>其实Idea自带了一个MarkDown的插件, 但是这个插件不太好用, 所以这里不再介绍了<br>打开Idea, 打开File-Settings-Plugins-Browse Repositories, 查找MarkDown Navigator, 点击Install, 重新启动Idea即可<br>效果如图:<br><img src=\"/2019/10/08/hexo%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/6.png\"><br>优点: 支持MarkDown语法高亮, 支持语法快捷键, 且在Idea内开发, 对于程序员来说比较习惯<br>缺点: 毕竟需要Idea来开发, 对于仅仅只要写博客的人来说, 显得有点笨重  </p>\n<p>3.MarkDown在线编辑器<br>在线编辑的好处不言自明, 不用安装任何软件和插件, 只要有浏览器就行<br>推荐<a href=\"https://www.mdeditor.com/\">https://www.mdeditor.com/</a> </p>\n<h2 id=\"为博客设置密码\"><a href=\"#为博客设置密码\" class=\"headerlink\" title=\"为博客设置密码\"></a>为博客设置密码</h2><p>1.安装插件: 在hexo主目录下执行npm install –save hexo-blog-encrypt<br>2.在需要设置密码的博客的Front-Matter里面加一个参数<br>password:*****  </p>\n<h2 id=\"如何上传图片\"><a href=\"#如何上传图片\" class=\"headerlink\" title=\"如何上传图片\"></a>如何上传图片</h2><p>1.在github存储图片并在博客内关联图片链接<br>这种方式比较推荐, 因为别的博客网站通常都会有防止外部访问的措施在, 存储<br>在github上的图片不会有外部无法访问的情况. 对于各个版本的hexo都能适用.</p>\n<ul>\n<li>打开hexo主目录下的_config.yml文件, 修改参数post_asset_folder为true</li>\n<li>使用hexo n “博客标题” 新建博客时将会同时新建一个同名的资源文件夹, 如图<br><img src=\"/2019/10/08/hexo%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/7.png\">  </li>\n<li>将博客内用到的图片放置到资源文件夹内, 可以按顺序号命名, 如图<br><img src=\"/2019/10/08/hexo%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/8.png\"></li>\n<li>在博客内链接该图片, 格式为 <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![](https://raw.githubusercontent.com/#username/#username.github.io/master/#YYYY/#MM/#DD/#title/#photoname)  </span><br><span class=\"line\">#username : github用户名</span><br><span class=\"line\">#YYYY/#MM/#DD : 如果没有修改_config.yml里的默认文件夹创建方式的话, 就是填入年月日即可, 如2019/10/14  </span><br><span class=\"line\">#title : 文章标题  </span><br><span class=\"line\">#photoname : 图片名称  </span><br></pre></td></tr></table></figure>\n比如我这篇博客的图片链接地址如下图<br><img src=\"/2019/10/08/hexo%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/9.png\">  </li>\n<li>链接完图片后目前在博客的预览界面还无法看到图片, 需要先执行<br>hexo clean (非必要步骤, 如果博客页面格式显示不正确, 需要执行)<br>hexo g (创建博客静态网页文件)<br>hexo d (这一步用于发布博客, 也同时发布图片)<br>hexo d的命令将会把图片发布到github服务器上, 也就可以在上述格式的图片地址里看到该图片  </li>\n</ul>\n<p>2.直接链接本地地址, 这种方式也很方便, 网上也有挺多人使用这种方式, 主要优点<br>是不用多操作一步链接网络地址, 我贴一下该方式:</p>\n<ol>\n<li>打开hexo主目录下的_config.yml文件, 修改参数post_asset_folder为true</li>\n<li>安装图片插件 npm install hexo-asset-image –save<br>或者安装  npm install hexo-renderer-marked -s</li>\n<li>在博客内直接引用本地地址即可, 如  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![](/1.png)</span><br></pre></td></tr></table></figure>\n<h2 id=\"设置首页文章摘要\"><a href=\"#设置首页文章摘要\" class=\"headerlink\" title=\"设置首页文章摘要\"></a>设置首页文章摘要</h2>有三种方法，推荐使用第一种，更加灵活的根据文章进行不同长度的摘要截断，而且对于不同的插件也有最好的适应性</li>\n<li>在文章中使用 <!-- more --> 手动进行截断，Hexo 提供的方式</li>\n<li>在文章的 front-matter 中添加 description，并提供文章摘录 </li>\n<li>自动形成摘要，在 主题配置文件 中添加<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">auto_excerpt</span>:<span class=\"string\"></span></span><br><span class=\"line\">  <span class=\"attr\">enable</span>: <span class=\"string\">true</span></span><br><span class=\"line\">  <span class=\"attr\">length</span>: <span class=\"string\">150</span></span><br></pre></td></tr></table></figure>\n默认截取的长度为 150 字符，可以根据需要自行设定</li>\n</ol>"},{"title":"jenkins简单搭建","date":"2020-05-14T05:37:55.000Z","_content":"## 下载和安装jenkins\n相对简单的办法，依次执行以下语句(前提，需要先安装rpm) \n```shell\n#获取jenkins的rpm安装文件\nwget https://pkg.jenkins.io/redhat-stable/jenkins-2.222.3-1.1.noarch.rpm\n#使用rpm安装\nrpm -ivh jenkins-2.222.3-1.1.noarch.rpm \n```\n\n## 启动jenkins \njenkins启动需要先安装java，java的安装不再赘述，java安装完成后，修改jenkins配置文件，指向java的安装目录 \n```shell\nvi /etc/init.d/jenkins\n```\n在\"candidates=\"这一行加入java安装目录，如果默认配置里面已经指向了你的java安装目录，则不需要再次配置。\n```shell\ncandidates=\"\n/etc/alternatives/java\n/usr/lib/jvm/java-1.8.0/bin/java\n/usr/lib/jvm/jre-1.8.0/bin/java\n/usr/lib/jvm/java-1.7.0/bin/java\n/usr/lib/jvm/jre-1.7.0/bin/java\n/usr/lib/jvm/java-11.0/bin/java\n/usr/lib/jvm/jre-11.0/bin/java\n/usr/lib/jvm/java-11-openjdk-amd64\n/usr/bin/java\n/usr/java/jdk1.8.0_121/jre/bin/java\n\"\n``` \n<!-- more -->\n修改jenkins端口 \n```shell\nvi /etc/sysconfig/jenkins\n# JENKINS_PORT=\"8999\"\n``` \n\n配置完成后，执行：\n```shell\nservice jenkins start\n```\n执行\n```shell\nservice jenkins status\n``` \n出现以下截图说明成功启动\n![](1.png)  \n\n## 配置jenkins\n访问 http://localhost:8999/ 即可看到jenkins的启动页面，稍等一会儿，看到如下页面：\n![](2.png)  \n接下来按照页面指引一步步安装即可。\n- 需要注意的点：插件按照推荐插件安装后，可能会有个别插件无法完成安装，这时不要选择重试，直接跳过，在Manage Jenkins - Mange Plugins - 高级，修改URL为 http://mirror.esuni.jp/jenkins/updates/update-center.json ，然后再更新插件即可。  \n\n","source":"_posts/jenkins简单搭建.md","raw":"---\ntitle: jenkins简单搭建\ndate: 2020-05-14 13:37:55\ntags:\n- jenkins\ncategories:\n- 学习\n- 搭建相关\n---\n## 下载和安装jenkins\n相对简单的办法，依次执行以下语句(前提，需要先安装rpm) \n```shell\n#获取jenkins的rpm安装文件\nwget https://pkg.jenkins.io/redhat-stable/jenkins-2.222.3-1.1.noarch.rpm\n#使用rpm安装\nrpm -ivh jenkins-2.222.3-1.1.noarch.rpm \n```\n\n## 启动jenkins \njenkins启动需要先安装java，java的安装不再赘述，java安装完成后，修改jenkins配置文件，指向java的安装目录 \n```shell\nvi /etc/init.d/jenkins\n```\n在\"candidates=\"这一行加入java安装目录，如果默认配置里面已经指向了你的java安装目录，则不需要再次配置。\n```shell\ncandidates=\"\n/etc/alternatives/java\n/usr/lib/jvm/java-1.8.0/bin/java\n/usr/lib/jvm/jre-1.8.0/bin/java\n/usr/lib/jvm/java-1.7.0/bin/java\n/usr/lib/jvm/jre-1.7.0/bin/java\n/usr/lib/jvm/java-11.0/bin/java\n/usr/lib/jvm/jre-11.0/bin/java\n/usr/lib/jvm/java-11-openjdk-amd64\n/usr/bin/java\n/usr/java/jdk1.8.0_121/jre/bin/java\n\"\n``` \n<!-- more -->\n修改jenkins端口 \n```shell\nvi /etc/sysconfig/jenkins\n# JENKINS_PORT=\"8999\"\n``` \n\n配置完成后，执行：\n```shell\nservice jenkins start\n```\n执行\n```shell\nservice jenkins status\n``` \n出现以下截图说明成功启动\n![](1.png)  \n\n## 配置jenkins\n访问 http://localhost:8999/ 即可看到jenkins的启动页面，稍等一会儿，看到如下页面：\n![](2.png)  \n接下来按照页面指引一步步安装即可。\n- 需要注意的点：插件按照推荐插件安装后，可能会有个别插件无法完成安装，这时不要选择重试，直接跳过，在Manage Jenkins - Mange Plugins - 高级，修改URL为 http://mirror.esuni.jp/jenkins/updates/update-center.json ，然后再更新插件即可。  \n\n","slug":"jenkins简单搭建","published":1,"updated":"2021-11-23T02:02:43.000Z","_id":"ckwadg4n6000b73cffpk791ga","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"下载和安装jenkins\"><a href=\"#下载和安装jenkins\" class=\"headerlink\" title=\"下载和安装jenkins\"></a>下载和安装jenkins</h2><p>相对简单的办法，依次执行以下语句(前提，需要先安装rpm) </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">获取jenkins的rpm安装文件</span></span><br><span class=\"line\">wget https://pkg.jenkins.io/redhat-stable/jenkins-2.222.3-1.1.noarch.rpm</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">使用rpm安装</span></span><br><span class=\"line\">rpm -ivh jenkins-2.222.3-1.1.noarch.rpm </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"启动jenkins\"><a href=\"#启动jenkins\" class=\"headerlink\" title=\"启动jenkins\"></a>启动jenkins</h2><p>jenkins启动需要先安装java，java的安装不再赘述，java安装完成后，修改jenkins配置文件，指向java的安装目录 </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/init.d/jenkins</span><br></pre></td></tr></table></figure>\n<p>在”candidates=”这一行加入java安装目录，如果默认配置里面已经指向了你的java安装目录，则不需要再次配置。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">candidates=&quot;</span><br><span class=\"line\">/etc/alternatives/java</span><br><span class=\"line\">/usr/lib/jvm/java-1.8.0/bin/java</span><br><span class=\"line\">/usr/lib/jvm/jre-1.8.0/bin/java</span><br><span class=\"line\">/usr/lib/jvm/java-1.7.0/bin/java</span><br><span class=\"line\">/usr/lib/jvm/jre-1.7.0/bin/java</span><br><span class=\"line\">/usr/lib/jvm/java-11.0/bin/java</span><br><span class=\"line\">/usr/lib/jvm/jre-11.0/bin/java</span><br><span class=\"line\">/usr/lib/jvm/java-11-openjdk-amd64</span><br><span class=\"line\">/usr/bin/java</span><br><span class=\"line\">/usr/java/jdk1.8.0_121/jre/bin/java</span><br><span class=\"line\">&quot;</span><br></pre></td></tr></table></figure>\n<span id=\"more\"></span>\n<p>修改jenkins端口 </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/sysconfig/jenkins</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> JENKINS_PORT=<span class=\"string\">&quot;8999&quot;</span></span></span><br></pre></td></tr></table></figure>\n\n<p>配置完成后，执行：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service jenkins start</span><br></pre></td></tr></table></figure>\n<p>执行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service jenkins status</span><br></pre></td></tr></table></figure>\n<p>出现以下截图说明成功启动<br><img src=\"/2020/05/14/jenkins%E7%AE%80%E5%8D%95%E6%90%AD%E5%BB%BA/1.png\">  </p>\n<h2 id=\"配置jenkins\"><a href=\"#配置jenkins\" class=\"headerlink\" title=\"配置jenkins\"></a>配置jenkins</h2><p>访问 <a href=\"http://localhost:8999/\">http://localhost:8999/</a> 即可看到jenkins的启动页面，稍等一会儿，看到如下页面：<br><img src=\"/2020/05/14/jenkins%E7%AE%80%E5%8D%95%E6%90%AD%E5%BB%BA/2.png\"><br>接下来按照页面指引一步步安装即可。</p>\n<ul>\n<li>需要注意的点：插件按照推荐插件安装后，可能会有个别插件无法完成安装，这时不要选择重试，直接跳过，在Manage Jenkins - Mange Plugins - 高级，修改URL为 <a href=\"http://mirror.esuni.jp/jenkins/updates/update-center.json\">http://mirror.esuni.jp/jenkins/updates/update-center.json</a> ，然后再更新插件即可。  </li>\n</ul>\n","site":{"data":{}},"excerpt":"<h2 id=\"下载和安装jenkins\"><a href=\"#下载和安装jenkins\" class=\"headerlink\" title=\"下载和安装jenkins\"></a>下载和安装jenkins</h2><p>相对简单的办法，依次执行以下语句(前提，需要先安装rpm) </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">获取jenkins的rpm安装文件</span></span><br><span class=\"line\">wget https://pkg.jenkins.io/redhat-stable/jenkins-2.222.3-1.1.noarch.rpm</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">使用rpm安装</span></span><br><span class=\"line\">rpm -ivh jenkins-2.222.3-1.1.noarch.rpm </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"启动jenkins\"><a href=\"#启动jenkins\" class=\"headerlink\" title=\"启动jenkins\"></a>启动jenkins</h2><p>jenkins启动需要先安装java，java的安装不再赘述，java安装完成后，修改jenkins配置文件，指向java的安装目录 </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/init.d/jenkins</span><br></pre></td></tr></table></figure>\n<p>在”candidates=”这一行加入java安装目录，如果默认配置里面已经指向了你的java安装目录，则不需要再次配置。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">candidates=&quot;</span><br><span class=\"line\">/etc/alternatives/java</span><br><span class=\"line\">/usr/lib/jvm/java-1.8.0/bin/java</span><br><span class=\"line\">/usr/lib/jvm/jre-1.8.0/bin/java</span><br><span class=\"line\">/usr/lib/jvm/java-1.7.0/bin/java</span><br><span class=\"line\">/usr/lib/jvm/jre-1.7.0/bin/java</span><br><span class=\"line\">/usr/lib/jvm/java-11.0/bin/java</span><br><span class=\"line\">/usr/lib/jvm/jre-11.0/bin/java</span><br><span class=\"line\">/usr/lib/jvm/java-11-openjdk-amd64</span><br><span class=\"line\">/usr/bin/java</span><br><span class=\"line\">/usr/java/jdk1.8.0_121/jre/bin/java</span><br><span class=\"line\">&quot;</span><br></pre></td></tr></table></figure>","more":"<p>修改jenkins端口 </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/sysconfig/jenkins</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> JENKINS_PORT=<span class=\"string\">&quot;8999&quot;</span></span></span><br></pre></td></tr></table></figure>\n\n<p>配置完成后，执行：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service jenkins start</span><br></pre></td></tr></table></figure>\n<p>执行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service jenkins status</span><br></pre></td></tr></table></figure>\n<p>出现以下截图说明成功启动<br><img src=\"/2020/05/14/jenkins%E7%AE%80%E5%8D%95%E6%90%AD%E5%BB%BA/1.png\">  </p>\n<h2 id=\"配置jenkins\"><a href=\"#配置jenkins\" class=\"headerlink\" title=\"配置jenkins\"></a>配置jenkins</h2><p>访问 <a href=\"http://localhost:8999/\">http://localhost:8999/</a> 即可看到jenkins的启动页面，稍等一会儿，看到如下页面：<br><img src=\"/2020/05/14/jenkins%E7%AE%80%E5%8D%95%E6%90%AD%E5%BB%BA/2.png\"><br>接下来按照页面指引一步步安装即可。</p>\n<ul>\n<li>需要注意的点：插件按照推荐插件安装后，可能会有个别插件无法完成安装，这时不要选择重试，直接跳过，在Manage Jenkins - Mange Plugins - 高级，修改URL为 <a href=\"http://mirror.esuni.jp/jenkins/updates/update-center.json\">http://mirror.esuni.jp/jenkins/updates/update-center.json</a> ，然后再更新插件即可。  </li>\n</ul>"},{"title":"linux日常维护命令","date":"2019-10-16T06:32:27.000Z","comments":1,"_content":"\n## find  \n### 删除测试库创建日期在10天以前的日志  \n```shell\nfind /home -ctime +10 -type f -name \"*log.log.20*\" | xargs rm -rf\n```\n\n## 查看磁盘空间和大文件  \n\n### 查看磁盘剩余空间  \n\n```shell\ndf -h\n```\n\n### 查看目录下大文件  \n\n``` shell\ndu -h --max-depth=1\n```\n\n## 查看进程中的java程序  \n\n```shell\nps aux | grep java\n# 杀死某个进程\nkill -9 pid\n```\n\n## 修改hostname\n\n```shell\nvi /etc/sysconfig/network\n```\n\n## 传输文件\n\n```shell\nscp C:/Users/Administrator/Downloads/elasticsearch-7.3.1-linux-x86_64.tar.gz root@192.168.15.161:/home/bos-provider/bos-provider-1.0-SNAPSHOT/bin\n\n```\n<!-- more -->\n## MQ查询命令\n\n#### 查询某条消息的生产者和消费者，以及消息的track路径\n\n1.进入/usr/java/rocketmq/bin\n2.根据key查找\n\n```shell\nsh mqadmin queryMsgBykey -n 127.0.0.1:9876 -k b6df2c64-4654-409d-b457-ec1db294a606 -t ORDER\n```\n\n3.根据key可以找到ID\n   根据ID查找消费者和生产者\n\n```shell\nsh mqadmin queryMsgById -n 127.0.0.1:9876 -i C0A8074100002A9F00000001A2BC9012\n```\n\n#### 查看topiclist\n```shell\nsh mqadmin topicList –n 127.0.0.1:9876\n```\n\n","source":"_posts/linux日常维护命令.md","raw":"---\ntitle: linux日常维护命令\ndate: 2019-10-16 14:32:27\ntags: \n- linux\ncomments: true\ncategories: \n- 学习\n- 运维\n---\n\n## find  \n### 删除测试库创建日期在10天以前的日志  \n```shell\nfind /home -ctime +10 -type f -name \"*log.log.20*\" | xargs rm -rf\n```\n\n## 查看磁盘空间和大文件  \n\n### 查看磁盘剩余空间  \n\n```shell\ndf -h\n```\n\n### 查看目录下大文件  \n\n``` shell\ndu -h --max-depth=1\n```\n\n## 查看进程中的java程序  \n\n```shell\nps aux | grep java\n# 杀死某个进程\nkill -9 pid\n```\n\n## 修改hostname\n\n```shell\nvi /etc/sysconfig/network\n```\n\n## 传输文件\n\n```shell\nscp C:/Users/Administrator/Downloads/elasticsearch-7.3.1-linux-x86_64.tar.gz root@192.168.15.161:/home/bos-provider/bos-provider-1.0-SNAPSHOT/bin\n\n```\n<!-- more -->\n## MQ查询命令\n\n#### 查询某条消息的生产者和消费者，以及消息的track路径\n\n1.进入/usr/java/rocketmq/bin\n2.根据key查找\n\n```shell\nsh mqadmin queryMsgBykey -n 127.0.0.1:9876 -k b6df2c64-4654-409d-b457-ec1db294a606 -t ORDER\n```\n\n3.根据key可以找到ID\n   根据ID查找消费者和生产者\n\n```shell\nsh mqadmin queryMsgById -n 127.0.0.1:9876 -i C0A8074100002A9F00000001A2BC9012\n```\n\n#### 查看topiclist\n```shell\nsh mqadmin topicList –n 127.0.0.1:9876\n```\n\n","slug":"linux日常维护命令","published":1,"updated":"2021-11-23T02:02:43.000Z","_id":"ckwadg4n8000f73cf2rhx3duc","layout":"post","photos":[],"link":"","content":"<h2 id=\"find\"><a href=\"#find\" class=\"headerlink\" title=\"find\"></a>find</h2><h3 id=\"删除测试库创建日期在10天以前的日志\"><a href=\"#删除测试库创建日期在10天以前的日志\" class=\"headerlink\" title=\"删除测试库创建日期在10天以前的日志\"></a>删除测试库创建日期在10天以前的日志</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">find /home -ctime +10 -type f -name &quot;*log.log.20*&quot; | xargs rm -rf</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"查看磁盘空间和大文件\"><a href=\"#查看磁盘空间和大文件\" class=\"headerlink\" title=\"查看磁盘空间和大文件\"></a>查看磁盘空间和大文件</h2><h3 id=\"查看磁盘剩余空间\"><a href=\"#查看磁盘剩余空间\" class=\"headerlink\" title=\"查看磁盘剩余空间\"></a>查看磁盘剩余空间</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df -h</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"查看目录下大文件\"><a href=\"#查看目录下大文件\" class=\"headerlink\" title=\"查看目录下大文件\"></a>查看目录下大文件</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">du -h --max-depth=1</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"查看进程中的java程序\"><a href=\"#查看进程中的java程序\" class=\"headerlink\" title=\"查看进程中的java程序\"></a>查看进程中的java程序</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps aux | grep java</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 杀死某个进程</span></span><br><span class=\"line\">kill -9 pid</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"修改hostname\"><a href=\"#修改hostname\" class=\"headerlink\" title=\"修改hostname\"></a>修改hostname</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/sysconfig/network</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"传输文件\"><a href=\"#传输文件\" class=\"headerlink\" title=\"传输文件\"></a>传输文件</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp C:/Users/Administrator/Downloads/elasticsearch-7.3.1-linux-x86_64.tar.gz root@192.168.15.161:/home/bos-provider/bos-provider-1.0-SNAPSHOT/bin</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<span id=\"more\"></span>\n<h2 id=\"MQ查询命令\"><a href=\"#MQ查询命令\" class=\"headerlink\" title=\"MQ查询命令\"></a>MQ查询命令</h2><h4 id=\"查询某条消息的生产者和消费者，以及消息的track路径\"><a href=\"#查询某条消息的生产者和消费者，以及消息的track路径\" class=\"headerlink\" title=\"查询某条消息的生产者和消费者，以及消息的track路径\"></a>查询某条消息的生产者和消费者，以及消息的track路径</h4><p>1.进入/usr/java/rocketmq/bin<br>2.根据key查找</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sh mqadmin queryMsgBykey -n 127.0.0.1:9876 -k b6df2c64-4654-409d-b457-ec1db294a606 -t ORDER</span><br></pre></td></tr></table></figure>\n\n<p>3.根据key可以找到ID<br>   根据ID查找消费者和生产者</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sh mqadmin queryMsgById -n 127.0.0.1:9876 -i C0A8074100002A9F00000001A2BC9012</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"查看topiclist\"><a href=\"#查看topiclist\" class=\"headerlink\" title=\"查看topiclist\"></a>查看topiclist</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sh mqadmin topicList –n 127.0.0.1:9876</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<h2 id=\"find\"><a href=\"#find\" class=\"headerlink\" title=\"find\"></a>find</h2><h3 id=\"删除测试库创建日期在10天以前的日志\"><a href=\"#删除测试库创建日期在10天以前的日志\" class=\"headerlink\" title=\"删除测试库创建日期在10天以前的日志\"></a>删除测试库创建日期在10天以前的日志</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">find /home -ctime +10 -type f -name &quot;*log.log.20*&quot; | xargs rm -rf</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"查看磁盘空间和大文件\"><a href=\"#查看磁盘空间和大文件\" class=\"headerlink\" title=\"查看磁盘空间和大文件\"></a>查看磁盘空间和大文件</h2><h3 id=\"查看磁盘剩余空间\"><a href=\"#查看磁盘剩余空间\" class=\"headerlink\" title=\"查看磁盘剩余空间\"></a>查看磁盘剩余空间</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df -h</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"查看目录下大文件\"><a href=\"#查看目录下大文件\" class=\"headerlink\" title=\"查看目录下大文件\"></a>查看目录下大文件</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">du -h --max-depth=1</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"查看进程中的java程序\"><a href=\"#查看进程中的java程序\" class=\"headerlink\" title=\"查看进程中的java程序\"></a>查看进程中的java程序</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps aux | grep java</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 杀死某个进程</span></span><br><span class=\"line\">kill -9 pid</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"修改hostname\"><a href=\"#修改hostname\" class=\"headerlink\" title=\"修改hostname\"></a>修改hostname</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/sysconfig/network</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"传输文件\"><a href=\"#传输文件\" class=\"headerlink\" title=\"传输文件\"></a>传输文件</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp C:/Users/Administrator/Downloads/elasticsearch-7.3.1-linux-x86_64.tar.gz root@192.168.15.161:/home/bos-provider/bos-provider-1.0-SNAPSHOT/bin</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","more":"<h2 id=\"MQ查询命令\"><a href=\"#MQ查询命令\" class=\"headerlink\" title=\"MQ查询命令\"></a>MQ查询命令</h2><h4 id=\"查询某条消息的生产者和消费者，以及消息的track路径\"><a href=\"#查询某条消息的生产者和消费者，以及消息的track路径\" class=\"headerlink\" title=\"查询某条消息的生产者和消费者，以及消息的track路径\"></a>查询某条消息的生产者和消费者，以及消息的track路径</h4><p>1.进入/usr/java/rocketmq/bin<br>2.根据key查找</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sh mqadmin queryMsgBykey -n 127.0.0.1:9876 -k b6df2c64-4654-409d-b457-ec1db294a606 -t ORDER</span><br></pre></td></tr></table></figure>\n\n<p>3.根据key可以找到ID<br>   根据ID查找消费者和生产者</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sh mqadmin queryMsgById -n 127.0.0.1:9876 -i C0A8074100002A9F00000001A2BC9012</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"查看topiclist\"><a href=\"#查看topiclist\" class=\"headerlink\" title=\"查看topiclist\"></a>查看topiclist</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sh mqadmin topicList –n 127.0.0.1:9876</span><br></pre></td></tr></table></figure>"},{"title":"logback日志配置模板","date":"2019-11-05T08:47:55.000Z","_content":"\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<configuration>\n\n    <!-- 常量定义start -->\n    <!-- 默认日志输出格式-->\n    <property name=\"HOST_NAME\" value=\"Project_Name\"/>\n    <property name=\"DEFAULT_PATTERN\"\n              value=\"%d{yyyy-MM-dd HH:mm:ss.SSS} ** ${HOST_NAME} ** [%thread] ** %level ** [%logger] ** - %file:%line ** [%method] - ** %msg%n\"/>\n    <property name=\"MAX_HISTORY\" value=\"30\"/>\n    <property name=\"ASYNC_QUEUE_SIZE\" value=\"1024\"/>\n    <property name=\"DEFAULT_CHARSET\" value=\"UTF-8\"/>\n    <!-- 常量定义end -->\n\n    <!-- 默认日志的console appender，本地使用的日志 -->\n    <appender class=\"ch.qos.logback.core.ConsoleAppender\" name=\"STDOUT\">\n        <encoder>\n            <pattern>${DEFAULT_PATTERN}</pattern>\n            <charset>${DEFAULT_CHARSET}</charset>\n        </encoder>\n    </appender>\n    <appender class=\"ch.qos.logback.core.rolling.RollingFileAppender\" name=\"ROLLING_FILE_DEFAULT\">\n        <append>true</append>\n        <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n            <fileNamePattern>E:/logs/${HOST_NAME}/${HOST_NAME}-%d{yyyyMMdd}.log</fileNamePattern>\n            <maxHistory>${MAX_HISTORY}</maxHistory>\n        </rollingPolicy>\n        <encoder>\n            <pattern>${DEFAULT_PATTERN}</pattern>\n            <charset>${DEFAULT_CHARSET}</charset>\n        </encoder>\n    </appender>\n    <springProfile name=\"!local\">\n        <!-- 服务器上使用的appender start -->\n        <!-- 默认的file appender，按天切分日志 -->\n        <appender class=\"ch.qos.logback.core.rolling.RollingFileAppender\" name=\"ROLLING_FILE_DEFAULT\">\n            <append>true</append>\n            <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n                <fileNamePattern>/home/logs/${HOSTNAME}/${HOSTNAME}-%d{yyyyMMdd}.log</fileNamePattern>\n                <maxHistory>${MAX_HISTORY}</maxHistory>\n            </rollingPolicy>\n            <encoder>\n                <pattern>${DEFAULT_PATTERN}</pattern>\n                <charset>${DEFAULT_CHARSET}</charset>\n            </encoder>\n        </appender>\n\n        <!-- 错误日志，按天切分 -->\n        <appender class=\"ch.qos.logback.core.rolling.RollingFileAppender\" name=\"ROLLING_FILE_ERROR\">\n            <filter class=\"ch.qos.logback.classic.filter.LevelFilter\">\n                <level>ERROR</level>\n                <onMatch>ACCEPT</onMatch>\n                <onMismatch>DENY</onMismatch>\n            </filter>\n            <append>true</append>\n            <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n                <fileNamePattern>/home/logs/${HOSTNAME}/${HOSTNAME}_error-%d{yyyyMMdd}.log</fileNamePattern>\n                <maxHistory>${MAX_HISTORY}</maxHistory>\n            </rollingPolicy>\n            <encoder>\n                <pattern>${DEFAULT_PATTERN}</pattern>\n                <charset>${DEFAULT_CHARSET}</charset>\n            </encoder>\n        </appender>\n\n        <appender class=\"ch.qos.logback.classic.AsyncAppender\" name=\"ASYNC_ROLLING_FILE_DEFAULT\">\n            <!-- 如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->\n            <discardingThreshold>-1</discardingThreshold>\n            <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->\n            <queueSize>2048</queueSize>\n            <includeCallerData>true</includeCallerData>\n            <!-- 添加附加的appender,最多只能添加一个 -->\n            <appender-ref ref=\"ROLLING_FILE_DEFAULT\"/>\n        </appender>\n\n        <appender class=\"ch.qos.logback.classic.AsyncAppender\" name=\"ASYNC_ROLLING_FILE_ERROR\">\n            <!-- 如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->\n            <discardingThreshold>-1</discardingThreshold>\n            <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->\n            <queueSize>2048</queueSize>\n            <includeCallerData>true</includeCallerData>\n            <!-- 添加附加的appender,最多只能添加一个 -->\n            <appender-ref ref=\"ROLLING_FILE_ERROR\"/>\n        </appender>\n\n    </springProfile>\n\n    <root level=\"info\">\n        <appender-ref ref=\"STDOUT\"/>\n        <appender-ref ref=\"ROLLING_FILE_DEFAULT\"/>\n    </root>\n\n</configuration>\n\n```\n\n","source":"_posts/logback日志配置模板.md","raw":"---\ntitle: logback日志配置模板\ndate: 2019-11-05 16:47:55\ncategories: \n- 学习\n- 搭建相关\n---\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<configuration>\n\n    <!-- 常量定义start -->\n    <!-- 默认日志输出格式-->\n    <property name=\"HOST_NAME\" value=\"Project_Name\"/>\n    <property name=\"DEFAULT_PATTERN\"\n              value=\"%d{yyyy-MM-dd HH:mm:ss.SSS} ** ${HOST_NAME} ** [%thread] ** %level ** [%logger] ** - %file:%line ** [%method] - ** %msg%n\"/>\n    <property name=\"MAX_HISTORY\" value=\"30\"/>\n    <property name=\"ASYNC_QUEUE_SIZE\" value=\"1024\"/>\n    <property name=\"DEFAULT_CHARSET\" value=\"UTF-8\"/>\n    <!-- 常量定义end -->\n\n    <!-- 默认日志的console appender，本地使用的日志 -->\n    <appender class=\"ch.qos.logback.core.ConsoleAppender\" name=\"STDOUT\">\n        <encoder>\n            <pattern>${DEFAULT_PATTERN}</pattern>\n            <charset>${DEFAULT_CHARSET}</charset>\n        </encoder>\n    </appender>\n    <appender class=\"ch.qos.logback.core.rolling.RollingFileAppender\" name=\"ROLLING_FILE_DEFAULT\">\n        <append>true</append>\n        <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n            <fileNamePattern>E:/logs/${HOST_NAME}/${HOST_NAME}-%d{yyyyMMdd}.log</fileNamePattern>\n            <maxHistory>${MAX_HISTORY}</maxHistory>\n        </rollingPolicy>\n        <encoder>\n            <pattern>${DEFAULT_PATTERN}</pattern>\n            <charset>${DEFAULT_CHARSET}</charset>\n        </encoder>\n    </appender>\n    <springProfile name=\"!local\">\n        <!-- 服务器上使用的appender start -->\n        <!-- 默认的file appender，按天切分日志 -->\n        <appender class=\"ch.qos.logback.core.rolling.RollingFileAppender\" name=\"ROLLING_FILE_DEFAULT\">\n            <append>true</append>\n            <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n                <fileNamePattern>/home/logs/${HOSTNAME}/${HOSTNAME}-%d{yyyyMMdd}.log</fileNamePattern>\n                <maxHistory>${MAX_HISTORY}</maxHistory>\n            </rollingPolicy>\n            <encoder>\n                <pattern>${DEFAULT_PATTERN}</pattern>\n                <charset>${DEFAULT_CHARSET}</charset>\n            </encoder>\n        </appender>\n\n        <!-- 错误日志，按天切分 -->\n        <appender class=\"ch.qos.logback.core.rolling.RollingFileAppender\" name=\"ROLLING_FILE_ERROR\">\n            <filter class=\"ch.qos.logback.classic.filter.LevelFilter\">\n                <level>ERROR</level>\n                <onMatch>ACCEPT</onMatch>\n                <onMismatch>DENY</onMismatch>\n            </filter>\n            <append>true</append>\n            <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n                <fileNamePattern>/home/logs/${HOSTNAME}/${HOSTNAME}_error-%d{yyyyMMdd}.log</fileNamePattern>\n                <maxHistory>${MAX_HISTORY}</maxHistory>\n            </rollingPolicy>\n            <encoder>\n                <pattern>${DEFAULT_PATTERN}</pattern>\n                <charset>${DEFAULT_CHARSET}</charset>\n            </encoder>\n        </appender>\n\n        <appender class=\"ch.qos.logback.classic.AsyncAppender\" name=\"ASYNC_ROLLING_FILE_DEFAULT\">\n            <!-- 如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->\n            <discardingThreshold>-1</discardingThreshold>\n            <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->\n            <queueSize>2048</queueSize>\n            <includeCallerData>true</includeCallerData>\n            <!-- 添加附加的appender,最多只能添加一个 -->\n            <appender-ref ref=\"ROLLING_FILE_DEFAULT\"/>\n        </appender>\n\n        <appender class=\"ch.qos.logback.classic.AsyncAppender\" name=\"ASYNC_ROLLING_FILE_ERROR\">\n            <!-- 如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->\n            <discardingThreshold>-1</discardingThreshold>\n            <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->\n            <queueSize>2048</queueSize>\n            <includeCallerData>true</includeCallerData>\n            <!-- 添加附加的appender,最多只能添加一个 -->\n            <appender-ref ref=\"ROLLING_FILE_ERROR\"/>\n        </appender>\n\n    </springProfile>\n\n    <root level=\"info\">\n        <appender-ref ref=\"STDOUT\"/>\n        <appender-ref ref=\"ROLLING_FILE_DEFAULT\"/>\n    </root>\n\n</configuration>\n\n```\n\n","slug":"logback日志配置模板","published":1,"updated":"2021-11-23T02:15:29.000Z","_id":"ckwadg4na000g73cfe4z3cvev","comments":1,"layout":"post","photos":[],"link":"","content":"<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 常量定义start --&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 默认日志输出格式--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;HOST_NAME&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;Project_Name&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;DEFAULT_PATTERN&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">              <span class=\"attr\">value</span>=<span class=\"string\">&quot;%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; ** $&#123;HOST_NAME&#125; ** [%thread] ** %level ** [%logger] ** - %file:%line ** [%method] - ** %msg%n&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;MAX_HISTORY&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;30&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;ASYNC_QUEUE_SIZE&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;1024&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;DEFAULT_CHARSET&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;UTF-8&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 常量定义end --&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 默认日志的console appender，本地使用的日志 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">appender</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;ch.qos.logback.core.ConsoleAppender&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;STDOUT&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">encoder</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">pattern</span>&gt;</span>$&#123;DEFAULT_PATTERN&#125;<span class=\"tag\">&lt;/<span class=\"name\">pattern</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">charset</span>&gt;</span>$&#123;DEFAULT_CHARSET&#125;<span class=\"tag\">&lt;/<span class=\"name\">charset</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">encoder</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">appender</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">appender</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;ROLLING_FILE_DEFAULT&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">append</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">append</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">rollingPolicy</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">fileNamePattern</span>&gt;</span>E:/logs/$&#123;HOST_NAME&#125;/$&#123;HOST_NAME&#125;-%d&#123;yyyyMMdd&#125;.log<span class=\"tag\">&lt;/<span class=\"name\">fileNamePattern</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">maxHistory</span>&gt;</span>$&#123;MAX_HISTORY&#125;<span class=\"tag\">&lt;/<span class=\"name\">maxHistory</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">rollingPolicy</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">encoder</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">pattern</span>&gt;</span>$&#123;DEFAULT_PATTERN&#125;<span class=\"tag\">&lt;/<span class=\"name\">pattern</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">charset</span>&gt;</span>$&#123;DEFAULT_CHARSET&#125;<span class=\"tag\">&lt;/<span class=\"name\">charset</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">encoder</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">appender</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">springProfile</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;!local&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 服务器上使用的appender start --&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 默认的file appender，按天切分日志 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">appender</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;ROLLING_FILE_DEFAULT&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">append</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">append</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">rollingPolicy</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">fileNamePattern</span>&gt;</span>/home/logs/$&#123;HOSTNAME&#125;/$&#123;HOSTNAME&#125;-%d&#123;yyyyMMdd&#125;.log<span class=\"tag\">&lt;/<span class=\"name\">fileNamePattern</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">maxHistory</span>&gt;</span>$&#123;MAX_HISTORY&#125;<span class=\"tag\">&lt;/<span class=\"name\">maxHistory</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">rollingPolicy</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">encoder</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">pattern</span>&gt;</span>$&#123;DEFAULT_PATTERN&#125;<span class=\"tag\">&lt;/<span class=\"name\">pattern</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">charset</span>&gt;</span>$&#123;DEFAULT_CHARSET&#125;<span class=\"tag\">&lt;/<span class=\"name\">charset</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">encoder</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">appender</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 错误日志，按天切分 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">appender</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;ROLLING_FILE_ERROR&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">filter</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;ch.qos.logback.classic.filter.LevelFilter&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">level</span>&gt;</span>ERROR<span class=\"tag\">&lt;/<span class=\"name\">level</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">onMatch</span>&gt;</span>ACCEPT<span class=\"tag\">&lt;/<span class=\"name\">onMatch</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">onMismatch</span>&gt;</span>DENY<span class=\"tag\">&lt;/<span class=\"name\">onMismatch</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">filter</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">append</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">append</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">rollingPolicy</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">fileNamePattern</span>&gt;</span>/home/logs/$&#123;HOSTNAME&#125;/$&#123;HOSTNAME&#125;_error-%d&#123;yyyyMMdd&#125;.log<span class=\"tag\">&lt;/<span class=\"name\">fileNamePattern</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">maxHistory</span>&gt;</span>$&#123;MAX_HISTORY&#125;<span class=\"tag\">&lt;/<span class=\"name\">maxHistory</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">rollingPolicy</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">encoder</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">pattern</span>&gt;</span>$&#123;DEFAULT_PATTERN&#125;<span class=\"tag\">&lt;/<span class=\"name\">pattern</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">charset</span>&gt;</span>$&#123;DEFAULT_CHARSET&#125;<span class=\"tag\">&lt;/<span class=\"name\">charset</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">encoder</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">appender</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">appender</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;ch.qos.logback.classic.AsyncAppender&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;ASYNC_ROLLING_FILE_DEFAULT&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- 如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">discardingThreshold</span>&gt;</span>-1<span class=\"tag\">&lt;/<span class=\"name\">discardingThreshold</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- 更改默认的队列的深度,该值会影响性能.默认值为256 --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">queueSize</span>&gt;</span>2048<span class=\"tag\">&lt;/<span class=\"name\">queueSize</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">includeCallerData</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">includeCallerData</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- 添加附加的appender,最多只能添加一个 --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">appender-ref</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;ROLLING_FILE_DEFAULT&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">appender</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">appender</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;ch.qos.logback.classic.AsyncAppender&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;ASYNC_ROLLING_FILE_ERROR&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- 如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">discardingThreshold</span>&gt;</span>-1<span class=\"tag\">&lt;/<span class=\"name\">discardingThreshold</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- 更改默认的队列的深度,该值会影响性能.默认值为256 --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">queueSize</span>&gt;</span>2048<span class=\"tag\">&lt;/<span class=\"name\">queueSize</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">includeCallerData</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">includeCallerData</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- 添加附加的appender,最多只能添加一个 --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">appender-ref</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;ROLLING_FILE_ERROR&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">appender</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">springProfile</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">root</span> <span class=\"attr\">level</span>=<span class=\"string\">&quot;info&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">appender-ref</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;STDOUT&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">appender-ref</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;ROLLING_FILE_DEFAULT&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">root</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 常量定义start --&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 默认日志输出格式--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;HOST_NAME&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;Project_Name&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;DEFAULT_PATTERN&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">              <span class=\"attr\">value</span>=<span class=\"string\">&quot;%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; ** $&#123;HOST_NAME&#125; ** [%thread] ** %level ** [%logger] ** - %file:%line ** [%method] - ** %msg%n&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;MAX_HISTORY&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;30&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;ASYNC_QUEUE_SIZE&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;1024&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;DEFAULT_CHARSET&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;UTF-8&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 常量定义end --&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 默认日志的console appender，本地使用的日志 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">appender</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;ch.qos.logback.core.ConsoleAppender&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;STDOUT&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">encoder</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">pattern</span>&gt;</span>$&#123;DEFAULT_PATTERN&#125;<span class=\"tag\">&lt;/<span class=\"name\">pattern</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">charset</span>&gt;</span>$&#123;DEFAULT_CHARSET&#125;<span class=\"tag\">&lt;/<span class=\"name\">charset</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">encoder</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">appender</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">appender</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;ROLLING_FILE_DEFAULT&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">append</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">append</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">rollingPolicy</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">fileNamePattern</span>&gt;</span>E:/logs/$&#123;HOST_NAME&#125;/$&#123;HOST_NAME&#125;-%d&#123;yyyyMMdd&#125;.log<span class=\"tag\">&lt;/<span class=\"name\">fileNamePattern</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">maxHistory</span>&gt;</span>$&#123;MAX_HISTORY&#125;<span class=\"tag\">&lt;/<span class=\"name\">maxHistory</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">rollingPolicy</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">encoder</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">pattern</span>&gt;</span>$&#123;DEFAULT_PATTERN&#125;<span class=\"tag\">&lt;/<span class=\"name\">pattern</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">charset</span>&gt;</span>$&#123;DEFAULT_CHARSET&#125;<span class=\"tag\">&lt;/<span class=\"name\">charset</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">encoder</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">appender</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">springProfile</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;!local&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 服务器上使用的appender start --&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 默认的file appender，按天切分日志 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">appender</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;ROLLING_FILE_DEFAULT&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">append</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">append</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">rollingPolicy</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">fileNamePattern</span>&gt;</span>/home/logs/$&#123;HOSTNAME&#125;/$&#123;HOSTNAME&#125;-%d&#123;yyyyMMdd&#125;.log<span class=\"tag\">&lt;/<span class=\"name\">fileNamePattern</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">maxHistory</span>&gt;</span>$&#123;MAX_HISTORY&#125;<span class=\"tag\">&lt;/<span class=\"name\">maxHistory</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">rollingPolicy</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">encoder</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">pattern</span>&gt;</span>$&#123;DEFAULT_PATTERN&#125;<span class=\"tag\">&lt;/<span class=\"name\">pattern</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">charset</span>&gt;</span>$&#123;DEFAULT_CHARSET&#125;<span class=\"tag\">&lt;/<span class=\"name\">charset</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">encoder</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">appender</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 错误日志，按天切分 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">appender</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;ROLLING_FILE_ERROR&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">filter</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;ch.qos.logback.classic.filter.LevelFilter&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">level</span>&gt;</span>ERROR<span class=\"tag\">&lt;/<span class=\"name\">level</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">onMatch</span>&gt;</span>ACCEPT<span class=\"tag\">&lt;/<span class=\"name\">onMatch</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">onMismatch</span>&gt;</span>DENY<span class=\"tag\">&lt;/<span class=\"name\">onMismatch</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">filter</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">append</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">append</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">rollingPolicy</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">fileNamePattern</span>&gt;</span>/home/logs/$&#123;HOSTNAME&#125;/$&#123;HOSTNAME&#125;_error-%d&#123;yyyyMMdd&#125;.log<span class=\"tag\">&lt;/<span class=\"name\">fileNamePattern</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">maxHistory</span>&gt;</span>$&#123;MAX_HISTORY&#125;<span class=\"tag\">&lt;/<span class=\"name\">maxHistory</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">rollingPolicy</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">encoder</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">pattern</span>&gt;</span>$&#123;DEFAULT_PATTERN&#125;<span class=\"tag\">&lt;/<span class=\"name\">pattern</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">charset</span>&gt;</span>$&#123;DEFAULT_CHARSET&#125;<span class=\"tag\">&lt;/<span class=\"name\">charset</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">encoder</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">appender</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">appender</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;ch.qos.logback.classic.AsyncAppender&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;ASYNC_ROLLING_FILE_DEFAULT&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- 如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">discardingThreshold</span>&gt;</span>-1<span class=\"tag\">&lt;/<span class=\"name\">discardingThreshold</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- 更改默认的队列的深度,该值会影响性能.默认值为256 --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">queueSize</span>&gt;</span>2048<span class=\"tag\">&lt;/<span class=\"name\">queueSize</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">includeCallerData</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">includeCallerData</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- 添加附加的appender,最多只能添加一个 --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">appender-ref</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;ROLLING_FILE_DEFAULT&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">appender</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">appender</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;ch.qos.logback.classic.AsyncAppender&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;ASYNC_ROLLING_FILE_ERROR&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- 如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">discardingThreshold</span>&gt;</span>-1<span class=\"tag\">&lt;/<span class=\"name\">discardingThreshold</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- 更改默认的队列的深度,该值会影响性能.默认值为256 --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">queueSize</span>&gt;</span>2048<span class=\"tag\">&lt;/<span class=\"name\">queueSize</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">includeCallerData</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">includeCallerData</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- 添加附加的appender,最多只能添加一个 --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">appender-ref</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;ROLLING_FILE_ERROR&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">appender</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">springProfile</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">root</span> <span class=\"attr\">level</span>=<span class=\"string\">&quot;info&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">appender-ref</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;STDOUT&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">appender-ref</span> <span class=\"attr\">ref</span>=<span class=\"string\">&quot;ROLLING_FILE_DEFAULT&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">root</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n"},{"title":"利用hexo和github搭建个人博客","date":"2019-10-08T00:55:33.000Z","comments":1,"_content":"## github建立个人网站  \n1.github的账号申请不再赘述  \n2.打开github.com, 点击new, 新建一个项目  \n![](1.png)  \n3.输入项目名称, 注意项目名称的格式必须是\"用户名.github.io\"的格式\n![](2.png)  \n4.点击Create Repository完成项目新建  \n5.点击新建的项目, 进入settings, 往下找到GitHub Pages, 点击Choose a theme, 选择一个主题后, 点击select theme就完成了网站的发布  \n![](3.png)  \n6.在浏览器输入\"用户名.github.io\", 就可以看到github为你默认创建的首页  \n\n## hexo搭建博客  \n1.在使用hexo搭建博客之前, 需要完成几个基础工作  \n[安装git](https://git-scm.com/book/zh/v2/%E8%B5%B7%E6%AD%A5-%E5%AE%89%E8%A3%85-Git)  \n[新增ssh key到github](https://help.github.com/cn/articles/adding-a-new-ssh-key-to-your-github-account)  \n[安装node.js](http://www.runoob.com/nodejs/nodejs-install-setup.html)  \n2.在本地拉取github上刚刚创建的网页项目(用户名.github.io)\n3.在项目目录下新建一个文件夹, 可以随意命名, 比如hexo  \n4.进入hexo目录, windows下右键空白处, 点击Git Bash Here  \n5.依次执行命令  \nnpm install hexo-cli -g  (安装hexo)  \nhexo init  (初始化网站)  \nnpm install hexo-deployer-git --save  (安装hexo发布到git的插件)  \n中间遇到需要确认的信息, 直接按回车即可  \n6.打开hexo目录下的_config.yml文件, 有几个地方可以进行修改  \ntitle: 你的网站名字  \nauthor: 网站作者  \ntheme: 去[hexo主题](https://hexo.io/themes/)可以选择, 注意要先将主题下载到hexo/themes下才可选择该主题  \n注意: **必须要修改的部分是deploy, 改成如下格式**  \n<!-- more -->\n```\ndeploy:\n  type: git\n  repo: git@github.com:yourname/yourname.github.io.git\n  branch: master\n```\n其他配置的详细说明在[hexo配置文件说明](https://hexo.io/docs/configuration.html)  \n7.接下来就可以开始写博客了  \n使用命令hexo n \"博客标题\", 即完成了一个新的博客文件的创建  \n该命令会在hexo/source/_posts目录下新建一个\"博客标题.md\"的文件  \n该文件内容格式如下  \n![](4.png)  \n正文内容使用markdown语法进行编写, 至于markdown怎么写, 可以参考[markdown官方文档](http://www.markdown.cn/)  \n8.博客写完之后, 保存文件, 然后依次执行如下命令  \nhexo g  (根据md文件创建静态网页文件, 注意每次更新博客内容都需要执行这个命令)  \nhexo s  (这一步是启动本地hexo服务器, 主要是为了本地预览博客效果, 浏览器打开localhost:4000预览效果)  \nhexo d (发布网页到github)  \n9.浏览器打开\"用户名.github.io\"即可看到你刚刚写的博客内容  \n![](5.png)  \n## 小结  \n总的来说, hexo+github搭建博客非常的简便, hexo内置的几种主题也都非常的简洁美观, 对于既想要有逼格的有自己的个人博客网站, 又不想太麻烦的人来说, 是个不错的选择\n\n","source":"_posts/利用hexo和github搭建个人博客.md","raw":"---\ntitle: 利用hexo和github搭建个人博客\ndate: 2019-10-08 08:55:33\ntags: \n- hexo\n- github\ncomments: true\ncategories: \n- 学习\n- 搭建相关\n---\n## github建立个人网站  \n1.github的账号申请不再赘述  \n2.打开github.com, 点击new, 新建一个项目  \n![](1.png)  \n3.输入项目名称, 注意项目名称的格式必须是\"用户名.github.io\"的格式\n![](2.png)  \n4.点击Create Repository完成项目新建  \n5.点击新建的项目, 进入settings, 往下找到GitHub Pages, 点击Choose a theme, 选择一个主题后, 点击select theme就完成了网站的发布  \n![](3.png)  \n6.在浏览器输入\"用户名.github.io\", 就可以看到github为你默认创建的首页  \n\n## hexo搭建博客  \n1.在使用hexo搭建博客之前, 需要完成几个基础工作  \n[安装git](https://git-scm.com/book/zh/v2/%E8%B5%B7%E6%AD%A5-%E5%AE%89%E8%A3%85-Git)  \n[新增ssh key到github](https://help.github.com/cn/articles/adding-a-new-ssh-key-to-your-github-account)  \n[安装node.js](http://www.runoob.com/nodejs/nodejs-install-setup.html)  \n2.在本地拉取github上刚刚创建的网页项目(用户名.github.io)\n3.在项目目录下新建一个文件夹, 可以随意命名, 比如hexo  \n4.进入hexo目录, windows下右键空白处, 点击Git Bash Here  \n5.依次执行命令  \nnpm install hexo-cli -g  (安装hexo)  \nhexo init  (初始化网站)  \nnpm install hexo-deployer-git --save  (安装hexo发布到git的插件)  \n中间遇到需要确认的信息, 直接按回车即可  \n6.打开hexo目录下的_config.yml文件, 有几个地方可以进行修改  \ntitle: 你的网站名字  \nauthor: 网站作者  \ntheme: 去[hexo主题](https://hexo.io/themes/)可以选择, 注意要先将主题下载到hexo/themes下才可选择该主题  \n注意: **必须要修改的部分是deploy, 改成如下格式**  \n<!-- more -->\n```\ndeploy:\n  type: git\n  repo: git@github.com:yourname/yourname.github.io.git\n  branch: master\n```\n其他配置的详细说明在[hexo配置文件说明](https://hexo.io/docs/configuration.html)  \n7.接下来就可以开始写博客了  \n使用命令hexo n \"博客标题\", 即完成了一个新的博客文件的创建  \n该命令会在hexo/source/_posts目录下新建一个\"博客标题.md\"的文件  \n该文件内容格式如下  \n![](4.png)  \n正文内容使用markdown语法进行编写, 至于markdown怎么写, 可以参考[markdown官方文档](http://www.markdown.cn/)  \n8.博客写完之后, 保存文件, 然后依次执行如下命令  \nhexo g  (根据md文件创建静态网页文件, 注意每次更新博客内容都需要执行这个命令)  \nhexo s  (这一步是启动本地hexo服务器, 主要是为了本地预览博客效果, 浏览器打开localhost:4000预览效果)  \nhexo d (发布网页到github)  \n9.浏览器打开\"用户名.github.io\"即可看到你刚刚写的博客内容  \n![](5.png)  \n## 小结  \n总的来说, hexo+github搭建博客非常的简便, hexo内置的几种主题也都非常的简洁美观, 对于既想要有逼格的有自己的个人博客网站, 又不想太麻烦的人来说, 是个不错的选择\n\n","slug":"利用hexo和github搭建个人博客","published":1,"updated":"2021-11-23T02:11:53.000Z","_id":"ckwadg4nc000j73cf0ys10g58","layout":"post","photos":[],"link":"","content":"<h2 id=\"github建立个人网站\"><a href=\"#github建立个人网站\" class=\"headerlink\" title=\"github建立个人网站\"></a>github建立个人网站</h2><p>1.github的账号申请不再赘述<br>2.打开github.com, 点击new, 新建一个项目<br><img src=\"/2019/10/08/%E5%88%A9%E7%94%A8hexo%E5%92%8Cgithub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/1.png\"><br>3.输入项目名称, 注意项目名称的格式必须是”用户名.github.io”的格式<br><img src=\"/2019/10/08/%E5%88%A9%E7%94%A8hexo%E5%92%8Cgithub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/2.png\"><br>4.点击Create Repository完成项目新建<br>5.点击新建的项目, 进入settings, 往下找到GitHub Pages, 点击Choose a theme, 选择一个主题后, 点击select theme就完成了网站的发布<br><img src=\"/2019/10/08/%E5%88%A9%E7%94%A8hexo%E5%92%8Cgithub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/3.png\"><br>6.在浏览器输入”用户名.github.io”, 就可以看到github为你默认创建的首页  </p>\n<h2 id=\"hexo搭建博客\"><a href=\"#hexo搭建博客\" class=\"headerlink\" title=\"hexo搭建博客\"></a>hexo搭建博客</h2><p>1.在使用hexo搭建博客之前, 需要完成几个基础工作<br><a href=\"https://git-scm.com/book/zh/v2/%E8%B5%B7%E6%AD%A5-%E5%AE%89%E8%A3%85-Git\">安装git</a><br><a href=\"https://help.github.com/cn/articles/adding-a-new-ssh-key-to-your-github-account\">新增ssh key到github</a><br><a href=\"http://www.runoob.com/nodejs/nodejs-install-setup.html\">安装node.js</a><br>2.在本地拉取github上刚刚创建的网页项目(用户名.github.io)<br>3.在项目目录下新建一个文件夹, 可以随意命名, 比如hexo<br>4.进入hexo目录, windows下右键空白处, 点击Git Bash Here<br>5.依次执行命令<br>npm install hexo-cli -g  (安装hexo)<br>hexo init  (初始化网站)<br>npm install hexo-deployer-git –save  (安装hexo发布到git的插件)<br>中间遇到需要确认的信息, 直接按回车即可<br>6.打开hexo目录下的_config.yml文件, 有几个地方可以进行修改<br>title: 你的网站名字<br>author: 网站作者<br>theme: 去<a href=\"https://hexo.io/themes/\">hexo主题</a>可以选择, 注意要先将主题下载到hexo/themes下才可选择该主题<br>注意: <strong>必须要修改的部分是deploy, 改成如下格式</strong>  </p>\n<span id=\"more\"></span>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repo: git@github.com:yourname/yourname.github.io.git</span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure>\n<p>其他配置的详细说明在<a href=\"https://hexo.io/docs/configuration.html\">hexo配置文件说明</a><br>7.接下来就可以开始写博客了<br>使用命令hexo n “博客标题”, 即完成了一个新的博客文件的创建<br>该命令会在hexo/source/_posts目录下新建一个”博客标题.md”的文件<br>该文件内容格式如下<br><img src=\"/2019/10/08/%E5%88%A9%E7%94%A8hexo%E5%92%8Cgithub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/4.png\"><br>正文内容使用markdown语法进行编写, 至于markdown怎么写, 可以参考<a href=\"http://www.markdown.cn/\">markdown官方文档</a><br>8.博客写完之后, 保存文件, 然后依次执行如下命令<br>hexo g  (根据md文件创建静态网页文件, 注意每次更新博客内容都需要执行这个命令)<br>hexo s  (这一步是启动本地hexo服务器, 主要是为了本地预览博客效果, 浏览器打开localhost:4000预览效果)<br>hexo d (发布网页到github)<br>9.浏览器打开”用户名.github.io”即可看到你刚刚写的博客内容<br><img src=\"/2019/10/08/%E5%88%A9%E7%94%A8hexo%E5%92%8Cgithub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/5.png\">  </p>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><p>总的来说, hexo+github搭建博客非常的简便, hexo内置的几种主题也都非常的简洁美观, 对于既想要有逼格的有自己的个人博客网站, 又不想太麻烦的人来说, 是个不错的选择</p>\n","site":{"data":{}},"excerpt":"<h2 id=\"github建立个人网站\"><a href=\"#github建立个人网站\" class=\"headerlink\" title=\"github建立个人网站\"></a>github建立个人网站</h2><p>1.github的账号申请不再赘述<br>2.打开github.com, 点击new, 新建一个项目<br><img src=\"/2019/10/08/%E5%88%A9%E7%94%A8hexo%E5%92%8Cgithub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/1.png\"><br>3.输入项目名称, 注意项目名称的格式必须是”用户名.github.io”的格式<br><img src=\"/2019/10/08/%E5%88%A9%E7%94%A8hexo%E5%92%8Cgithub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/2.png\"><br>4.点击Create Repository完成项目新建<br>5.点击新建的项目, 进入settings, 往下找到GitHub Pages, 点击Choose a theme, 选择一个主题后, 点击select theme就完成了网站的发布<br><img src=\"/2019/10/08/%E5%88%A9%E7%94%A8hexo%E5%92%8Cgithub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/3.png\"><br>6.在浏览器输入”用户名.github.io”, 就可以看到github为你默认创建的首页  </p>\n<h2 id=\"hexo搭建博客\"><a href=\"#hexo搭建博客\" class=\"headerlink\" title=\"hexo搭建博客\"></a>hexo搭建博客</h2><p>1.在使用hexo搭建博客之前, 需要完成几个基础工作<br><a href=\"https://git-scm.com/book/zh/v2/%E8%B5%B7%E6%AD%A5-%E5%AE%89%E8%A3%85-Git\">安装git</a><br><a href=\"https://help.github.com/cn/articles/adding-a-new-ssh-key-to-your-github-account\">新增ssh key到github</a><br><a href=\"http://www.runoob.com/nodejs/nodejs-install-setup.html\">安装node.js</a><br>2.在本地拉取github上刚刚创建的网页项目(用户名.github.io)<br>3.在项目目录下新建一个文件夹, 可以随意命名, 比如hexo<br>4.进入hexo目录, windows下右键空白处, 点击Git Bash Here<br>5.依次执行命令<br>npm install hexo-cli -g  (安装hexo)<br>hexo init  (初始化网站)<br>npm install hexo-deployer-git –save  (安装hexo发布到git的插件)<br>中间遇到需要确认的信息, 直接按回车即可<br>6.打开hexo目录下的_config.yml文件, 有几个地方可以进行修改<br>title: 你的网站名字<br>author: 网站作者<br>theme: 去<a href=\"https://hexo.io/themes/\">hexo主题</a>可以选择, 注意要先将主题下载到hexo/themes下才可选择该主题<br>注意: <strong>必须要修改的部分是deploy, 改成如下格式</strong>  </p>","more":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repo: git@github.com:yourname/yourname.github.io.git</span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure>\n<p>其他配置的详细说明在<a href=\"https://hexo.io/docs/configuration.html\">hexo配置文件说明</a><br>7.接下来就可以开始写博客了<br>使用命令hexo n “博客标题”, 即完成了一个新的博客文件的创建<br>该命令会在hexo/source/_posts目录下新建一个”博客标题.md”的文件<br>该文件内容格式如下<br><img src=\"/2019/10/08/%E5%88%A9%E7%94%A8hexo%E5%92%8Cgithub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/4.png\"><br>正文内容使用markdown语法进行编写, 至于markdown怎么写, 可以参考<a href=\"http://www.markdown.cn/\">markdown官方文档</a><br>8.博客写完之后, 保存文件, 然后依次执行如下命令<br>hexo g  (根据md文件创建静态网页文件, 注意每次更新博客内容都需要执行这个命令)<br>hexo s  (这一步是启动本地hexo服务器, 主要是为了本地预览博客效果, 浏览器打开localhost:4000预览效果)<br>hexo d (发布网页到github)<br>9.浏览器打开”用户名.github.io”即可看到你刚刚写的博客内容<br><img src=\"/2019/10/08/%E5%88%A9%E7%94%A8hexo%E5%92%8Cgithub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/5.png\">  </p>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><p>总的来说, hexo+github搭建博客非常的简便, hexo内置的几种主题也都非常的简洁美观, 对于既想要有逼格的有自己的个人博客网站, 又不想太麻烦的人来说, 是个不错的选择</p>"},{"title":"官方文档解释MySQL最左匹配(最左前缀)原则","date":"2019-10-15T00:48:10.000Z","comments":1,"_content":"\n## 什么是最左匹配原则  \n关于最左匹配原则的解释, 网上找了很多, 但是我感觉都不是特别准确, 于是一怒之下\n直接找了官网的文档, 一下子就清晰了. 下面贴下官网的解释, 然后我自己翻译了一下.  \n\n### 来自官方文档的解释  \n[原文链接](https://dev.mysql.com/doc/refman/8.0/en/multiple-column-indexes.html)  \n> MySQL can create composite indexes (that is, indexes on multiple columns). \n An index may consist of up to 16 columns. For certain data types,\n you can index a prefix of the column (see \n [Section 8.3.5, “Column Indexes”](https://dev.mysql.com/doc/refman/8.0/en/column-indexes.html)).  \n\nMySQL可以创建联合索引(即, 多列的索引). 一个索引可以包含最多16列. 对于\n某些数据类型, 你可以索引列的前缀(这里说的是对于Blob和Text类型, 索引列的前几位就可以, \n如INDEX(blob_col(10)), 详见[索引文档](https://dev.mysql.com/doc/refman/8.0/en/column-indexes.html))  \n\n> MySQL can use multiple-column indexes for queries that test all the columns in the index, \nor queries that test just the first column, the first two columns, the first three columns, and so on. \nIf you specify the columns in the right order in the index definition, \na single composite index can speed up several kinds of queries on the same table.  \n\nMySQL的联合索引可以用于包含索引中所有列的查询条件的语句, 或者包含索引中的第一列的查询条件的语句, \n以及索引中前两列, 索引中的前三列, 以此类推. 如果你在索引定义中以正确的顺序指定列, \n那么联合索引就可以加速同一张表中的多个不同类型的查询.  \n\n> A multiple-column index can be considered a sorted array, the rows of \nwhich contain values that are created by concatenating the values of the indexed columns.  \n\n一个联合索引可以看作是一个有序队列, 里面有值的列是根据连接索引列的值创建的.(这句可能不准确)  \n\n> Note  \nAs an alternative to a composite index, you can introduce a column that \nis “hashed” based on information from other columns. If this column is \nshort, reasonably unique, and indexed, it might be faster than a “wide” \nindex on many columns. In MySQL, it is very easy to use this extra column:  \n\n提示  \n作为联合索引的一个替代项, 你可以采用一个Hash值列, 这个列的Hash值来自其他的列. \n如果该列简短, 合理唯一, 且被索引, 那该列就可能比一个很\"宽\"的由多个列构成的索引\n更快. MySQL里可以很容易的使用这种列:\n```sql\nSELECT * FROM tbl_name\n  WHERE hash_col=MD5(CONCAT(val1,val2))\n  AND col1=val1 AND col2=val2;\n```\n<!-- more -->\n> Suppose that a table has the following specification:\n\n假设有如下表定义:\n```sql\nCREATE TABLE test (\n    id         INT NOT NULL,\n    last_name  CHAR(30) NOT NULL,\n    first_name CHAR(30) NOT NULL,\n    PRIMARY KEY (id),\n    INDEX name (last_name,first_name)\n);\n```\n\n> The name index is an index over the last_name and first_name columns. \nThe index can be used for lookups in queries that specify values in a known \nrange for combinations of last_name and first_name values. It can also be used \nfor queries that specify just a last_name value because that column is a \nleftmost prefix of the index (as described later in this section). \nTherefore, the name index is used for lookups in the following queries:  \n\n索引name是一个包含了last_name和first_name列的索引. 该索引可以用于为last_name\n和first_name值的组合指定一个已知范围内的查询. 同样也可以用于只指定了last_name列值的查询, \n因为这个列是索引的一个最左前缀(就如下一节所说). 因此, 索引name可以用于下列的查询语句:  \n```sql\nSELECT * FROM test WHERE last_name='Jones';\n\nSELECT * FROM test\n  WHERE last_name='Jones' AND first_name='John';\n\nSELECT * FROM test\n  WHERE last_name='Jones'\n  AND (first_name='John' OR first_name='Jon');\n\nSELECT * FROM test\n  WHERE last_name='Jones'\n  AND first_name >='M' AND first_name < 'N';\n```\n\n> However, the name index is not used for lookups in the following queries:  \n\n然而, 索引name不能用于下列的查询:  \n```sql\nSELECT * FROM test WHERE first_name='John';\n\nSELECT * FROM test\n  WHERE last_name='Jones' OR first_name='John';\n```\n\n> Suppose that you issue the following SELECT statement:  \n\n假设存在以下select语句:  \n```sql\nSELECT * FROM tbl_name\n  WHERE col1=val1 AND col2=val2;\n```\n\n> If a multiple-column index exists on col1 and col2, the appropriate \nrows can be fetched directly. If separate single-column indexes exist \non col1 and col2, the optimizer attempts to use the Index Merge optimization \n(see Section 8.2.1.3, “Index Merge Optimization”), or attempts to find \nthe most restrictive index by deciding which index excludes more rows \nand using that index to fetch the rows.  \n\n如果一个联合索引存在于col1和col2, 相应的列会被直接抓取. 如果是分为单独的索引\n分别存在于col1和col2, 优化器会尝试利用索引联合优化(详见8.2.1.3, [\"索引联合\n优化\"](https://dev.mysql.com/doc/refman/8.0/en/index-merge-optimization.html)),\n或者尝试去寻找包含最多列, 最大限制的索引, 并利用该索引去抓取列.  \n\n> **If the table has a multiple-column index, any leftmost prefix of the \nindex can be used by the optimizer to look up rows. For example, \nif you have a three-column index on (col1, col2, col3), you have indexed \nsearch capabilities on (col1), (col1, col2), and (col1, col2, col3).**  \n\n**如果表拥有一个联合索引, 任何一个索引的最左前缀都会被优化器用于查找列. 比如, \n如果你创建了一个三列的联合索引包含(col1, col2, col3), 你的索引会生效于(col1),\n(col1, col2), 以及(col1, col2, col3)**  \n\n> **MySQL cannot use the index to perform lookups if the columns do not \nform a leftmost prefix of the index. Suppose that you have the SELECT \nstatements shown here:**  \n\n**如果查询的列不是索引的最左前缀, 那MySQL不会将索引用于执行查询. 假设你有\n下列查询语句:** \n```sql\nSELECT * FROM tbl_name WHERE col1=val1;\nSELECT * FROM tbl_name WHERE col1=val1 AND col2=val2;\n\nSELECT * FROM tbl_name WHERE col2=val2;\nSELECT * FROM tbl_name WHERE col2=val2 AND col3=val3;\n```\n\n> If an index exists on (col1, col2, col3), only the first two queries \nuse the index. The third and fourth queries do involve indexed columns, \nbut do not use an index to perform lookups because (col2) and (col2, col3) \nare not leftmost prefixes of (col1, col2, col3).  \n\n如果索引存在于(col1, col2, col3), 那只有头两个查询语句用到了索引. 第三个和\n第四个查询包含索引的列, 但是不会用索引去执行查询. 因为(col2)和(col2, col3)\n不是(col1, col2, col3)的最左前缀  \n\n## 官方文档小结  \n其实官方文档已经解释的非常详细了, 总结关于最左匹配的解释, 那其实只有这么\n几句话:  \n1.按照文档, 更准确的说法应该是最左前缀原则, 即如果你创建一个联合索引, 那\n这个索引的任何前缀都会用于查询, (col1, col2, col3)这个联合索引的所有前缀\n就是(col1), (col1, col2), (col1, col2, col3), 包含这些列的查询都会启用索\n引查询.   \n2.其他所有不在最左前缀里的列都不会启用索引, 即使包含了联合索引里的部分列\n也不行. 即上述中的(col2), (col3), (col2, col3) 都不会启用索引去查询.  \n**注意, (col1, col3)会启用(col1)的索引查询**  \n\n### 官方文档的其他细节  \n读一下官方文档, 还有很多别的发现, 跟最左前缀无关, 关于联合索引的别的细节, \n总结如下:  \n- 联合索引最多只能包含16列  \n- blob和text也能创建索引, 但是必须指定前面多少位  \n- 官方推荐了一种联合索引的替代方案: 可以额外创建一列, 其列值由联合索引包含\n的所有列值所生成的hash值来构成(个人认为似乎破坏了第一范式的设计规则) ","source":"_posts/官方文档解释MySQL最左匹配(最左前缀)原则.md","raw":"---\ntitle: 官方文档解释MySQL最左匹配(最左前缀)原则\ndate: 2019-10-15 08:48:10\ntags: \n- mysql\n- translate\ncomments: true\ncategories: \n- 学习\n- 数据库\n---\n\n## 什么是最左匹配原则  \n关于最左匹配原则的解释, 网上找了很多, 但是我感觉都不是特别准确, 于是一怒之下\n直接找了官网的文档, 一下子就清晰了. 下面贴下官网的解释, 然后我自己翻译了一下.  \n\n### 来自官方文档的解释  \n[原文链接](https://dev.mysql.com/doc/refman/8.0/en/multiple-column-indexes.html)  \n> MySQL can create composite indexes (that is, indexes on multiple columns). \n An index may consist of up to 16 columns. For certain data types,\n you can index a prefix of the column (see \n [Section 8.3.5, “Column Indexes”](https://dev.mysql.com/doc/refman/8.0/en/column-indexes.html)).  \n\nMySQL可以创建联合索引(即, 多列的索引). 一个索引可以包含最多16列. 对于\n某些数据类型, 你可以索引列的前缀(这里说的是对于Blob和Text类型, 索引列的前几位就可以, \n如INDEX(blob_col(10)), 详见[索引文档](https://dev.mysql.com/doc/refman/8.0/en/column-indexes.html))  \n\n> MySQL can use multiple-column indexes for queries that test all the columns in the index, \nor queries that test just the first column, the first two columns, the first three columns, and so on. \nIf you specify the columns in the right order in the index definition, \na single composite index can speed up several kinds of queries on the same table.  \n\nMySQL的联合索引可以用于包含索引中所有列的查询条件的语句, 或者包含索引中的第一列的查询条件的语句, \n以及索引中前两列, 索引中的前三列, 以此类推. 如果你在索引定义中以正确的顺序指定列, \n那么联合索引就可以加速同一张表中的多个不同类型的查询.  \n\n> A multiple-column index can be considered a sorted array, the rows of \nwhich contain values that are created by concatenating the values of the indexed columns.  \n\n一个联合索引可以看作是一个有序队列, 里面有值的列是根据连接索引列的值创建的.(这句可能不准确)  \n\n> Note  \nAs an alternative to a composite index, you can introduce a column that \nis “hashed” based on information from other columns. If this column is \nshort, reasonably unique, and indexed, it might be faster than a “wide” \nindex on many columns. In MySQL, it is very easy to use this extra column:  \n\n提示  \n作为联合索引的一个替代项, 你可以采用一个Hash值列, 这个列的Hash值来自其他的列. \n如果该列简短, 合理唯一, 且被索引, 那该列就可能比一个很\"宽\"的由多个列构成的索引\n更快. MySQL里可以很容易的使用这种列:\n```sql\nSELECT * FROM tbl_name\n  WHERE hash_col=MD5(CONCAT(val1,val2))\n  AND col1=val1 AND col2=val2;\n```\n<!-- more -->\n> Suppose that a table has the following specification:\n\n假设有如下表定义:\n```sql\nCREATE TABLE test (\n    id         INT NOT NULL,\n    last_name  CHAR(30) NOT NULL,\n    first_name CHAR(30) NOT NULL,\n    PRIMARY KEY (id),\n    INDEX name (last_name,first_name)\n);\n```\n\n> The name index is an index over the last_name and first_name columns. \nThe index can be used for lookups in queries that specify values in a known \nrange for combinations of last_name and first_name values. It can also be used \nfor queries that specify just a last_name value because that column is a \nleftmost prefix of the index (as described later in this section). \nTherefore, the name index is used for lookups in the following queries:  \n\n索引name是一个包含了last_name和first_name列的索引. 该索引可以用于为last_name\n和first_name值的组合指定一个已知范围内的查询. 同样也可以用于只指定了last_name列值的查询, \n因为这个列是索引的一个最左前缀(就如下一节所说). 因此, 索引name可以用于下列的查询语句:  \n```sql\nSELECT * FROM test WHERE last_name='Jones';\n\nSELECT * FROM test\n  WHERE last_name='Jones' AND first_name='John';\n\nSELECT * FROM test\n  WHERE last_name='Jones'\n  AND (first_name='John' OR first_name='Jon');\n\nSELECT * FROM test\n  WHERE last_name='Jones'\n  AND first_name >='M' AND first_name < 'N';\n```\n\n> However, the name index is not used for lookups in the following queries:  \n\n然而, 索引name不能用于下列的查询:  \n```sql\nSELECT * FROM test WHERE first_name='John';\n\nSELECT * FROM test\n  WHERE last_name='Jones' OR first_name='John';\n```\n\n> Suppose that you issue the following SELECT statement:  \n\n假设存在以下select语句:  \n```sql\nSELECT * FROM tbl_name\n  WHERE col1=val1 AND col2=val2;\n```\n\n> If a multiple-column index exists on col1 and col2, the appropriate \nrows can be fetched directly. If separate single-column indexes exist \non col1 and col2, the optimizer attempts to use the Index Merge optimization \n(see Section 8.2.1.3, “Index Merge Optimization”), or attempts to find \nthe most restrictive index by deciding which index excludes more rows \nand using that index to fetch the rows.  \n\n如果一个联合索引存在于col1和col2, 相应的列会被直接抓取. 如果是分为单独的索引\n分别存在于col1和col2, 优化器会尝试利用索引联合优化(详见8.2.1.3, [\"索引联合\n优化\"](https://dev.mysql.com/doc/refman/8.0/en/index-merge-optimization.html)),\n或者尝试去寻找包含最多列, 最大限制的索引, 并利用该索引去抓取列.  \n\n> **If the table has a multiple-column index, any leftmost prefix of the \nindex can be used by the optimizer to look up rows. For example, \nif you have a three-column index on (col1, col2, col3), you have indexed \nsearch capabilities on (col1), (col1, col2), and (col1, col2, col3).**  \n\n**如果表拥有一个联合索引, 任何一个索引的最左前缀都会被优化器用于查找列. 比如, \n如果你创建了一个三列的联合索引包含(col1, col2, col3), 你的索引会生效于(col1),\n(col1, col2), 以及(col1, col2, col3)**  \n\n> **MySQL cannot use the index to perform lookups if the columns do not \nform a leftmost prefix of the index. Suppose that you have the SELECT \nstatements shown here:**  \n\n**如果查询的列不是索引的最左前缀, 那MySQL不会将索引用于执行查询. 假设你有\n下列查询语句:** \n```sql\nSELECT * FROM tbl_name WHERE col1=val1;\nSELECT * FROM tbl_name WHERE col1=val1 AND col2=val2;\n\nSELECT * FROM tbl_name WHERE col2=val2;\nSELECT * FROM tbl_name WHERE col2=val2 AND col3=val3;\n```\n\n> If an index exists on (col1, col2, col3), only the first two queries \nuse the index. The third and fourth queries do involve indexed columns, \nbut do not use an index to perform lookups because (col2) and (col2, col3) \nare not leftmost prefixes of (col1, col2, col3).  \n\n如果索引存在于(col1, col2, col3), 那只有头两个查询语句用到了索引. 第三个和\n第四个查询包含索引的列, 但是不会用索引去执行查询. 因为(col2)和(col2, col3)\n不是(col1, col2, col3)的最左前缀  \n\n## 官方文档小结  \n其实官方文档已经解释的非常详细了, 总结关于最左匹配的解释, 那其实只有这么\n几句话:  \n1.按照文档, 更准确的说法应该是最左前缀原则, 即如果你创建一个联合索引, 那\n这个索引的任何前缀都会用于查询, (col1, col2, col3)这个联合索引的所有前缀\n就是(col1), (col1, col2), (col1, col2, col3), 包含这些列的查询都会启用索\n引查询.   \n2.其他所有不在最左前缀里的列都不会启用索引, 即使包含了联合索引里的部分列\n也不行. 即上述中的(col2), (col3), (col2, col3) 都不会启用索引去查询.  \n**注意, (col1, col3)会启用(col1)的索引查询**  \n\n### 官方文档的其他细节  \n读一下官方文档, 还有很多别的发现, 跟最左前缀无关, 关于联合索引的别的细节, \n总结如下:  \n- 联合索引最多只能包含16列  \n- blob和text也能创建索引, 但是必须指定前面多少位  \n- 官方推荐了一种联合索引的替代方案: 可以额外创建一列, 其列值由联合索引包含\n的所有列值所生成的hash值来构成(个人认为似乎破坏了第一范式的设计规则) ","slug":"官方文档解释MySQL最左匹配(最左前缀)原则","published":1,"updated":"2021-11-23T02:11:53.000Z","_id":"ckwadg4nd000l73cfdjlz9wty","layout":"post","photos":[],"link":"","content":"<h2 id=\"什么是最左匹配原则\"><a href=\"#什么是最左匹配原则\" class=\"headerlink\" title=\"什么是最左匹配原则\"></a>什么是最左匹配原则</h2><p>关于最左匹配原则的解释, 网上找了很多, 但是我感觉都不是特别准确, 于是一怒之下<br>直接找了官网的文档, 一下子就清晰了. 下面贴下官网的解释, 然后我自己翻译了一下.  </p>\n<h3 id=\"来自官方文档的解释\"><a href=\"#来自官方文档的解释\" class=\"headerlink\" title=\"来自官方文档的解释\"></a>来自官方文档的解释</h3><p><a href=\"https://dev.mysql.com/doc/refman/8.0/en/multiple-column-indexes.html\">原文链接</a>  </p>\n<blockquote>\n<p>MySQL can create composite indexes (that is, indexes on multiple columns).<br> An index may consist of up to 16 columns. For certain data types,<br> you can index a prefix of the column (see<br> <a href=\"https://dev.mysql.com/doc/refman/8.0/en/column-indexes.html\">Section 8.3.5, “Column Indexes”</a>).  </p>\n</blockquote>\n<p>MySQL可以创建联合索引(即, 多列的索引). 一个索引可以包含最多16列. 对于<br>某些数据类型, 你可以索引列的前缀(这里说的是对于Blob和Text类型, 索引列的前几位就可以,<br>如INDEX(blob_col(10)), 详见<a href=\"https://dev.mysql.com/doc/refman/8.0/en/column-indexes.html\">索引文档</a>)  </p>\n<blockquote>\n<p>MySQL can use multiple-column indexes for queries that test all the columns in the index,<br>or queries that test just the first column, the first two columns, the first three columns, and so on.<br>If you specify the columns in the right order in the index definition,<br>a single composite index can speed up several kinds of queries on the same table.  </p>\n</blockquote>\n<p>MySQL的联合索引可以用于包含索引中所有列的查询条件的语句, 或者包含索引中的第一列的查询条件的语句,<br>以及索引中前两列, 索引中的前三列, 以此类推. 如果你在索引定义中以正确的顺序指定列,<br>那么联合索引就可以加速同一张表中的多个不同类型的查询.  </p>\n<blockquote>\n<p>A multiple-column index can be considered a sorted array, the rows of<br>which contain values that are created by concatenating the values of the indexed columns.  </p>\n</blockquote>\n<p>一个联合索引可以看作是一个有序队列, 里面有值的列是根据连接索引列的值创建的.(这句可能不准确)  </p>\n<blockquote>\n<p>Note<br>As an alternative to a composite index, you can introduce a column that<br>is “hashed” based on information from other columns. If this column is<br>short, reasonably unique, and indexed, it might be faster than a “wide”<br>index on many columns. In MySQL, it is very easy to use this extra column:  </p>\n</blockquote>\n<p>提示<br>作为联合索引的一个替代项, 你可以采用一个Hash值列, 这个列的Hash值来自其他的列.<br>如果该列简短, 合理唯一, 且被索引, 那该列就可能比一个很”宽”的由多个列构成的索引<br>更快. MySQL里可以很容易的使用这种列:</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> tbl_name</span><br><span class=\"line\">  <span class=\"keyword\">WHERE</span> hash_col<span class=\"operator\">=</span>MD5(CONCAT(val1,val2))</span><br><span class=\"line\">  <span class=\"keyword\">AND</span> col1<span class=\"operator\">=</span>val1 <span class=\"keyword\">AND</span> col2<span class=\"operator\">=</span>val2;</span><br></pre></td></tr></table></figure>\n<span id=\"more\"></span>\n<blockquote>\n<p>Suppose that a table has the following specification:</p>\n</blockquote>\n<p>假设有如下表定义:</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> test (</span><br><span class=\"line\">    id         <span class=\"type\">INT</span> <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">    last_name  <span class=\"type\">CHAR</span>(<span class=\"number\">30</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">    first_name <span class=\"type\">CHAR</span>(<span class=\"number\">30</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">    <span class=\"keyword\">PRIMARY</span> KEY (id),</span><br><span class=\"line\">    INDEX name (last_name,first_name)</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>The name index is an index over the last_name and first_name columns.<br>The index can be used for lookups in queries that specify values in a known<br>range for combinations of last_name and first_name values. It can also be used<br>for queries that specify just a last_name value because that column is a<br>leftmost prefix of the index (as described later in this section).<br>Therefore, the name index is used for lookups in the following queries:  </p>\n</blockquote>\n<p>索引name是一个包含了last_name和first_name列的索引. 该索引可以用于为last_name<br>和first_name值的组合指定一个已知范围内的查询. 同样也可以用于只指定了last_name列值的查询,<br>因为这个列是索引的一个最左前缀(就如下一节所说). 因此, 索引name可以用于下列的查询语句:  </p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> test <span class=\"keyword\">WHERE</span> last_name<span class=\"operator\">=</span><span class=\"string\">&#x27;Jones&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> test</span><br><span class=\"line\">  <span class=\"keyword\">WHERE</span> last_name<span class=\"operator\">=</span><span class=\"string\">&#x27;Jones&#x27;</span> <span class=\"keyword\">AND</span> first_name<span class=\"operator\">=</span><span class=\"string\">&#x27;John&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> test</span><br><span class=\"line\">  <span class=\"keyword\">WHERE</span> last_name<span class=\"operator\">=</span><span class=\"string\">&#x27;Jones&#x27;</span></span><br><span class=\"line\">  <span class=\"keyword\">AND</span> (first_name<span class=\"operator\">=</span><span class=\"string\">&#x27;John&#x27;</span> <span class=\"keyword\">OR</span> first_name<span class=\"operator\">=</span><span class=\"string\">&#x27;Jon&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> test</span><br><span class=\"line\">  <span class=\"keyword\">WHERE</span> last_name<span class=\"operator\">=</span><span class=\"string\">&#x27;Jones&#x27;</span></span><br><span class=\"line\">  <span class=\"keyword\">AND</span> first_name <span class=\"operator\">&gt;=</span><span class=\"string\">&#x27;M&#x27;</span> <span class=\"keyword\">AND</span> first_name <span class=\"operator\">&lt;</span> <span class=\"string\">&#x27;N&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>However, the name index is not used for lookups in the following queries:  </p>\n</blockquote>\n<p>然而, 索引name不能用于下列的查询:  </p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> test <span class=\"keyword\">WHERE</span> first_name<span class=\"operator\">=</span><span class=\"string\">&#x27;John&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> test</span><br><span class=\"line\">  <span class=\"keyword\">WHERE</span> last_name<span class=\"operator\">=</span><span class=\"string\">&#x27;Jones&#x27;</span> <span class=\"keyword\">OR</span> first_name<span class=\"operator\">=</span><span class=\"string\">&#x27;John&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>Suppose that you issue the following SELECT statement:  </p>\n</blockquote>\n<p>假设存在以下select语句:  </p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> tbl_name</span><br><span class=\"line\">  <span class=\"keyword\">WHERE</span> col1<span class=\"operator\">=</span>val1 <span class=\"keyword\">AND</span> col2<span class=\"operator\">=</span>val2;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>If a multiple-column index exists on col1 and col2, the appropriate<br>rows can be fetched directly. If separate single-column indexes exist<br>on col1 and col2, the optimizer attempts to use the Index Merge optimization<br>(see Section 8.2.1.3, “Index Merge Optimization”), or attempts to find<br>the most restrictive index by deciding which index excludes more rows<br>and using that index to fetch the rows.  </p>\n</blockquote>\n<p>如果一个联合索引存在于col1和col2, 相应的列会被直接抓取. 如果是分为单独的索引<br>分别存在于col1和col2, 优化器会尝试利用索引联合优化(详见8.2.1.3, <a href=\"https://dev.mysql.com/doc/refman/8.0/en/index-merge-optimization.html\">“索引联合<br>优化”</a>),<br>或者尝试去寻找包含最多列, 最大限制的索引, 并利用该索引去抓取列.  </p>\n<blockquote>\n<p><strong>If the table has a multiple-column index, any leftmost prefix of the<br>index can be used by the optimizer to look up rows. For example,<br>if you have a three-column index on (col1, col2, col3), you have indexed<br>search capabilities on (col1), (col1, col2), and (col1, col2, col3).</strong>  </p>\n</blockquote>\n<p><strong>如果表拥有一个联合索引, 任何一个索引的最左前缀都会被优化器用于查找列. 比如,<br>如果你创建了一个三列的联合索引包含(col1, col2, col3), 你的索引会生效于(col1),<br>(col1, col2), 以及(col1, col2, col3)</strong>  </p>\n<blockquote>\n<p><strong>MySQL cannot use the index to perform lookups if the columns do not<br>form a leftmost prefix of the index. Suppose that you have the SELECT<br>statements shown here:</strong>  </p>\n</blockquote>\n<p><strong>如果查询的列不是索引的最左前缀, 那MySQL不会将索引用于执行查询. 假设你有<br>下列查询语句:</strong> </p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> tbl_name <span class=\"keyword\">WHERE</span> col1<span class=\"operator\">=</span>val1;</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> tbl_name <span class=\"keyword\">WHERE</span> col1<span class=\"operator\">=</span>val1 <span class=\"keyword\">AND</span> col2<span class=\"operator\">=</span>val2;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> tbl_name <span class=\"keyword\">WHERE</span> col2<span class=\"operator\">=</span>val2;</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> tbl_name <span class=\"keyword\">WHERE</span> col2<span class=\"operator\">=</span>val2 <span class=\"keyword\">AND</span> col3<span class=\"operator\">=</span>val3;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>If an index exists on (col1, col2, col3), only the first two queries<br>use the index. The third and fourth queries do involve indexed columns,<br>but do not use an index to perform lookups because (col2) and (col2, col3)<br>are not leftmost prefixes of (col1, col2, col3).  </p>\n</blockquote>\n<p>如果索引存在于(col1, col2, col3), 那只有头两个查询语句用到了索引. 第三个和<br>第四个查询包含索引的列, 但是不会用索引去执行查询. 因为(col2)和(col2, col3)<br>不是(col1, col2, col3)的最左前缀  </p>\n<h2 id=\"官方文档小结\"><a href=\"#官方文档小结\" class=\"headerlink\" title=\"官方文档小结\"></a>官方文档小结</h2><p>其实官方文档已经解释的非常详细了, 总结关于最左匹配的解释, 那其实只有这么<br>几句话:<br>1.按照文档, 更准确的说法应该是最左前缀原则, 即如果你创建一个联合索引, 那<br>这个索引的任何前缀都会用于查询, (col1, col2, col3)这个联合索引的所有前缀<br>就是(col1), (col1, col2), (col1, col2, col3), 包含这些列的查询都会启用索<br>引查询.<br>2.其他所有不在最左前缀里的列都不会启用索引, 即使包含了联合索引里的部分列<br>也不行. 即上述中的(col2), (col3), (col2, col3) 都不会启用索引去查询.<br><strong>注意, (col1, col3)会启用(col1)的索引查询</strong>  </p>\n<h3 id=\"官方文档的其他细节\"><a href=\"#官方文档的其他细节\" class=\"headerlink\" title=\"官方文档的其他细节\"></a>官方文档的其他细节</h3><p>读一下官方文档, 还有很多别的发现, 跟最左前缀无关, 关于联合索引的别的细节,<br>总结如下:  </p>\n<ul>\n<li>联合索引最多只能包含16列  </li>\n<li>blob和text也能创建索引, 但是必须指定前面多少位  </li>\n<li>官方推荐了一种联合索引的替代方案: 可以额外创建一列, 其列值由联合索引包含<br>的所有列值所生成的hash值来构成(个人认为似乎破坏了第一范式的设计规则) </li>\n</ul>\n","site":{"data":{}},"excerpt":"<h2 id=\"什么是最左匹配原则\"><a href=\"#什么是最左匹配原则\" class=\"headerlink\" title=\"什么是最左匹配原则\"></a>什么是最左匹配原则</h2><p>关于最左匹配原则的解释, 网上找了很多, 但是我感觉都不是特别准确, 于是一怒之下<br>直接找了官网的文档, 一下子就清晰了. 下面贴下官网的解释, 然后我自己翻译了一下.  </p>\n<h3 id=\"来自官方文档的解释\"><a href=\"#来自官方文档的解释\" class=\"headerlink\" title=\"来自官方文档的解释\"></a>来自官方文档的解释</h3><p><a href=\"https://dev.mysql.com/doc/refman/8.0/en/multiple-column-indexes.html\">原文链接</a>  </p>\n<blockquote>\n<p>MySQL can create composite indexes (that is, indexes on multiple columns).<br> An index may consist of up to 16 columns. For certain data types,<br> you can index a prefix of the column (see<br> <a href=\"https://dev.mysql.com/doc/refman/8.0/en/column-indexes.html\">Section 8.3.5, “Column Indexes”</a>).  </p>\n</blockquote>\n<p>MySQL可以创建联合索引(即, 多列的索引). 一个索引可以包含最多16列. 对于<br>某些数据类型, 你可以索引列的前缀(这里说的是对于Blob和Text类型, 索引列的前几位就可以,<br>如INDEX(blob_col(10)), 详见<a href=\"https://dev.mysql.com/doc/refman/8.0/en/column-indexes.html\">索引文档</a>)  </p>\n<blockquote>\n<p>MySQL can use multiple-column indexes for queries that test all the columns in the index,<br>or queries that test just the first column, the first two columns, the first three columns, and so on.<br>If you specify the columns in the right order in the index definition,<br>a single composite index can speed up several kinds of queries on the same table.  </p>\n</blockquote>\n<p>MySQL的联合索引可以用于包含索引中所有列的查询条件的语句, 或者包含索引中的第一列的查询条件的语句,<br>以及索引中前两列, 索引中的前三列, 以此类推. 如果你在索引定义中以正确的顺序指定列,<br>那么联合索引就可以加速同一张表中的多个不同类型的查询.  </p>\n<blockquote>\n<p>A multiple-column index can be considered a sorted array, the rows of<br>which contain values that are created by concatenating the values of the indexed columns.  </p>\n</blockquote>\n<p>一个联合索引可以看作是一个有序队列, 里面有值的列是根据连接索引列的值创建的.(这句可能不准确)  </p>\n<blockquote>\n<p>Note<br>As an alternative to a composite index, you can introduce a column that<br>is “hashed” based on information from other columns. If this column is<br>short, reasonably unique, and indexed, it might be faster than a “wide”<br>index on many columns. In MySQL, it is very easy to use this extra column:  </p>\n</blockquote>\n<p>提示<br>作为联合索引的一个替代项, 你可以采用一个Hash值列, 这个列的Hash值来自其他的列.<br>如果该列简短, 合理唯一, 且被索引, 那该列就可能比一个很”宽”的由多个列构成的索引<br>更快. MySQL里可以很容易的使用这种列:</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> tbl_name</span><br><span class=\"line\">  <span class=\"keyword\">WHERE</span> hash_col<span class=\"operator\">=</span>MD5(CONCAT(val1,val2))</span><br><span class=\"line\">  <span class=\"keyword\">AND</span> col1<span class=\"operator\">=</span>val1 <span class=\"keyword\">AND</span> col2<span class=\"operator\">=</span>val2;</span><br></pre></td></tr></table></figure>","more":"<blockquote>\n<p>Suppose that a table has the following specification:</p>\n</blockquote>\n<p>假设有如下表定义:</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> test (</span><br><span class=\"line\">    id         <span class=\"type\">INT</span> <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">    last_name  <span class=\"type\">CHAR</span>(<span class=\"number\">30</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">    first_name <span class=\"type\">CHAR</span>(<span class=\"number\">30</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">    <span class=\"keyword\">PRIMARY</span> KEY (id),</span><br><span class=\"line\">    INDEX name (last_name,first_name)</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>The name index is an index over the last_name and first_name columns.<br>The index can be used for lookups in queries that specify values in a known<br>range for combinations of last_name and first_name values. It can also be used<br>for queries that specify just a last_name value because that column is a<br>leftmost prefix of the index (as described later in this section).<br>Therefore, the name index is used for lookups in the following queries:  </p>\n</blockquote>\n<p>索引name是一个包含了last_name和first_name列的索引. 该索引可以用于为last_name<br>和first_name值的组合指定一个已知范围内的查询. 同样也可以用于只指定了last_name列值的查询,<br>因为这个列是索引的一个最左前缀(就如下一节所说). 因此, 索引name可以用于下列的查询语句:  </p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> test <span class=\"keyword\">WHERE</span> last_name<span class=\"operator\">=</span><span class=\"string\">&#x27;Jones&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> test</span><br><span class=\"line\">  <span class=\"keyword\">WHERE</span> last_name<span class=\"operator\">=</span><span class=\"string\">&#x27;Jones&#x27;</span> <span class=\"keyword\">AND</span> first_name<span class=\"operator\">=</span><span class=\"string\">&#x27;John&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> test</span><br><span class=\"line\">  <span class=\"keyword\">WHERE</span> last_name<span class=\"operator\">=</span><span class=\"string\">&#x27;Jones&#x27;</span></span><br><span class=\"line\">  <span class=\"keyword\">AND</span> (first_name<span class=\"operator\">=</span><span class=\"string\">&#x27;John&#x27;</span> <span class=\"keyword\">OR</span> first_name<span class=\"operator\">=</span><span class=\"string\">&#x27;Jon&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> test</span><br><span class=\"line\">  <span class=\"keyword\">WHERE</span> last_name<span class=\"operator\">=</span><span class=\"string\">&#x27;Jones&#x27;</span></span><br><span class=\"line\">  <span class=\"keyword\">AND</span> first_name <span class=\"operator\">&gt;=</span><span class=\"string\">&#x27;M&#x27;</span> <span class=\"keyword\">AND</span> first_name <span class=\"operator\">&lt;</span> <span class=\"string\">&#x27;N&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>However, the name index is not used for lookups in the following queries:  </p>\n</blockquote>\n<p>然而, 索引name不能用于下列的查询:  </p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> test <span class=\"keyword\">WHERE</span> first_name<span class=\"operator\">=</span><span class=\"string\">&#x27;John&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> test</span><br><span class=\"line\">  <span class=\"keyword\">WHERE</span> last_name<span class=\"operator\">=</span><span class=\"string\">&#x27;Jones&#x27;</span> <span class=\"keyword\">OR</span> first_name<span class=\"operator\">=</span><span class=\"string\">&#x27;John&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>Suppose that you issue the following SELECT statement:  </p>\n</blockquote>\n<p>假设存在以下select语句:  </p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> tbl_name</span><br><span class=\"line\">  <span class=\"keyword\">WHERE</span> col1<span class=\"operator\">=</span>val1 <span class=\"keyword\">AND</span> col2<span class=\"operator\">=</span>val2;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>If a multiple-column index exists on col1 and col2, the appropriate<br>rows can be fetched directly. If separate single-column indexes exist<br>on col1 and col2, the optimizer attempts to use the Index Merge optimization<br>(see Section 8.2.1.3, “Index Merge Optimization”), or attempts to find<br>the most restrictive index by deciding which index excludes more rows<br>and using that index to fetch the rows.  </p>\n</blockquote>\n<p>如果一个联合索引存在于col1和col2, 相应的列会被直接抓取. 如果是分为单独的索引<br>分别存在于col1和col2, 优化器会尝试利用索引联合优化(详见8.2.1.3, <a href=\"https://dev.mysql.com/doc/refman/8.0/en/index-merge-optimization.html\">“索引联合<br>优化”</a>),<br>或者尝试去寻找包含最多列, 最大限制的索引, 并利用该索引去抓取列.  </p>\n<blockquote>\n<p><strong>If the table has a multiple-column index, any leftmost prefix of the<br>index can be used by the optimizer to look up rows. For example,<br>if you have a three-column index on (col1, col2, col3), you have indexed<br>search capabilities on (col1), (col1, col2), and (col1, col2, col3).</strong>  </p>\n</blockquote>\n<p><strong>如果表拥有一个联合索引, 任何一个索引的最左前缀都会被优化器用于查找列. 比如,<br>如果你创建了一个三列的联合索引包含(col1, col2, col3), 你的索引会生效于(col1),<br>(col1, col2), 以及(col1, col2, col3)</strong>  </p>\n<blockquote>\n<p><strong>MySQL cannot use the index to perform lookups if the columns do not<br>form a leftmost prefix of the index. Suppose that you have the SELECT<br>statements shown here:</strong>  </p>\n</blockquote>\n<p><strong>如果查询的列不是索引的最左前缀, 那MySQL不会将索引用于执行查询. 假设你有<br>下列查询语句:</strong> </p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> tbl_name <span class=\"keyword\">WHERE</span> col1<span class=\"operator\">=</span>val1;</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> tbl_name <span class=\"keyword\">WHERE</span> col1<span class=\"operator\">=</span>val1 <span class=\"keyword\">AND</span> col2<span class=\"operator\">=</span>val2;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> tbl_name <span class=\"keyword\">WHERE</span> col2<span class=\"operator\">=</span>val2;</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> tbl_name <span class=\"keyword\">WHERE</span> col2<span class=\"operator\">=</span>val2 <span class=\"keyword\">AND</span> col3<span class=\"operator\">=</span>val3;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>If an index exists on (col1, col2, col3), only the first two queries<br>use the index. The third and fourth queries do involve indexed columns,<br>but do not use an index to perform lookups because (col2) and (col2, col3)<br>are not leftmost prefixes of (col1, col2, col3).  </p>\n</blockquote>\n<p>如果索引存在于(col1, col2, col3), 那只有头两个查询语句用到了索引. 第三个和<br>第四个查询包含索引的列, 但是不会用索引去执行查询. 因为(col2)和(col2, col3)<br>不是(col1, col2, col3)的最左前缀  </p>\n<h2 id=\"官方文档小结\"><a href=\"#官方文档小结\" class=\"headerlink\" title=\"官方文档小结\"></a>官方文档小结</h2><p>其实官方文档已经解释的非常详细了, 总结关于最左匹配的解释, 那其实只有这么<br>几句话:<br>1.按照文档, 更准确的说法应该是最左前缀原则, 即如果你创建一个联合索引, 那<br>这个索引的任何前缀都会用于查询, (col1, col2, col3)这个联合索引的所有前缀<br>就是(col1), (col1, col2), (col1, col2, col3), 包含这些列的查询都会启用索<br>引查询.<br>2.其他所有不在最左前缀里的列都不会启用索引, 即使包含了联合索引里的部分列<br>也不行. 即上述中的(col2), (col3), (col2, col3) 都不会启用索引去查询.<br><strong>注意, (col1, col3)会启用(col1)的索引查询</strong>  </p>\n<h3 id=\"官方文档的其他细节\"><a href=\"#官方文档的其他细节\" class=\"headerlink\" title=\"官方文档的其他细节\"></a>官方文档的其他细节</h3><p>读一下官方文档, 还有很多别的发现, 跟最左前缀无关, 关于联合索引的别的细节,<br>总结如下:  </p>\n<ul>\n<li>联合索引最多只能包含16列  </li>\n<li>blob和text也能创建索引, 但是必须指定前面多少位  </li>\n<li>官方推荐了一种联合索引的替代方案: 可以额外创建一列, 其列值由联合索引包含<br>的所有列值所生成的hash值来构成(个人认为似乎破坏了第一范式的设计规则) </li>\n</ul>"},{"title":"搭建新项目的框架","date":"2019-10-22T01:37:48.000Z","comments":1,"_content":"\n- [x] 基础架构：Spring Boot / Spring Cloud\n- [x] 数据库：MySQL / Oracle\n- [x] 数据库层连接：Hibernate / Mybatis / JPA\n- [x] 分页\n- [x] 日志：Log4j / Slf4J\n- [x] 数据库连接池：Druid\n- [x] 消息中间件：Dubbo / Grpc\n- [ ] 缓存：Redis\n- [x] 权限：Spring Security / Shiro\n- [x] 包管理仓库：Maven / Gradle\n- [ ] 统一日志记录-数据库层面\n- [x] JSON处理：FastJSON\n- [x] 统一返回结果处理\n- [x] Zookeeper\n- [ ] MQ组件：RabbitMQ / RocketMQ / Kafka\n- [x] 统一Exception处理\n- [x] 公用Util类\n- [x] 测试用例：JUnit\n- [ ] 集群\n\n\n\n\n\n","source":"_posts/搭建新项目的框架.md","raw":"---\ntitle: 搭建新项目的框架\ndate: 2019-10-22 09:37:48\ncomments: true\ncategories: \n- 学习\n- 搭建相关\n---\n\n- [x] 基础架构：Spring Boot / Spring Cloud\n- [x] 数据库：MySQL / Oracle\n- [x] 数据库层连接：Hibernate / Mybatis / JPA\n- [x] 分页\n- [x] 日志：Log4j / Slf4J\n- [x] 数据库连接池：Druid\n- [x] 消息中间件：Dubbo / Grpc\n- [ ] 缓存：Redis\n- [x] 权限：Spring Security / Shiro\n- [x] 包管理仓库：Maven / Gradle\n- [ ] 统一日志记录-数据库层面\n- [x] JSON处理：FastJSON\n- [x] 统一返回结果处理\n- [x] Zookeeper\n- [ ] MQ组件：RabbitMQ / RocketMQ / Kafka\n- [x] 统一Exception处理\n- [x] 公用Util类\n- [x] 测试用例：JUnit\n- [ ] 集群\n\n\n\n\n\n","slug":"搭建新项目的框架","published":1,"updated":"2021-11-19T07:05:32.000Z","layout":"post","photos":[],"link":"","_id":"ckwadg4ne000o73cfgri1f0tc","content":"<ul>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 基础架构：Spring Boot / Spring Cloud</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 数据库：MySQL / Oracle</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 数据库层连接：Hibernate / Mybatis / JPA</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 分页</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 日志：Log4j / Slf4J</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 数据库连接池：Druid</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 消息中间件：Dubbo / Grpc</li>\n<li><input disabled=\"\" type=\"checkbox\"> 缓存：Redis</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 权限：Spring Security / Shiro</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 包管理仓库：Maven / Gradle</li>\n<li><input disabled=\"\" type=\"checkbox\"> 统一日志记录-数据库层面</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> JSON处理：FastJSON</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 统一返回结果处理</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> Zookeeper</li>\n<li><input disabled=\"\" type=\"checkbox\"> MQ组件：RabbitMQ / RocketMQ / Kafka</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 统一Exception处理</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 公用Util类</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 测试用例：JUnit</li>\n<li><input disabled=\"\" type=\"checkbox\"> 集群</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 基础架构：Spring Boot / Spring Cloud</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 数据库：MySQL / Oracle</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 数据库层连接：Hibernate / Mybatis / JPA</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 分页</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 日志：Log4j / Slf4J</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 数据库连接池：Druid</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 消息中间件：Dubbo / Grpc</li>\n<li><input disabled=\"\" type=\"checkbox\"> 缓存：Redis</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 权限：Spring Security / Shiro</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 包管理仓库：Maven / Gradle</li>\n<li><input disabled=\"\" type=\"checkbox\"> 统一日志记录-数据库层面</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> JSON处理：FastJSON</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 统一返回结果处理</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> Zookeeper</li>\n<li><input disabled=\"\" type=\"checkbox\"> MQ组件：RabbitMQ / RocketMQ / Kafka</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 统一Exception处理</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 公用Util类</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 测试用例：JUnit</li>\n<li><input disabled=\"\" type=\"checkbox\"> 集群</li>\n</ul>\n"},{"title":"新闻翻译.1","date":"2019-10-10T01:09:54.000Z","comments":0,"_content":"[原文链接](https://www.latimes.com/politics/story/2019-10-09/trumps-legal-strategy-against-impeachment-shaky-constitutional-grounds-scholars-say)  \n## Trump’s legal strategy against impeachment is on shaky constitutional grounds, scholars say\n### 学者认为川普反对弹劾的律法政策是基于站不住脚的宪法依据  \n\n1.Washington —  Constitutional lawyers said Wednesday that President Trump’s \nvow not to cooperate with the impeachment inquiry is both unprecedented and \nunlikely to spare him from being formally charged by the House. \nIn fact, they say, it may only increase the chances that he will be impeached.  \n华盛顿报道 - 宪法律师周三声明, 川普总统发誓不会与弹劾调查进行合作的言论是\n前所未有的, 而且也很可能使他面临众议院的正式指控. 并且, 他们还说到, 这有可能\n增加川普被弹劾的可能.\n\n2.The Constitution says the “House of Representatives shall have the sole \npower of impeachment,” and it does not give the president a specific role \nin the process. A president is in some sense like an ordinary defendant \nwho may be subject to a criminal investigation and an indictment, \nall without his participation or involvement, scholars say.  \n美国宪法里写到, \"众议院拥有弹劾的唯一权力\", 而且没有赋予总统在此过程中的任何\n特殊角色. 学者认为, 总统在整个过程中都不会参与到弹劾中, 某种意义上和普通被告一样, \n可能面临刑事调查和指控.  \n\n3.“The president’s cooperation is not required or needed,” said University of \nNorth Carolina law professor Michael J. Gerhardt, an expert on impeachment. \nAnd “the House may make that defiance grounds for impeachment,” he added, \nnoting that in 1974, a House committee approved articles of impeachment against \nPresident Nixon based in part on his refusal to comply with congressional subpoenas.  \n北卡罗莱纳大学的法律学教授, 同时也是研究弹劾的专家, Michael J.Gerhardt认为, \n\"总统的配合并不是必需的, 众议院可以把这作为违抗理由去弹劾\". 他还补充到, 1974年,\n众议院委员会通过了一项弹劾决议, 其部分原因就是尼克松总统拒绝了来自国会的传票. \n<!-- more -->\n4.Though both Nixon and President Clinton tried behind the scenes to slow \nor stop impeachment proceedings, they also attempted to cooperate at times, \nor at least appear to, out of respect for the process and fear they might \nlook like they were hiding something.  \n尽管尼克松和克林顿总统都试图在幕后减缓或者阻止弹劾的进程, 但至少他们在当时都是\n试图配合弹劾工作的, 至少看上去是. 对于弹劾的不尊重和害怕会让他们看起来隐藏了\n一些事.\n\n5.“There is no precedent for the president doing what President Trump is \ndoing here: saying I will flatly refuse to cooperate and ordering all \nemployees of the executive branch to refuse to cooperate as well,” \nsaid professor Frank O. Bowman, who teaches impeachment law at the \nUniversity of Missouri and Georgetown.  \n来自密苏里和乔治敦大学, 教弹劾法律的教授Frank O.Bowman说:\"之前从来没有\n一份先例像川普总统这样, 说自己断然拒绝合作, 而且还命令所有的行政雇员也拒绝合作.\"\n\n6.In Tuesday’s eight-page letter to House Democrats, White House Counsel \nPat Cipillone pronounced Trump innocent of wrongdoing and the inquiry \n“unconstitutional.”  \n周四一份来自白宫的法律顾问Pat Cipillone的八页信件发往了众议院的民主党派, \n他宣称川普的错误做法是无辜的, 而且弹劾调查也是违宪的.\n\n7.He said Trump’s July 25 phone call asking the new president of Ukraine \nto do him “a favor” and investigate former Vice President Joe Biden and \nhis son Hunter was “completely appropriate. The president did nothing wrong, \nand there is no legitimate basis for an impeachment inquiry.”  \n他说, 川普在7月25号致电给乌克兰新总统, 要求他帮助和调查前副总统Joe Biden以及\n他的儿子Hunter是\"完全合理的. 总统没有做错什么, 而且也没有一个合法的法律依据\n可以支撑弹劾的调查\"\n\n8.Legal experts, however, say Trump’s actions were exactly the kinds of \nthings that framers were thinking of when they included an impeachment \nprovision in the Constitution. Trump has acknowledged that even as he asked \nUkraine to investigate one of his political opponents, he had ordered \nthat nearly $400 million in aid to Ukraine be withheld.  \n然而法律专家认为, 川普的行为恰好就是制宪者将弹劾条款加入宪法时所考虑过的.\n川普认识到即使他要求乌克兰去调查他其中的一个政治对手, 他下令资助给乌克兰的\n将近40亿美元的援助也将被扣留.\n\n9.The White House letter suggests that the inquiry is invalid because \nthere was no formal House vote to launch it, and that Trump and Republicans \nhave so far not been given the right to see evidence and call witnesses. \nBased on this conclusion, he said, “President Trump and his administration \ncannot participate in your partisan and unconstitutional inquiry.”  \n白宫的信件认为调查是无效的, 因为没有任何正式的众议院决议去启动这项调查, 而且\n川普和共和党至今甚至没有权力见到证据和传唤目击者. 基于这些结论, 他说: \"川普\n总统和他的管理团队不会参与到你们的党派和违宪的调查中去\"\n\n10.Lawyers took to social media to express surprise and disdain, noting \nthat no such rights or requirements exist in the Constitution.  \n律师在社交媒体上表达了他的惊讶和蔑视, 指出在宪法中不存在这样的权力和请求.\n\n11.“This letter is bananas. A barely-lawyered temper tantrum,” tweeted \nGregg Nunziata, a former counsel for Senate Republicans.  \n前任的共和党法律顾问, Gregg Nunziata发推说道:\"这封信就是胡闹, 一份没有法律\n常识的脾气的宣泄\"\n\n12.University of Texas law professor Steve Vladeck said it was remarkable \nfor the top White House lawyer to say in writing that it “is completely \nappropriate for the president of the United States to actively solicit \nforeign intervention in U.S. presidential elections. Let’s not lose \nsight of just how insane that is.”  \n德克萨斯大学的法律教授Steve Vladeck表示, 对于一个顶级的白宫律师, 以书面形式\n说\"美国总统积极的寻求外国介入到美国的总统选择中是完全合理的. 让我们不要忘记\n这是多么疯狂\", 真是太出色了.(这段真是不知道怎么翻译...)\n\n13.Lisa Kern Griffin, a Duke law professor, described the letter as a \n“political stunt that misinterprets the Constitution, ignores relevant \nprecedents and defies common sense.” She said the letter sets the stage \nfor a constitutional crisis.  \n杜克的法律教授, Lisa Kern Griffin形容这个信是\"曲解宪法的政治手段, 忽略了\n相关的先例, 否决了共识\". 她说这封信为宪法的危机奠定了一个基础.\n\n14.“Of course, the House can proceed with impeachment based on the testimony \nand evidence it can access, but it strikes me as dangerous for the entire \nexecutive branch to defy congressional oversight.”  \n\"理所当然的, 众议院可以继续根据已有的证词和证据进行弹劾, 但是令我感到危险的是\n整个行政部门都违抗国会的监督\"\n\n\n15.Neal K. Katyal, who was acting solicitor general during the Obama administration, \nnoted that Trump’s lawyers have insisted that he is immune from criminal charges, \nshielded from congressional and state legal demands, including for his tax returns, \nand now shielded from an impeachment inquiry.  \n在奥巴马政府期间担任代理司法部副部长的Neal K. Katyal指出, 川普的律师坚持他(川普)\n是免于刑事指控的, 受国会和国家法律要求的保护, 包括他的报税表, 所以现在也保护他免\n于收到弹劾的调查.\n\n16.Gerhardt said the White House letter “shows nothing but contempt for the \nlaw and the Constitution. Its principal argument is that the president is \nabove the law. In fact, he is not. Impeachment is one of the unique constitutional \nprocesses for holding the president accountable for abusing his power.”  \nGerhardt认为白宫信件\"展示了对于法律和宪法的蔑视. 这里面的主要内容就是总统\n凌驾于法律之上. 但事实上, 他是错的. 弹劾是宪法中用于控制总统滥用职权的独特\n法律条文之一\"\n\n17.It’s not clear how or whether House Democrats will respond to Trump’s \nvow of noncooperation. In recent weeks, leaders of the House inquiry signaled \nthey are reluctant to go to court or seek to hold officials in criminal \ncontempt for refusing to comply with a subpoena.  \n还不清楚众议院民主党派怎么回应或者是否会回应川普拒绝合作的承诺. 在最近几周, \n众议院调查团队的负责人发出信号, 他们不愿意因为拒绝传票而走上法庭或者让官方\n人员陷于刑事指控的境地.\n","source":"_posts/新闻翻译-1.md","raw":"---\ntitle: 新闻翻译.1\ndate: 2019-10-10 09:09:54\ntags: \n- translate\n- news\ncomments: false\ncategories: \n- 学习\n- 英语\n---\n[原文链接](https://www.latimes.com/politics/story/2019-10-09/trumps-legal-strategy-against-impeachment-shaky-constitutional-grounds-scholars-say)  \n## Trump’s legal strategy against impeachment is on shaky constitutional grounds, scholars say\n### 学者认为川普反对弹劾的律法政策是基于站不住脚的宪法依据  \n\n1.Washington —  Constitutional lawyers said Wednesday that President Trump’s \nvow not to cooperate with the impeachment inquiry is both unprecedented and \nunlikely to spare him from being formally charged by the House. \nIn fact, they say, it may only increase the chances that he will be impeached.  \n华盛顿报道 - 宪法律师周三声明, 川普总统发誓不会与弹劾调查进行合作的言论是\n前所未有的, 而且也很可能使他面临众议院的正式指控. 并且, 他们还说到, 这有可能\n增加川普被弹劾的可能.\n\n2.The Constitution says the “House of Representatives shall have the sole \npower of impeachment,” and it does not give the president a specific role \nin the process. A president is in some sense like an ordinary defendant \nwho may be subject to a criminal investigation and an indictment, \nall without his participation or involvement, scholars say.  \n美国宪法里写到, \"众议院拥有弹劾的唯一权力\", 而且没有赋予总统在此过程中的任何\n特殊角色. 学者认为, 总统在整个过程中都不会参与到弹劾中, 某种意义上和普通被告一样, \n可能面临刑事调查和指控.  \n\n3.“The president’s cooperation is not required or needed,” said University of \nNorth Carolina law professor Michael J. Gerhardt, an expert on impeachment. \nAnd “the House may make that defiance grounds for impeachment,” he added, \nnoting that in 1974, a House committee approved articles of impeachment against \nPresident Nixon based in part on his refusal to comply with congressional subpoenas.  \n北卡罗莱纳大学的法律学教授, 同时也是研究弹劾的专家, Michael J.Gerhardt认为, \n\"总统的配合并不是必需的, 众议院可以把这作为违抗理由去弹劾\". 他还补充到, 1974年,\n众议院委员会通过了一项弹劾决议, 其部分原因就是尼克松总统拒绝了来自国会的传票. \n<!-- more -->\n4.Though both Nixon and President Clinton tried behind the scenes to slow \nor stop impeachment proceedings, they also attempted to cooperate at times, \nor at least appear to, out of respect for the process and fear they might \nlook like they were hiding something.  \n尽管尼克松和克林顿总统都试图在幕后减缓或者阻止弹劾的进程, 但至少他们在当时都是\n试图配合弹劾工作的, 至少看上去是. 对于弹劾的不尊重和害怕会让他们看起来隐藏了\n一些事.\n\n5.“There is no precedent for the president doing what President Trump is \ndoing here: saying I will flatly refuse to cooperate and ordering all \nemployees of the executive branch to refuse to cooperate as well,” \nsaid professor Frank O. Bowman, who teaches impeachment law at the \nUniversity of Missouri and Georgetown.  \n来自密苏里和乔治敦大学, 教弹劾法律的教授Frank O.Bowman说:\"之前从来没有\n一份先例像川普总统这样, 说自己断然拒绝合作, 而且还命令所有的行政雇员也拒绝合作.\"\n\n6.In Tuesday’s eight-page letter to House Democrats, White House Counsel \nPat Cipillone pronounced Trump innocent of wrongdoing and the inquiry \n“unconstitutional.”  \n周四一份来自白宫的法律顾问Pat Cipillone的八页信件发往了众议院的民主党派, \n他宣称川普的错误做法是无辜的, 而且弹劾调查也是违宪的.\n\n7.He said Trump’s July 25 phone call asking the new president of Ukraine \nto do him “a favor” and investigate former Vice President Joe Biden and \nhis son Hunter was “completely appropriate. The president did nothing wrong, \nand there is no legitimate basis for an impeachment inquiry.”  \n他说, 川普在7月25号致电给乌克兰新总统, 要求他帮助和调查前副总统Joe Biden以及\n他的儿子Hunter是\"完全合理的. 总统没有做错什么, 而且也没有一个合法的法律依据\n可以支撑弹劾的调查\"\n\n8.Legal experts, however, say Trump’s actions were exactly the kinds of \nthings that framers were thinking of when they included an impeachment \nprovision in the Constitution. Trump has acknowledged that even as he asked \nUkraine to investigate one of his political opponents, he had ordered \nthat nearly $400 million in aid to Ukraine be withheld.  \n然而法律专家认为, 川普的行为恰好就是制宪者将弹劾条款加入宪法时所考虑过的.\n川普认识到即使他要求乌克兰去调查他其中的一个政治对手, 他下令资助给乌克兰的\n将近40亿美元的援助也将被扣留.\n\n9.The White House letter suggests that the inquiry is invalid because \nthere was no formal House vote to launch it, and that Trump and Republicans \nhave so far not been given the right to see evidence and call witnesses. \nBased on this conclusion, he said, “President Trump and his administration \ncannot participate in your partisan and unconstitutional inquiry.”  \n白宫的信件认为调查是无效的, 因为没有任何正式的众议院决议去启动这项调查, 而且\n川普和共和党至今甚至没有权力见到证据和传唤目击者. 基于这些结论, 他说: \"川普\n总统和他的管理团队不会参与到你们的党派和违宪的调查中去\"\n\n10.Lawyers took to social media to express surprise and disdain, noting \nthat no such rights or requirements exist in the Constitution.  \n律师在社交媒体上表达了他的惊讶和蔑视, 指出在宪法中不存在这样的权力和请求.\n\n11.“This letter is bananas. A barely-lawyered temper tantrum,” tweeted \nGregg Nunziata, a former counsel for Senate Republicans.  \n前任的共和党法律顾问, Gregg Nunziata发推说道:\"这封信就是胡闹, 一份没有法律\n常识的脾气的宣泄\"\n\n12.University of Texas law professor Steve Vladeck said it was remarkable \nfor the top White House lawyer to say in writing that it “is completely \nappropriate for the president of the United States to actively solicit \nforeign intervention in U.S. presidential elections. Let’s not lose \nsight of just how insane that is.”  \n德克萨斯大学的法律教授Steve Vladeck表示, 对于一个顶级的白宫律师, 以书面形式\n说\"美国总统积极的寻求外国介入到美国的总统选择中是完全合理的. 让我们不要忘记\n这是多么疯狂\", 真是太出色了.(这段真是不知道怎么翻译...)\n\n13.Lisa Kern Griffin, a Duke law professor, described the letter as a \n“political stunt that misinterprets the Constitution, ignores relevant \nprecedents and defies common sense.” She said the letter sets the stage \nfor a constitutional crisis.  \n杜克的法律教授, Lisa Kern Griffin形容这个信是\"曲解宪法的政治手段, 忽略了\n相关的先例, 否决了共识\". 她说这封信为宪法的危机奠定了一个基础.\n\n14.“Of course, the House can proceed with impeachment based on the testimony \nand evidence it can access, but it strikes me as dangerous for the entire \nexecutive branch to defy congressional oversight.”  \n\"理所当然的, 众议院可以继续根据已有的证词和证据进行弹劾, 但是令我感到危险的是\n整个行政部门都违抗国会的监督\"\n\n\n15.Neal K. Katyal, who was acting solicitor general during the Obama administration, \nnoted that Trump’s lawyers have insisted that he is immune from criminal charges, \nshielded from congressional and state legal demands, including for his tax returns, \nand now shielded from an impeachment inquiry.  \n在奥巴马政府期间担任代理司法部副部长的Neal K. Katyal指出, 川普的律师坚持他(川普)\n是免于刑事指控的, 受国会和国家法律要求的保护, 包括他的报税表, 所以现在也保护他免\n于收到弹劾的调查.\n\n16.Gerhardt said the White House letter “shows nothing but contempt for the \nlaw and the Constitution. Its principal argument is that the president is \nabove the law. In fact, he is not. Impeachment is one of the unique constitutional \nprocesses for holding the president accountable for abusing his power.”  \nGerhardt认为白宫信件\"展示了对于法律和宪法的蔑视. 这里面的主要内容就是总统\n凌驾于法律之上. 但事实上, 他是错的. 弹劾是宪法中用于控制总统滥用职权的独特\n法律条文之一\"\n\n17.It’s not clear how or whether House Democrats will respond to Trump’s \nvow of noncooperation. In recent weeks, leaders of the House inquiry signaled \nthey are reluctant to go to court or seek to hold officials in criminal \ncontempt for refusing to comply with a subpoena.  \n还不清楚众议院民主党派怎么回应或者是否会回应川普拒绝合作的承诺. 在最近几周, \n众议院调查团队的负责人发出信号, 他们不愿意因为拒绝传票而走上法庭或者让官方\n人员陷于刑事指控的境地.\n","slug":"新闻翻译-1","published":1,"updated":"2021-11-23T02:12:12.000Z","_id":"ckwadg4nf000q73cfhinyfosh","layout":"post","photos":[],"link":"","content":"<p><a href=\"https://www.latimes.com/politics/story/2019-10-09/trumps-legal-strategy-against-impeachment-shaky-constitutional-grounds-scholars-say\">原文链接</a>  </p>\n<h2 id=\"Trump’s-legal-strategy-against-impeachment-is-on-shaky-constitutional-grounds-scholars-say\"><a href=\"#Trump’s-legal-strategy-against-impeachment-is-on-shaky-constitutional-grounds-scholars-say\" class=\"headerlink\" title=\"Trump’s legal strategy against impeachment is on shaky constitutional grounds, scholars say\"></a>Trump’s legal strategy against impeachment is on shaky constitutional grounds, scholars say</h2><h3 id=\"学者认为川普反对弹劾的律法政策是基于站不住脚的宪法依据\"><a href=\"#学者认为川普反对弹劾的律法政策是基于站不住脚的宪法依据\" class=\"headerlink\" title=\"学者认为川普反对弹劾的律法政策是基于站不住脚的宪法依据\"></a>学者认为川普反对弹劾的律法政策是基于站不住脚的宪法依据</h3><p>1.Washington —  Constitutional lawyers said Wednesday that President Trump’s<br>vow not to cooperate with the impeachment inquiry is both unprecedented and<br>unlikely to spare him from being formally charged by the House.<br>In fact, they say, it may only increase the chances that he will be impeached.<br>华盛顿报道 - 宪法律师周三声明, 川普总统发誓不会与弹劾调查进行合作的言论是<br>前所未有的, 而且也很可能使他面临众议院的正式指控. 并且, 他们还说到, 这有可能<br>增加川普被弹劾的可能.</p>\n<p>2.The Constitution says the “House of Representatives shall have the sole<br>power of impeachment,” and it does not give the president a specific role<br>in the process. A president is in some sense like an ordinary defendant<br>who may be subject to a criminal investigation and an indictment,<br>all without his participation or involvement, scholars say.<br>美国宪法里写到, “众议院拥有弹劾的唯一权力”, 而且没有赋予总统在此过程中的任何<br>特殊角色. 学者认为, 总统在整个过程中都不会参与到弹劾中, 某种意义上和普通被告一样,<br>可能面临刑事调查和指控.  </p>\n<p>3.“The president’s cooperation is not required or needed,” said University of<br>North Carolina law professor Michael J. Gerhardt, an expert on impeachment.<br>And “the House may make that defiance grounds for impeachment,” he added,<br>noting that in 1974, a House committee approved articles of impeachment against<br>President Nixon based in part on his refusal to comply with congressional subpoenas.<br>北卡罗莱纳大学的法律学教授, 同时也是研究弹劾的专家, Michael J.Gerhardt认为,<br>“总统的配合并不是必需的, 众议院可以把这作为违抗理由去弹劾”. 他还补充到, 1974年,<br>众议院委员会通过了一项弹劾决议, 其部分原因就是尼克松总统拒绝了来自国会的传票. </p>\n<span id=\"more\"></span>\n<p>4.Though both Nixon and President Clinton tried behind the scenes to slow<br>or stop impeachment proceedings, they also attempted to cooperate at times,<br>or at least appear to, out of respect for the process and fear they might<br>look like they were hiding something.<br>尽管尼克松和克林顿总统都试图在幕后减缓或者阻止弹劾的进程, 但至少他们在当时都是<br>试图配合弹劾工作的, 至少看上去是. 对于弹劾的不尊重和害怕会让他们看起来隐藏了<br>一些事.</p>\n<p>5.“There is no precedent for the president doing what President Trump is<br>doing here: saying I will flatly refuse to cooperate and ordering all<br>employees of the executive branch to refuse to cooperate as well,”<br>said professor Frank O. Bowman, who teaches impeachment law at the<br>University of Missouri and Georgetown.<br>来自密苏里和乔治敦大学, 教弹劾法律的教授Frank O.Bowman说:”之前从来没有<br>一份先例像川普总统这样, 说自己断然拒绝合作, 而且还命令所有的行政雇员也拒绝合作.”</p>\n<p>6.In Tuesday’s eight-page letter to House Democrats, White House Counsel<br>Pat Cipillone pronounced Trump innocent of wrongdoing and the inquiry<br>“unconstitutional.”<br>周四一份来自白宫的法律顾问Pat Cipillone的八页信件发往了众议院的民主党派,<br>他宣称川普的错误做法是无辜的, 而且弹劾调查也是违宪的.</p>\n<p>7.He said Trump’s July 25 phone call asking the new president of Ukraine<br>to do him “a favor” and investigate former Vice President Joe Biden and<br>his son Hunter was “completely appropriate. The president did nothing wrong,<br>and there is no legitimate basis for an impeachment inquiry.”<br>他说, 川普在7月25号致电给乌克兰新总统, 要求他帮助和调查前副总统Joe Biden以及<br>他的儿子Hunter是”完全合理的. 总统没有做错什么, 而且也没有一个合法的法律依据<br>可以支撑弹劾的调查”</p>\n<p>8.Legal experts, however, say Trump’s actions were exactly the kinds of<br>things that framers were thinking of when they included an impeachment<br>provision in the Constitution. Trump has acknowledged that even as he asked<br>Ukraine to investigate one of his political opponents, he had ordered<br>that nearly $400 million in aid to Ukraine be withheld.<br>然而法律专家认为, 川普的行为恰好就是制宪者将弹劾条款加入宪法时所考虑过的.<br>川普认识到即使他要求乌克兰去调查他其中的一个政治对手, 他下令资助给乌克兰的<br>将近40亿美元的援助也将被扣留.</p>\n<p>9.The White House letter suggests that the inquiry is invalid because<br>there was no formal House vote to launch it, and that Trump and Republicans<br>have so far not been given the right to see evidence and call witnesses.<br>Based on this conclusion, he said, “President Trump and his administration<br>cannot participate in your partisan and unconstitutional inquiry.”<br>白宫的信件认为调查是无效的, 因为没有任何正式的众议院决议去启动这项调查, 而且<br>川普和共和党至今甚至没有权力见到证据和传唤目击者. 基于这些结论, 他说: “川普<br>总统和他的管理团队不会参与到你们的党派和违宪的调查中去”</p>\n<p>10.Lawyers took to social media to express surprise and disdain, noting<br>that no such rights or requirements exist in the Constitution.<br>律师在社交媒体上表达了他的惊讶和蔑视, 指出在宪法中不存在这样的权力和请求.</p>\n<p>11.“This letter is bananas. A barely-lawyered temper tantrum,” tweeted<br>Gregg Nunziata, a former counsel for Senate Republicans.<br>前任的共和党法律顾问, Gregg Nunziata发推说道:”这封信就是胡闹, 一份没有法律<br>常识的脾气的宣泄”</p>\n<p>12.University of Texas law professor Steve Vladeck said it was remarkable<br>for the top White House lawyer to say in writing that it “is completely<br>appropriate for the president of the United States to actively solicit<br>foreign intervention in U.S. presidential elections. Let’s not lose<br>sight of just how insane that is.”<br>德克萨斯大学的法律教授Steve Vladeck表示, 对于一个顶级的白宫律师, 以书面形式<br>说”美国总统积极的寻求外国介入到美国的总统选择中是完全合理的. 让我们不要忘记<br>这是多么疯狂”, 真是太出色了.(这段真是不知道怎么翻译…)</p>\n<p>13.Lisa Kern Griffin, a Duke law professor, described the letter as a<br>“political stunt that misinterprets the Constitution, ignores relevant<br>precedents and defies common sense.” She said the letter sets the stage<br>for a constitutional crisis.<br>杜克的法律教授, Lisa Kern Griffin形容这个信是”曲解宪法的政治手段, 忽略了<br>相关的先例, 否决了共识”. 她说这封信为宪法的危机奠定了一个基础.</p>\n<p>14.“Of course, the House can proceed with impeachment based on the testimony<br>and evidence it can access, but it strikes me as dangerous for the entire<br>executive branch to defy congressional oversight.”<br>“理所当然的, 众议院可以继续根据已有的证词和证据进行弹劾, 但是令我感到危险的是<br>整个行政部门都违抗国会的监督”</p>\n<p>15.Neal K. Katyal, who was acting solicitor general during the Obama administration,<br>noted that Trump’s lawyers have insisted that he is immune from criminal charges,<br>shielded from congressional and state legal demands, including for his tax returns,<br>and now shielded from an impeachment inquiry.<br>在奥巴马政府期间担任代理司法部副部长的Neal K. Katyal指出, 川普的律师坚持他(川普)<br>是免于刑事指控的, 受国会和国家法律要求的保护, 包括他的报税表, 所以现在也保护他免<br>于收到弹劾的调查.</p>\n<p>16.Gerhardt said the White House letter “shows nothing but contempt for the<br>law and the Constitution. Its principal argument is that the president is<br>above the law. In fact, he is not. Impeachment is one of the unique constitutional<br>processes for holding the president accountable for abusing his power.”<br>Gerhardt认为白宫信件”展示了对于法律和宪法的蔑视. 这里面的主要内容就是总统<br>凌驾于法律之上. 但事实上, 他是错的. 弹劾是宪法中用于控制总统滥用职权的独特<br>法律条文之一”</p>\n<p>17.It’s not clear how or whether House Democrats will respond to Trump’s<br>vow of noncooperation. In recent weeks, leaders of the House inquiry signaled<br>they are reluctant to go to court or seek to hold officials in criminal<br>contempt for refusing to comply with a subpoena.<br>还不清楚众议院民主党派怎么回应或者是否会回应川普拒绝合作的承诺. 在最近几周,<br>众议院调查团队的负责人发出信号, 他们不愿意因为拒绝传票而走上法庭或者让官方<br>人员陷于刑事指控的境地.</p>\n","site":{"data":{}},"excerpt":"<p><a href=\"https://www.latimes.com/politics/story/2019-10-09/trumps-legal-strategy-against-impeachment-shaky-constitutional-grounds-scholars-say\">原文链接</a>  </p>\n<h2 id=\"Trump’s-legal-strategy-against-impeachment-is-on-shaky-constitutional-grounds-scholars-say\"><a href=\"#Trump’s-legal-strategy-against-impeachment-is-on-shaky-constitutional-grounds-scholars-say\" class=\"headerlink\" title=\"Trump’s legal strategy against impeachment is on shaky constitutional grounds, scholars say\"></a>Trump’s legal strategy against impeachment is on shaky constitutional grounds, scholars say</h2><h3 id=\"学者认为川普反对弹劾的律法政策是基于站不住脚的宪法依据\"><a href=\"#学者认为川普反对弹劾的律法政策是基于站不住脚的宪法依据\" class=\"headerlink\" title=\"学者认为川普反对弹劾的律法政策是基于站不住脚的宪法依据\"></a>学者认为川普反对弹劾的律法政策是基于站不住脚的宪法依据</h3><p>1.Washington —  Constitutional lawyers said Wednesday that President Trump’s<br>vow not to cooperate with the impeachment inquiry is both unprecedented and<br>unlikely to spare him from being formally charged by the House.<br>In fact, they say, it may only increase the chances that he will be impeached.<br>华盛顿报道 - 宪法律师周三声明, 川普总统发誓不会与弹劾调查进行合作的言论是<br>前所未有的, 而且也很可能使他面临众议院的正式指控. 并且, 他们还说到, 这有可能<br>增加川普被弹劾的可能.</p>\n<p>2.The Constitution says the “House of Representatives shall have the sole<br>power of impeachment,” and it does not give the president a specific role<br>in the process. A president is in some sense like an ordinary defendant<br>who may be subject to a criminal investigation and an indictment,<br>all without his participation or involvement, scholars say.<br>美国宪法里写到, “众议院拥有弹劾的唯一权力”, 而且没有赋予总统在此过程中的任何<br>特殊角色. 学者认为, 总统在整个过程中都不会参与到弹劾中, 某种意义上和普通被告一样,<br>可能面临刑事调查和指控.  </p>\n<p>3.“The president’s cooperation is not required or needed,” said University of<br>North Carolina law professor Michael J. Gerhardt, an expert on impeachment.<br>And “the House may make that defiance grounds for impeachment,” he added,<br>noting that in 1974, a House committee approved articles of impeachment against<br>President Nixon based in part on his refusal to comply with congressional subpoenas.<br>北卡罗莱纳大学的法律学教授, 同时也是研究弹劾的专家, Michael J.Gerhardt认为,<br>“总统的配合并不是必需的, 众议院可以把这作为违抗理由去弹劾”. 他还补充到, 1974年,<br>众议院委员会通过了一项弹劾决议, 其部分原因就是尼克松总统拒绝了来自国会的传票. </p>","more":"<p>4.Though both Nixon and President Clinton tried behind the scenes to slow<br>or stop impeachment proceedings, they also attempted to cooperate at times,<br>or at least appear to, out of respect for the process and fear they might<br>look like they were hiding something.<br>尽管尼克松和克林顿总统都试图在幕后减缓或者阻止弹劾的进程, 但至少他们在当时都是<br>试图配合弹劾工作的, 至少看上去是. 对于弹劾的不尊重和害怕会让他们看起来隐藏了<br>一些事.</p>\n<p>5.“There is no precedent for the president doing what President Trump is<br>doing here: saying I will flatly refuse to cooperate and ordering all<br>employees of the executive branch to refuse to cooperate as well,”<br>said professor Frank O. Bowman, who teaches impeachment law at the<br>University of Missouri and Georgetown.<br>来自密苏里和乔治敦大学, 教弹劾法律的教授Frank O.Bowman说:”之前从来没有<br>一份先例像川普总统这样, 说自己断然拒绝合作, 而且还命令所有的行政雇员也拒绝合作.”</p>\n<p>6.In Tuesday’s eight-page letter to House Democrats, White House Counsel<br>Pat Cipillone pronounced Trump innocent of wrongdoing and the inquiry<br>“unconstitutional.”<br>周四一份来自白宫的法律顾问Pat Cipillone的八页信件发往了众议院的民主党派,<br>他宣称川普的错误做法是无辜的, 而且弹劾调查也是违宪的.</p>\n<p>7.He said Trump’s July 25 phone call asking the new president of Ukraine<br>to do him “a favor” and investigate former Vice President Joe Biden and<br>his son Hunter was “completely appropriate. The president did nothing wrong,<br>and there is no legitimate basis for an impeachment inquiry.”<br>他说, 川普在7月25号致电给乌克兰新总统, 要求他帮助和调查前副总统Joe Biden以及<br>他的儿子Hunter是”完全合理的. 总统没有做错什么, 而且也没有一个合法的法律依据<br>可以支撑弹劾的调查”</p>\n<p>8.Legal experts, however, say Trump’s actions were exactly the kinds of<br>things that framers were thinking of when they included an impeachment<br>provision in the Constitution. Trump has acknowledged that even as he asked<br>Ukraine to investigate one of his political opponents, he had ordered<br>that nearly $400 million in aid to Ukraine be withheld.<br>然而法律专家认为, 川普的行为恰好就是制宪者将弹劾条款加入宪法时所考虑过的.<br>川普认识到即使他要求乌克兰去调查他其中的一个政治对手, 他下令资助给乌克兰的<br>将近40亿美元的援助也将被扣留.</p>\n<p>9.The White House letter suggests that the inquiry is invalid because<br>there was no formal House vote to launch it, and that Trump and Republicans<br>have so far not been given the right to see evidence and call witnesses.<br>Based on this conclusion, he said, “President Trump and his administration<br>cannot participate in your partisan and unconstitutional inquiry.”<br>白宫的信件认为调查是无效的, 因为没有任何正式的众议院决议去启动这项调查, 而且<br>川普和共和党至今甚至没有权力见到证据和传唤目击者. 基于这些结论, 他说: “川普<br>总统和他的管理团队不会参与到你们的党派和违宪的调查中去”</p>\n<p>10.Lawyers took to social media to express surprise and disdain, noting<br>that no such rights or requirements exist in the Constitution.<br>律师在社交媒体上表达了他的惊讶和蔑视, 指出在宪法中不存在这样的权力和请求.</p>\n<p>11.“This letter is bananas. A barely-lawyered temper tantrum,” tweeted<br>Gregg Nunziata, a former counsel for Senate Republicans.<br>前任的共和党法律顾问, Gregg Nunziata发推说道:”这封信就是胡闹, 一份没有法律<br>常识的脾气的宣泄”</p>\n<p>12.University of Texas law professor Steve Vladeck said it was remarkable<br>for the top White House lawyer to say in writing that it “is completely<br>appropriate for the president of the United States to actively solicit<br>foreign intervention in U.S. presidential elections. Let’s not lose<br>sight of just how insane that is.”<br>德克萨斯大学的法律教授Steve Vladeck表示, 对于一个顶级的白宫律师, 以书面形式<br>说”美国总统积极的寻求外国介入到美国的总统选择中是完全合理的. 让我们不要忘记<br>这是多么疯狂”, 真是太出色了.(这段真是不知道怎么翻译…)</p>\n<p>13.Lisa Kern Griffin, a Duke law professor, described the letter as a<br>“political stunt that misinterprets the Constitution, ignores relevant<br>precedents and defies common sense.” She said the letter sets the stage<br>for a constitutional crisis.<br>杜克的法律教授, Lisa Kern Griffin形容这个信是”曲解宪法的政治手段, 忽略了<br>相关的先例, 否决了共识”. 她说这封信为宪法的危机奠定了一个基础.</p>\n<p>14.“Of course, the House can proceed with impeachment based on the testimony<br>and evidence it can access, but it strikes me as dangerous for the entire<br>executive branch to defy congressional oversight.”<br>“理所当然的, 众议院可以继续根据已有的证词和证据进行弹劾, 但是令我感到危险的是<br>整个行政部门都违抗国会的监督”</p>\n<p>15.Neal K. Katyal, who was acting solicitor general during the Obama administration,<br>noted that Trump’s lawyers have insisted that he is immune from criminal charges,<br>shielded from congressional and state legal demands, including for his tax returns,<br>and now shielded from an impeachment inquiry.<br>在奥巴马政府期间担任代理司法部副部长的Neal K. Katyal指出, 川普的律师坚持他(川普)<br>是免于刑事指控的, 受国会和国家法律要求的保护, 包括他的报税表, 所以现在也保护他免<br>于收到弹劾的调查.</p>\n<p>16.Gerhardt said the White House letter “shows nothing but contempt for the<br>law and the Constitution. Its principal argument is that the president is<br>above the law. In fact, he is not. Impeachment is one of the unique constitutional<br>processes for holding the president accountable for abusing his power.”<br>Gerhardt认为白宫信件”展示了对于法律和宪法的蔑视. 这里面的主要内容就是总统<br>凌驾于法律之上. 但事实上, 他是错的. 弹劾是宪法中用于控制总统滥用职权的独特<br>法律条文之一”</p>\n<p>17.It’s not clear how or whether House Democrats will respond to Trump’s<br>vow of noncooperation. In recent weeks, leaders of the House inquiry signaled<br>they are reluctant to go to court or seek to hold officials in criminal<br>contempt for refusing to comply with a subpoena.<br>还不清楚众议院民主党派怎么回应或者是否会回应川普拒绝合作的承诺. 在最近几周,<br>众议院调查团队的负责人发出信号, 他们不愿意因为拒绝传票而走上法庭或者让官方<br>人员陷于刑事指控的境地.</p>"},{"title":"绩效统计","date":"2019-10-09T03:01:53.000Z","password":"hlqxyy","comments":0,"_content":"\n\n\n| 序号 |  工作模块  |                        工作内容                        |  开始时间  |  结束时间  |\n| :--: | :--------: | :----------------------------------------------------: | :--------: | :--------: |\n|  1   |  BOS接口   |           样衣尺码限制为只能填写00, 36, 240            | 2019.09.12 | 2019.09.13 |\n|  2   |  BOS接口   |                  修复季节字段参数错误                  | 2019.09.13 | 2019.09.13 |\n|  3   |  BOS接口   |              新增支持款式和样衣的条码更新              | 2019.09.16 | 2019.09.19 |\n|  4   |  BOS接口   |                     新增总工价字段                     | 2019.09.19 | 2019.09.19 |\n|  5   |  BOS接口   |                    新增采购退审逻辑                    | 2019.09.20 | 2019.09.24 |\n|  6   |  BOS接口   |              采购审核通过时修改订单合同号              | 2019.09.25 | 2019.09.30 |\n|  7   |  BOS接口   |                    增加若干打印日志                    | 2019.10.08 | 2019.10.08 |\n|  8   |  整体框架  |               搭建ELK+Filebeats日志框架                | 2019.09.15 | 2019.10.15 |\n|  9   |  整体框架  |        增加所有测试机和部分生产机的日志发送功能        | 2019.10.12 | 2019.10.16 |\n|  10  |  PLM接口   |           校验PLM线上和测试环境的数据库差异            | 2019.10.15 | 2019.10.16 |\n|  11  |  整体框架  |                    搭建项目基础框架                    | 2019.10.18 | 2019.10.30 |\n|  12  |  PLM接口   |                 PLM对接BOS接口字段增加                 | 2019.10.21 | 2019.10.25 |\n|  13  |  PLM接口   |                增加PLM物料详细信息页面                 | 2019.10.26 | 2019.10.29 |\n|  14  |  O2O接口   |               修改首页分类中的图片和接口               | 2019.10.28 | 2019.10.29 |\n|  15  |  POS接口   |         修正UTI自动生成的PDF图片遮住LOGO的bug          | 2019.10.28 | 2019.10.29 |\n|  16  |  PLM接口   |        PLM传送面辅料信息的接口中区分面辅料大类         | 2019.10.29 | 2019.10.30 |\n|  17  |  PLM接口   |           根据PLM来源来判断是否可以更新款号            | 2019.10.30 | 2019.10.31 |\n|  18  |  整体框架  |                    修改ELK日志格式                     | 2019.11.01 | 2019.11.01 |\n|  19  |  POS接口   |          增加支持POS优惠策略中的自动翻倍规则           | 2019.11.04 | 2019.11.05 |\n|  20  |  PLM接口   |                 熟悉并接手PLM项目开发                  | 2019.11.06 | 2019.11.10 |\n|  21  |  日志框架  |                 修改日志索引以中文显示                 | 2019.11.15 | 2019.11.16 |\n|  22  |  BUG修复   |                    修复短信发送接口                    | 2019.11.18 | 2019.11.20 |\n|  23  | 微商城接口 |                增加对于特定供应商的过滤                | 2019.11.22 | 2019.11.25 |\n|  24  |  BUG修复   |               修复POS中满减优惠计算错误                | 2019.11.26 | 2019.11.26 |\n|  25  | 微商城接口 |           新增微商城中领取和查看优惠券的接口           | 2019.11.28 | 2019.12.05 |\n|  26  |  PLM项目   | 取消外购样衣中借出按钮时清空借出数量，借出人，借出时间 | 2019.12.08 | 2019.12.09 |\n|  27  | 微商城接口 |                设置特卖会总仓不过滤品牌                | 2019.12.10 | 2019.12.11 |\n|  28  |  BUG修复   |   修正线上服务器日志级别过低导致服务器空间不足的问题   | 2019.12.12 | 2019.12.13 |\n|  29  | 微商城接口 |            修改直营全字段统计报表的取数逻辑            | 2019.12.16 | 2019.12.19 |\n|  30  | 安卓TV接口 |    图片压缩显示，并增加二维码，按照价格波次倒序排列    | 2019.12.25 | 2019.12.30 |\n\n\n\n| 序号 | 问题时间   | 发布人 | 问题描述                                   | 紧急程度 | 预计完成时间 | 实际完成时间 | 处理过程                                                     | 处理结果 |\n| ---- | ---------- | ------ | ------------------------------------------ | -------- | ------------ | ------------ | ------------------------------------------------------------ | -------- |\n| 1    | 2019.01.01 | 杨鹏达 | 平下限逻辑修改，改为由收款金额来确定       | 三级     | 2019.01.01   | 2019.01.01   | 修改代码对应字段                                             |          |\n| 2    | 2019.01.03 | 姜王   | 修改组织架构，一级经理和总监的过滤条件修改 | 二级     | 2019.01.04   | 2019.01.04   | 一级经理和总监的过滤条件修改                                 |          |\n| 3    | 2019.01.03 | 范里   | 完成预收接口                               | 三级     | 2019.01.06   | 2019.01.06   | 在bos-provider模块增加预收接口，前端异步调用后端是否成功的状态 |          |\n| 4    | 2019.01.07 | 范里   | 安卓TV压缩图片和二维码功能                 | 二级     | 2019.01.09   | 2019.01.09   | 使用阿里云API进行图片处理                                    |          |\n| 5    | 2019.01.10 | 詹林珠 | 内购部分产品无法下单                       | 三级     | 2019.01.11   | 2019.01.11   | 修改代码逻辑                                                 |          |\n| 6    | 2019.01.14 | 陈磊   | TV部分店铺无法切换频道                     | 三级     | 2019.01.14   | 2019.01.14   | 修改代码逻辑                                                 |          |\n| 7    | 2019.01.14 | 姜王   | ios客户端退货列表无法显示一年以前的数据    | 二级     | 2019.01.14   | 2019.01.14   | 将过滤条件修改为三年                                         |          |\n|      |            |        |                                            |          |              |              |                                                              |          |\n\n","source":"_posts/绩效统计.md","raw":"---\ntitle: 绩效统计\ndate: 2019-10-09 11:01:53\npassword: hlqxyy\ncategories: 绩效\ncomments: false\n---\n\n\n\n| 序号 |  工作模块  |                        工作内容                        |  开始时间  |  结束时间  |\n| :--: | :--------: | :----------------------------------------------------: | :--------: | :--------: |\n|  1   |  BOS接口   |           样衣尺码限制为只能填写00, 36, 240            | 2019.09.12 | 2019.09.13 |\n|  2   |  BOS接口   |                  修复季节字段参数错误                  | 2019.09.13 | 2019.09.13 |\n|  3   |  BOS接口   |              新增支持款式和样衣的条码更新              | 2019.09.16 | 2019.09.19 |\n|  4   |  BOS接口   |                     新增总工价字段                     | 2019.09.19 | 2019.09.19 |\n|  5   |  BOS接口   |                    新增采购退审逻辑                    | 2019.09.20 | 2019.09.24 |\n|  6   |  BOS接口   |              采购审核通过时修改订单合同号              | 2019.09.25 | 2019.09.30 |\n|  7   |  BOS接口   |                    增加若干打印日志                    | 2019.10.08 | 2019.10.08 |\n|  8   |  整体框架  |               搭建ELK+Filebeats日志框架                | 2019.09.15 | 2019.10.15 |\n|  9   |  整体框架  |        增加所有测试机和部分生产机的日志发送功能        | 2019.10.12 | 2019.10.16 |\n|  10  |  PLM接口   |           校验PLM线上和测试环境的数据库差异            | 2019.10.15 | 2019.10.16 |\n|  11  |  整体框架  |                    搭建项目基础框架                    | 2019.10.18 | 2019.10.30 |\n|  12  |  PLM接口   |                 PLM对接BOS接口字段增加                 | 2019.10.21 | 2019.10.25 |\n|  13  |  PLM接口   |                增加PLM物料详细信息页面                 | 2019.10.26 | 2019.10.29 |\n|  14  |  O2O接口   |               修改首页分类中的图片和接口               | 2019.10.28 | 2019.10.29 |\n|  15  |  POS接口   |         修正UTI自动生成的PDF图片遮住LOGO的bug          | 2019.10.28 | 2019.10.29 |\n|  16  |  PLM接口   |        PLM传送面辅料信息的接口中区分面辅料大类         | 2019.10.29 | 2019.10.30 |\n|  17  |  PLM接口   |           根据PLM来源来判断是否可以更新款号            | 2019.10.30 | 2019.10.31 |\n|  18  |  整体框架  |                    修改ELK日志格式                     | 2019.11.01 | 2019.11.01 |\n|  19  |  POS接口   |          增加支持POS优惠策略中的自动翻倍规则           | 2019.11.04 | 2019.11.05 |\n|  20  |  PLM接口   |                 熟悉并接手PLM项目开发                  | 2019.11.06 | 2019.11.10 |\n|  21  |  日志框架  |                 修改日志索引以中文显示                 | 2019.11.15 | 2019.11.16 |\n|  22  |  BUG修复   |                    修复短信发送接口                    | 2019.11.18 | 2019.11.20 |\n|  23  | 微商城接口 |                增加对于特定供应商的过滤                | 2019.11.22 | 2019.11.25 |\n|  24  |  BUG修复   |               修复POS中满减优惠计算错误                | 2019.11.26 | 2019.11.26 |\n|  25  | 微商城接口 |           新增微商城中领取和查看优惠券的接口           | 2019.11.28 | 2019.12.05 |\n|  26  |  PLM项目   | 取消外购样衣中借出按钮时清空借出数量，借出人，借出时间 | 2019.12.08 | 2019.12.09 |\n|  27  | 微商城接口 |                设置特卖会总仓不过滤品牌                | 2019.12.10 | 2019.12.11 |\n|  28  |  BUG修复   |   修正线上服务器日志级别过低导致服务器空间不足的问题   | 2019.12.12 | 2019.12.13 |\n|  29  | 微商城接口 |            修改直营全字段统计报表的取数逻辑            | 2019.12.16 | 2019.12.19 |\n|  30  | 安卓TV接口 |    图片压缩显示，并增加二维码，按照价格波次倒序排列    | 2019.12.25 | 2019.12.30 |\n\n\n\n| 序号 | 问题时间   | 发布人 | 问题描述                                   | 紧急程度 | 预计完成时间 | 实际完成时间 | 处理过程                                                     | 处理结果 |\n| ---- | ---------- | ------ | ------------------------------------------ | -------- | ------------ | ------------ | ------------------------------------------------------------ | -------- |\n| 1    | 2019.01.01 | 杨鹏达 | 平下限逻辑修改，改为由收款金额来确定       | 三级     | 2019.01.01   | 2019.01.01   | 修改代码对应字段                                             |          |\n| 2    | 2019.01.03 | 姜王   | 修改组织架构，一级经理和总监的过滤条件修改 | 二级     | 2019.01.04   | 2019.01.04   | 一级经理和总监的过滤条件修改                                 |          |\n| 3    | 2019.01.03 | 范里   | 完成预收接口                               | 三级     | 2019.01.06   | 2019.01.06   | 在bos-provider模块增加预收接口，前端异步调用后端是否成功的状态 |          |\n| 4    | 2019.01.07 | 范里   | 安卓TV压缩图片和二维码功能                 | 二级     | 2019.01.09   | 2019.01.09   | 使用阿里云API进行图片处理                                    |          |\n| 5    | 2019.01.10 | 詹林珠 | 内购部分产品无法下单                       | 三级     | 2019.01.11   | 2019.01.11   | 修改代码逻辑                                                 |          |\n| 6    | 2019.01.14 | 陈磊   | TV部分店铺无法切换频道                     | 三级     | 2019.01.14   | 2019.01.14   | 修改代码逻辑                                                 |          |\n| 7    | 2019.01.14 | 姜王   | ios客户端退货列表无法显示一年以前的数据    | 二级     | 2019.01.14   | 2019.01.14   | 将过滤条件修改为三年                                         |          |\n|      |            |        |                                            |          |              |              |                                                              |          |\n\n","slug":"绩效统计","published":1,"updated":"2021-11-19T07:05:32.000Z","layout":"post","photos":[],"link":"","_id":"ckwadg4nh000u73cf3ou83u3l","content":"<table>\n<thead>\n<tr>\n<th align=\"center\">序号</th>\n<th align=\"center\">工作模块</th>\n<th align=\"center\">工作内容</th>\n<th align=\"center\">开始时间</th>\n<th align=\"center\">结束时间</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">1</td>\n<td align=\"center\">BOS接口</td>\n<td align=\"center\">样衣尺码限制为只能填写00, 36, 240</td>\n<td align=\"center\">2019.09.12</td>\n<td align=\"center\">2019.09.13</td>\n</tr>\n<tr>\n<td align=\"center\">2</td>\n<td align=\"center\">BOS接口</td>\n<td align=\"center\">修复季节字段参数错误</td>\n<td align=\"center\">2019.09.13</td>\n<td align=\"center\">2019.09.13</td>\n</tr>\n<tr>\n<td align=\"center\">3</td>\n<td align=\"center\">BOS接口</td>\n<td align=\"center\">新增支持款式和样衣的条码更新</td>\n<td align=\"center\">2019.09.16</td>\n<td align=\"center\">2019.09.19</td>\n</tr>\n<tr>\n<td align=\"center\">4</td>\n<td align=\"center\">BOS接口</td>\n<td align=\"center\">新增总工价字段</td>\n<td align=\"center\">2019.09.19</td>\n<td align=\"center\">2019.09.19</td>\n</tr>\n<tr>\n<td align=\"center\">5</td>\n<td align=\"center\">BOS接口</td>\n<td align=\"center\">新增采购退审逻辑</td>\n<td align=\"center\">2019.09.20</td>\n<td align=\"center\">2019.09.24</td>\n</tr>\n<tr>\n<td align=\"center\">6</td>\n<td align=\"center\">BOS接口</td>\n<td align=\"center\">采购审核通过时修改订单合同号</td>\n<td align=\"center\">2019.09.25</td>\n<td align=\"center\">2019.09.30</td>\n</tr>\n<tr>\n<td align=\"center\">7</td>\n<td align=\"center\">BOS接口</td>\n<td align=\"center\">增加若干打印日志</td>\n<td align=\"center\">2019.10.08</td>\n<td align=\"center\">2019.10.08</td>\n</tr>\n<tr>\n<td align=\"center\">8</td>\n<td align=\"center\">整体框架</td>\n<td align=\"center\">搭建ELK+Filebeats日志框架</td>\n<td align=\"center\">2019.09.15</td>\n<td align=\"center\">2019.10.15</td>\n</tr>\n<tr>\n<td align=\"center\">9</td>\n<td align=\"center\">整体框架</td>\n<td align=\"center\">增加所有测试机和部分生产机的日志发送功能</td>\n<td align=\"center\">2019.10.12</td>\n<td align=\"center\">2019.10.16</td>\n</tr>\n<tr>\n<td align=\"center\">10</td>\n<td align=\"center\">PLM接口</td>\n<td align=\"center\">校验PLM线上和测试环境的数据库差异</td>\n<td align=\"center\">2019.10.15</td>\n<td align=\"center\">2019.10.16</td>\n</tr>\n<tr>\n<td align=\"center\">11</td>\n<td align=\"center\">整体框架</td>\n<td align=\"center\">搭建项目基础框架</td>\n<td align=\"center\">2019.10.18</td>\n<td align=\"center\">2019.10.30</td>\n</tr>\n<tr>\n<td align=\"center\">12</td>\n<td align=\"center\">PLM接口</td>\n<td align=\"center\">PLM对接BOS接口字段增加</td>\n<td align=\"center\">2019.10.21</td>\n<td align=\"center\">2019.10.25</td>\n</tr>\n<tr>\n<td align=\"center\">13</td>\n<td align=\"center\">PLM接口</td>\n<td align=\"center\">增加PLM物料详细信息页面</td>\n<td align=\"center\">2019.10.26</td>\n<td align=\"center\">2019.10.29</td>\n</tr>\n<tr>\n<td align=\"center\">14</td>\n<td align=\"center\">O2O接口</td>\n<td align=\"center\">修改首页分类中的图片和接口</td>\n<td align=\"center\">2019.10.28</td>\n<td align=\"center\">2019.10.29</td>\n</tr>\n<tr>\n<td align=\"center\">15</td>\n<td align=\"center\">POS接口</td>\n<td align=\"center\">修正UTI自动生成的PDF图片遮住LOGO的bug</td>\n<td align=\"center\">2019.10.28</td>\n<td align=\"center\">2019.10.29</td>\n</tr>\n<tr>\n<td align=\"center\">16</td>\n<td align=\"center\">PLM接口</td>\n<td align=\"center\">PLM传送面辅料信息的接口中区分面辅料大类</td>\n<td align=\"center\">2019.10.29</td>\n<td align=\"center\">2019.10.30</td>\n</tr>\n<tr>\n<td align=\"center\">17</td>\n<td align=\"center\">PLM接口</td>\n<td align=\"center\">根据PLM来源来判断是否可以更新款号</td>\n<td align=\"center\">2019.10.30</td>\n<td align=\"center\">2019.10.31</td>\n</tr>\n<tr>\n<td align=\"center\">18</td>\n<td align=\"center\">整体框架</td>\n<td align=\"center\">修改ELK日志格式</td>\n<td align=\"center\">2019.11.01</td>\n<td align=\"center\">2019.11.01</td>\n</tr>\n<tr>\n<td align=\"center\">19</td>\n<td align=\"center\">POS接口</td>\n<td align=\"center\">增加支持POS优惠策略中的自动翻倍规则</td>\n<td align=\"center\">2019.11.04</td>\n<td align=\"center\">2019.11.05</td>\n</tr>\n<tr>\n<td align=\"center\">20</td>\n<td align=\"center\">PLM接口</td>\n<td align=\"center\">熟悉并接手PLM项目开发</td>\n<td align=\"center\">2019.11.06</td>\n<td align=\"center\">2019.11.10</td>\n</tr>\n<tr>\n<td align=\"center\">21</td>\n<td align=\"center\">日志框架</td>\n<td align=\"center\">修改日志索引以中文显示</td>\n<td align=\"center\">2019.11.15</td>\n<td align=\"center\">2019.11.16</td>\n</tr>\n<tr>\n<td align=\"center\">22</td>\n<td align=\"center\">BUG修复</td>\n<td align=\"center\">修复短信发送接口</td>\n<td align=\"center\">2019.11.18</td>\n<td align=\"center\">2019.11.20</td>\n</tr>\n<tr>\n<td align=\"center\">23</td>\n<td align=\"center\">微商城接口</td>\n<td align=\"center\">增加对于特定供应商的过滤</td>\n<td align=\"center\">2019.11.22</td>\n<td align=\"center\">2019.11.25</td>\n</tr>\n<tr>\n<td align=\"center\">24</td>\n<td align=\"center\">BUG修复</td>\n<td align=\"center\">修复POS中满减优惠计算错误</td>\n<td align=\"center\">2019.11.26</td>\n<td align=\"center\">2019.11.26</td>\n</tr>\n<tr>\n<td align=\"center\">25</td>\n<td align=\"center\">微商城接口</td>\n<td align=\"center\">新增微商城中领取和查看优惠券的接口</td>\n<td align=\"center\">2019.11.28</td>\n<td align=\"center\">2019.12.05</td>\n</tr>\n<tr>\n<td align=\"center\">26</td>\n<td align=\"center\">PLM项目</td>\n<td align=\"center\">取消外购样衣中借出按钮时清空借出数量，借出人，借出时间</td>\n<td align=\"center\">2019.12.08</td>\n<td align=\"center\">2019.12.09</td>\n</tr>\n<tr>\n<td align=\"center\">27</td>\n<td align=\"center\">微商城接口</td>\n<td align=\"center\">设置特卖会总仓不过滤品牌</td>\n<td align=\"center\">2019.12.10</td>\n<td align=\"center\">2019.12.11</td>\n</tr>\n<tr>\n<td align=\"center\">28</td>\n<td align=\"center\">BUG修复</td>\n<td align=\"center\">修正线上服务器日志级别过低导致服务器空间不足的问题</td>\n<td align=\"center\">2019.12.12</td>\n<td align=\"center\">2019.12.13</td>\n</tr>\n<tr>\n<td align=\"center\">29</td>\n<td align=\"center\">微商城接口</td>\n<td align=\"center\">修改直营全字段统计报表的取数逻辑</td>\n<td align=\"center\">2019.12.16</td>\n<td align=\"center\">2019.12.19</td>\n</tr>\n<tr>\n<td align=\"center\">30</td>\n<td align=\"center\">安卓TV接口</td>\n<td align=\"center\">图片压缩显示，并增加二维码，按照价格波次倒序排列</td>\n<td align=\"center\">2019.12.25</td>\n<td align=\"center\">2019.12.30</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th>序号</th>\n<th>问题时间</th>\n<th>发布人</th>\n<th>问题描述</th>\n<th>紧急程度</th>\n<th>预计完成时间</th>\n<th>实际完成时间</th>\n<th>处理过程</th>\n<th>处理结果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1</td>\n<td>2019.01.01</td>\n<td>杨鹏达</td>\n<td>平下限逻辑修改，改为由收款金额来确定</td>\n<td>三级</td>\n<td>2019.01.01</td>\n<td>2019.01.01</td>\n<td>修改代码对应字段</td>\n<td></td>\n</tr>\n<tr>\n<td>2</td>\n<td>2019.01.03</td>\n<td>姜王</td>\n<td>修改组织架构，一级经理和总监的过滤条件修改</td>\n<td>二级</td>\n<td>2019.01.04</td>\n<td>2019.01.04</td>\n<td>一级经理和总监的过滤条件修改</td>\n<td></td>\n</tr>\n<tr>\n<td>3</td>\n<td>2019.01.03</td>\n<td>范里</td>\n<td>完成预收接口</td>\n<td>三级</td>\n<td>2019.01.06</td>\n<td>2019.01.06</td>\n<td>在bos-provider模块增加预收接口，前端异步调用后端是否成功的状态</td>\n<td></td>\n</tr>\n<tr>\n<td>4</td>\n<td>2019.01.07</td>\n<td>范里</td>\n<td>安卓TV压缩图片和二维码功能</td>\n<td>二级</td>\n<td>2019.01.09</td>\n<td>2019.01.09</td>\n<td>使用阿里云API进行图片处理</td>\n<td></td>\n</tr>\n<tr>\n<td>5</td>\n<td>2019.01.10</td>\n<td>詹林珠</td>\n<td>内购部分产品无法下单</td>\n<td>三级</td>\n<td>2019.01.11</td>\n<td>2019.01.11</td>\n<td>修改代码逻辑</td>\n<td></td>\n</tr>\n<tr>\n<td>6</td>\n<td>2019.01.14</td>\n<td>陈磊</td>\n<td>TV部分店铺无法切换频道</td>\n<td>三级</td>\n<td>2019.01.14</td>\n<td>2019.01.14</td>\n<td>修改代码逻辑</td>\n<td></td>\n</tr>\n<tr>\n<td>7</td>\n<td>2019.01.14</td>\n<td>姜王</td>\n<td>ios客户端退货列表无法显示一年以前的数据</td>\n<td>二级</td>\n<td>2019.01.14</td>\n<td>2019.01.14</td>\n<td>将过滤条件修改为三年</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n","site":{"data":{}},"excerpt":"","more":"<table>\n<thead>\n<tr>\n<th align=\"center\">序号</th>\n<th align=\"center\">工作模块</th>\n<th align=\"center\">工作内容</th>\n<th align=\"center\">开始时间</th>\n<th align=\"center\">结束时间</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">1</td>\n<td align=\"center\">BOS接口</td>\n<td align=\"center\">样衣尺码限制为只能填写00, 36, 240</td>\n<td align=\"center\">2019.09.12</td>\n<td align=\"center\">2019.09.13</td>\n</tr>\n<tr>\n<td align=\"center\">2</td>\n<td align=\"center\">BOS接口</td>\n<td align=\"center\">修复季节字段参数错误</td>\n<td align=\"center\">2019.09.13</td>\n<td align=\"center\">2019.09.13</td>\n</tr>\n<tr>\n<td align=\"center\">3</td>\n<td align=\"center\">BOS接口</td>\n<td align=\"center\">新增支持款式和样衣的条码更新</td>\n<td align=\"center\">2019.09.16</td>\n<td align=\"center\">2019.09.19</td>\n</tr>\n<tr>\n<td align=\"center\">4</td>\n<td align=\"center\">BOS接口</td>\n<td align=\"center\">新增总工价字段</td>\n<td align=\"center\">2019.09.19</td>\n<td align=\"center\">2019.09.19</td>\n</tr>\n<tr>\n<td align=\"center\">5</td>\n<td align=\"center\">BOS接口</td>\n<td align=\"center\">新增采购退审逻辑</td>\n<td align=\"center\">2019.09.20</td>\n<td align=\"center\">2019.09.24</td>\n</tr>\n<tr>\n<td align=\"center\">6</td>\n<td align=\"center\">BOS接口</td>\n<td align=\"center\">采购审核通过时修改订单合同号</td>\n<td align=\"center\">2019.09.25</td>\n<td align=\"center\">2019.09.30</td>\n</tr>\n<tr>\n<td align=\"center\">7</td>\n<td align=\"center\">BOS接口</td>\n<td align=\"center\">增加若干打印日志</td>\n<td align=\"center\">2019.10.08</td>\n<td align=\"center\">2019.10.08</td>\n</tr>\n<tr>\n<td align=\"center\">8</td>\n<td align=\"center\">整体框架</td>\n<td align=\"center\">搭建ELK+Filebeats日志框架</td>\n<td align=\"center\">2019.09.15</td>\n<td align=\"center\">2019.10.15</td>\n</tr>\n<tr>\n<td align=\"center\">9</td>\n<td align=\"center\">整体框架</td>\n<td align=\"center\">增加所有测试机和部分生产机的日志发送功能</td>\n<td align=\"center\">2019.10.12</td>\n<td align=\"center\">2019.10.16</td>\n</tr>\n<tr>\n<td align=\"center\">10</td>\n<td align=\"center\">PLM接口</td>\n<td align=\"center\">校验PLM线上和测试环境的数据库差异</td>\n<td align=\"center\">2019.10.15</td>\n<td align=\"center\">2019.10.16</td>\n</tr>\n<tr>\n<td align=\"center\">11</td>\n<td align=\"center\">整体框架</td>\n<td align=\"center\">搭建项目基础框架</td>\n<td align=\"center\">2019.10.18</td>\n<td align=\"center\">2019.10.30</td>\n</tr>\n<tr>\n<td align=\"center\">12</td>\n<td align=\"center\">PLM接口</td>\n<td align=\"center\">PLM对接BOS接口字段增加</td>\n<td align=\"center\">2019.10.21</td>\n<td align=\"center\">2019.10.25</td>\n</tr>\n<tr>\n<td align=\"center\">13</td>\n<td align=\"center\">PLM接口</td>\n<td align=\"center\">增加PLM物料详细信息页面</td>\n<td align=\"center\">2019.10.26</td>\n<td align=\"center\">2019.10.29</td>\n</tr>\n<tr>\n<td align=\"center\">14</td>\n<td align=\"center\">O2O接口</td>\n<td align=\"center\">修改首页分类中的图片和接口</td>\n<td align=\"center\">2019.10.28</td>\n<td align=\"center\">2019.10.29</td>\n</tr>\n<tr>\n<td align=\"center\">15</td>\n<td align=\"center\">POS接口</td>\n<td align=\"center\">修正UTI自动生成的PDF图片遮住LOGO的bug</td>\n<td align=\"center\">2019.10.28</td>\n<td align=\"center\">2019.10.29</td>\n</tr>\n<tr>\n<td align=\"center\">16</td>\n<td align=\"center\">PLM接口</td>\n<td align=\"center\">PLM传送面辅料信息的接口中区分面辅料大类</td>\n<td align=\"center\">2019.10.29</td>\n<td align=\"center\">2019.10.30</td>\n</tr>\n<tr>\n<td align=\"center\">17</td>\n<td align=\"center\">PLM接口</td>\n<td align=\"center\">根据PLM来源来判断是否可以更新款号</td>\n<td align=\"center\">2019.10.30</td>\n<td align=\"center\">2019.10.31</td>\n</tr>\n<tr>\n<td align=\"center\">18</td>\n<td align=\"center\">整体框架</td>\n<td align=\"center\">修改ELK日志格式</td>\n<td align=\"center\">2019.11.01</td>\n<td align=\"center\">2019.11.01</td>\n</tr>\n<tr>\n<td align=\"center\">19</td>\n<td align=\"center\">POS接口</td>\n<td align=\"center\">增加支持POS优惠策略中的自动翻倍规则</td>\n<td align=\"center\">2019.11.04</td>\n<td align=\"center\">2019.11.05</td>\n</tr>\n<tr>\n<td align=\"center\">20</td>\n<td align=\"center\">PLM接口</td>\n<td align=\"center\">熟悉并接手PLM项目开发</td>\n<td align=\"center\">2019.11.06</td>\n<td align=\"center\">2019.11.10</td>\n</tr>\n<tr>\n<td align=\"center\">21</td>\n<td align=\"center\">日志框架</td>\n<td align=\"center\">修改日志索引以中文显示</td>\n<td align=\"center\">2019.11.15</td>\n<td align=\"center\">2019.11.16</td>\n</tr>\n<tr>\n<td align=\"center\">22</td>\n<td align=\"center\">BUG修复</td>\n<td align=\"center\">修复短信发送接口</td>\n<td align=\"center\">2019.11.18</td>\n<td align=\"center\">2019.11.20</td>\n</tr>\n<tr>\n<td align=\"center\">23</td>\n<td align=\"center\">微商城接口</td>\n<td align=\"center\">增加对于特定供应商的过滤</td>\n<td align=\"center\">2019.11.22</td>\n<td align=\"center\">2019.11.25</td>\n</tr>\n<tr>\n<td align=\"center\">24</td>\n<td align=\"center\">BUG修复</td>\n<td align=\"center\">修复POS中满减优惠计算错误</td>\n<td align=\"center\">2019.11.26</td>\n<td align=\"center\">2019.11.26</td>\n</tr>\n<tr>\n<td align=\"center\">25</td>\n<td align=\"center\">微商城接口</td>\n<td align=\"center\">新增微商城中领取和查看优惠券的接口</td>\n<td align=\"center\">2019.11.28</td>\n<td align=\"center\">2019.12.05</td>\n</tr>\n<tr>\n<td align=\"center\">26</td>\n<td align=\"center\">PLM项目</td>\n<td align=\"center\">取消外购样衣中借出按钮时清空借出数量，借出人，借出时间</td>\n<td align=\"center\">2019.12.08</td>\n<td align=\"center\">2019.12.09</td>\n</tr>\n<tr>\n<td align=\"center\">27</td>\n<td align=\"center\">微商城接口</td>\n<td align=\"center\">设置特卖会总仓不过滤品牌</td>\n<td align=\"center\">2019.12.10</td>\n<td align=\"center\">2019.12.11</td>\n</tr>\n<tr>\n<td align=\"center\">28</td>\n<td align=\"center\">BUG修复</td>\n<td align=\"center\">修正线上服务器日志级别过低导致服务器空间不足的问题</td>\n<td align=\"center\">2019.12.12</td>\n<td align=\"center\">2019.12.13</td>\n</tr>\n<tr>\n<td align=\"center\">29</td>\n<td align=\"center\">微商城接口</td>\n<td align=\"center\">修改直营全字段统计报表的取数逻辑</td>\n<td align=\"center\">2019.12.16</td>\n<td align=\"center\">2019.12.19</td>\n</tr>\n<tr>\n<td align=\"center\">30</td>\n<td align=\"center\">安卓TV接口</td>\n<td align=\"center\">图片压缩显示，并增加二维码，按照价格波次倒序排列</td>\n<td align=\"center\">2019.12.25</td>\n<td align=\"center\">2019.12.30</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th>序号</th>\n<th>问题时间</th>\n<th>发布人</th>\n<th>问题描述</th>\n<th>紧急程度</th>\n<th>预计完成时间</th>\n<th>实际完成时间</th>\n<th>处理过程</th>\n<th>处理结果</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1</td>\n<td>2019.01.01</td>\n<td>杨鹏达</td>\n<td>平下限逻辑修改，改为由收款金额来确定</td>\n<td>三级</td>\n<td>2019.01.01</td>\n<td>2019.01.01</td>\n<td>修改代码对应字段</td>\n<td></td>\n</tr>\n<tr>\n<td>2</td>\n<td>2019.01.03</td>\n<td>姜王</td>\n<td>修改组织架构，一级经理和总监的过滤条件修改</td>\n<td>二级</td>\n<td>2019.01.04</td>\n<td>2019.01.04</td>\n<td>一级经理和总监的过滤条件修改</td>\n<td></td>\n</tr>\n<tr>\n<td>3</td>\n<td>2019.01.03</td>\n<td>范里</td>\n<td>完成预收接口</td>\n<td>三级</td>\n<td>2019.01.06</td>\n<td>2019.01.06</td>\n<td>在bos-provider模块增加预收接口，前端异步调用后端是否成功的状态</td>\n<td></td>\n</tr>\n<tr>\n<td>4</td>\n<td>2019.01.07</td>\n<td>范里</td>\n<td>安卓TV压缩图片和二维码功能</td>\n<td>二级</td>\n<td>2019.01.09</td>\n<td>2019.01.09</td>\n<td>使用阿里云API进行图片处理</td>\n<td></td>\n</tr>\n<tr>\n<td>5</td>\n<td>2019.01.10</td>\n<td>詹林珠</td>\n<td>内购部分产品无法下单</td>\n<td>三级</td>\n<td>2019.01.11</td>\n<td>2019.01.11</td>\n<td>修改代码逻辑</td>\n<td></td>\n</tr>\n<tr>\n<td>6</td>\n<td>2019.01.14</td>\n<td>陈磊</td>\n<td>TV部分店铺无法切换频道</td>\n<td>三级</td>\n<td>2019.01.14</td>\n<td>2019.01.14</td>\n<td>修改代码逻辑</td>\n<td></td>\n</tr>\n<tr>\n<td>7</td>\n<td>2019.01.14</td>\n<td>姜王</td>\n<td>ios客户端退货列表无法显示一年以前的数据</td>\n<td>二级</td>\n<td>2019.01.14</td>\n<td>2019.01.14</td>\n<td>将过滤条件修改为三年</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n"},{"title":"解决Dubbo无法处理自定义异常的问题","date":"2019-11-04T08:05:58.000Z","comments":1,"_content":"\n### 问题描述\n\nDubbo有一个比较奇怪的问题，目前不知道Apache和Alibaba公司出于什么样的考虑，貌似一直都没有一个比较合适的解决方案，问题如下：\n\n- 项目搭建中你需要自定义一个本地的Exception，命名为比如BusinessException。比较一般的书写代码如下：\n\n  ```java\n  /**\n   * @Author linqiang\n   * @Date 2019/10/24 16:20\n   * @Version 1.0\n   * @Description 业务异常类\n   **/\n  public class BusinessException extends RuntimeException {\n      private Integer code;\n      private String msg;\n  \n      public BusinessException(Integer code, String msg) {\n          this.code = code;\n          this.msg = msg;\n      }\n  \n      public Integer getCode() {\n          return code;\n      }\n  \n      public String getMsg() {\n          return msg;\n      }\n  }\n  ```\n\n- 通常这个BusinessException是要能够跨模块使用的，一般放在commons或者core模块中，同时别的模块的pom.xml文件引入这些模块，使得整个项目都可以使用这个BusinessException。\n\n- 问题来了，如果在A模块调用了B模块，B模块抛出了一个BusinessException，这时A模块接收到的不是BusinessException，而是一个RuntimeException，而且关于BusinessException的细节已经完全丢失，只会剩下一个类名的描述。\n\n### 问题原因\n\n关于该问题出现的原因，参考[这篇文章](https://blog.csdn.net/qq_25673113/article/details/78574514)，归纳一下，就是在Dubbo的传输信息过程中，类ExceptionFilter.java会对Exception做一个过滤，其过滤器的关键代码如下：\n\n```java\n// directly throw if it's checked exception\nif (!(exception instanceof RuntimeException) && (exception instanceof Exception)) {\n    return;\n}\n// directly throw if the exception appears in the signature\ntry {\n    Method method = invoker.getInterface().getMethod(invocation.getMethodName(), invocation.getParameterTypes());\n    Class<?>[] exceptionClassses = method.getExceptionTypes();\n    for (Class<?> exceptionClass : exceptionClassses) {\n        if (exception.getClass().equals(exceptionClass)) {\n            return;\n        }\n    }\n} catch (NoSuchMethodException e) {\n    return;\n}\n<!-- more -->\n// for the exception not found in method's signature, print ERROR message in server's log.\nlogger.error(\"Got unchecked and undeclared exception which called by \" + RpcContext.getContext().getRemoteHost() + \". service: \" + invoker.getInterface().getName() + \", method: \" + invocation.getMethodName() + \", exception: \" + exception.getClass().getName() + \": \" + exception.getMessage(), exception);\n\n// directly throw if exception class and interface class are in the same jar file.\nString serviceFile = ReflectUtils.getCodeBase(invoker.getInterface());\nString exceptionFile = ReflectUtils.getCodeBase(exception.getClass());\nif (serviceFile == null || exceptionFile == null || serviceFile.equals(exceptionFile)) {\n    return;\n}\n// directly throw if it's JDK exception\nString className = exception.getClass().getName();\nif (className.startsWith(\"java.\") || className.startsWith(\"javax.\")) {\n    return;\n}\n\n// directly throw if it's dubbo exception\nif (exception instanceof RpcException) {\n    return;\n}\n\n// otherwise, wrap with RuntimeException and throw back to the client\nappResponse.setException(new RuntimeException(StringUtils.toString(exception)));\nreturn;\n```\n\n即Dubbo在遇到异常时会这样处理：\n\n- 非RuntimeException不处理，直接返回\n- 抛出的是方法上注明的异常，直接返回\n- 如果异常类和接口类在同一jar包，直接返回\n- java或者javax目录下的异常类，直接返回\n- Dubbo自带的RpcException，直接返回\n- 其他的异常，会被封装为RuntimeException返回\n\n### 解决方式\n\n根据以上的分析，那么很显然，自定义异常是被直接封装为RuntimeException返回了，而且只带了自定义异常的类名信息，丢失了别的细节。\n\n那么我们想要自定义异常进行正常返回，那只有满足这个FIlter所写的上述条件。我们可以分析一下：\n\n- 不继承RuntimeException，以检查时异常抛出。**不推荐，正常的业务异常应该是运行时异常。**\n\n- 在接口方法上要写上throws BusinessException，如下：\n\n  ```java\n  public interface DemoService {\n  \n      DemoUser getUserInfo(Long userID) throws BusinessException;\n  \n  }\n  ```\n\n  **不推荐，不符合接口设计原则，且这样是把运行时异常作为检查时异常处理。**\n\n- 把自定义异常类和接口放在同一个包目录下。**不推荐，毕竟这样相当于绑定了异常类的目录，耦合性变高。**\n\n- 改包名，以“java.”或者“javax.”来开头。**不推荐，违反了类命名原则。**\n\n- 继承Dubbo的RpcException。RpcException也是继承了RuntimeException，因此能够以RuntimeException的方式进行处理。**不推荐，相当于自定义异常属于Dubbo的RpcException，这在程序设计上不合理。**\n\n我们发现，想要满足Dubbo的过滤器直接返回异常的条件，我们就必须做出一些违反程序设计的操作，如果一定要从这些方法中选择一种的话，相对来说，**自定义异常类和接口放在同一目录下，以及继承RpcException**是对于程序侵入性更小的方式。\n\n### 其他解决方式\n\n参考 [这篇文章](https://blog.csdn.net/yangzaizi/article/details/80638306)，提供了两种解决方式：\n\n1.在配置文件中配置如下，效果是：关闭ExceptionFIlter，使所有异常绕过该过滤器直接返回。**不推荐，Dubbo既然设置了这个异常过滤类，一定是出于安全和功能上的考虑，直接禁用可能会引发别的问题。**\n\n```yml\ndubbo:\n  provider:\n    filter: -exception\n```\n\n2.修改Dubbo源文件ExceptionFilter，使其遇到BusinessException也能直接返回。**不推荐，相当于定制了本地的Dubbo包，是一个后续很容易被人忽略的大坑。**\n\n### 总结\n\nDubbo在处理自定义异常时，会直接返回RuntimeException，且抹去自定义异常的所有细节，导致无法处理。\n\n本文写下的时候，Dubbo版本为2.7.3，该问题还没有非常完美的解决方案，相对来说，把**自定义异常和接口类放在同一目录下**是侵入性最小的方案。","source":"_posts/解决Dubbo无法处理自定义异常的问题.md","raw":"---\ntitle: 解决Dubbo无法处理自定义异常的问题\ndate: 2019-11-04 16:05:58\ntags: \n- solved\ncomments: true\ncategories: \n- 学习\n- 搭建相关\n---\n\n### 问题描述\n\nDubbo有一个比较奇怪的问题，目前不知道Apache和Alibaba公司出于什么样的考虑，貌似一直都没有一个比较合适的解决方案，问题如下：\n\n- 项目搭建中你需要自定义一个本地的Exception，命名为比如BusinessException。比较一般的书写代码如下：\n\n  ```java\n  /**\n   * @Author linqiang\n   * @Date 2019/10/24 16:20\n   * @Version 1.0\n   * @Description 业务异常类\n   **/\n  public class BusinessException extends RuntimeException {\n      private Integer code;\n      private String msg;\n  \n      public BusinessException(Integer code, String msg) {\n          this.code = code;\n          this.msg = msg;\n      }\n  \n      public Integer getCode() {\n          return code;\n      }\n  \n      public String getMsg() {\n          return msg;\n      }\n  }\n  ```\n\n- 通常这个BusinessException是要能够跨模块使用的，一般放在commons或者core模块中，同时别的模块的pom.xml文件引入这些模块，使得整个项目都可以使用这个BusinessException。\n\n- 问题来了，如果在A模块调用了B模块，B模块抛出了一个BusinessException，这时A模块接收到的不是BusinessException，而是一个RuntimeException，而且关于BusinessException的细节已经完全丢失，只会剩下一个类名的描述。\n\n### 问题原因\n\n关于该问题出现的原因，参考[这篇文章](https://blog.csdn.net/qq_25673113/article/details/78574514)，归纳一下，就是在Dubbo的传输信息过程中，类ExceptionFilter.java会对Exception做一个过滤，其过滤器的关键代码如下：\n\n```java\n// directly throw if it's checked exception\nif (!(exception instanceof RuntimeException) && (exception instanceof Exception)) {\n    return;\n}\n// directly throw if the exception appears in the signature\ntry {\n    Method method = invoker.getInterface().getMethod(invocation.getMethodName(), invocation.getParameterTypes());\n    Class<?>[] exceptionClassses = method.getExceptionTypes();\n    for (Class<?> exceptionClass : exceptionClassses) {\n        if (exception.getClass().equals(exceptionClass)) {\n            return;\n        }\n    }\n} catch (NoSuchMethodException e) {\n    return;\n}\n<!-- more -->\n// for the exception not found in method's signature, print ERROR message in server's log.\nlogger.error(\"Got unchecked and undeclared exception which called by \" + RpcContext.getContext().getRemoteHost() + \". service: \" + invoker.getInterface().getName() + \", method: \" + invocation.getMethodName() + \", exception: \" + exception.getClass().getName() + \": \" + exception.getMessage(), exception);\n\n// directly throw if exception class and interface class are in the same jar file.\nString serviceFile = ReflectUtils.getCodeBase(invoker.getInterface());\nString exceptionFile = ReflectUtils.getCodeBase(exception.getClass());\nif (serviceFile == null || exceptionFile == null || serviceFile.equals(exceptionFile)) {\n    return;\n}\n// directly throw if it's JDK exception\nString className = exception.getClass().getName();\nif (className.startsWith(\"java.\") || className.startsWith(\"javax.\")) {\n    return;\n}\n\n// directly throw if it's dubbo exception\nif (exception instanceof RpcException) {\n    return;\n}\n\n// otherwise, wrap with RuntimeException and throw back to the client\nappResponse.setException(new RuntimeException(StringUtils.toString(exception)));\nreturn;\n```\n\n即Dubbo在遇到异常时会这样处理：\n\n- 非RuntimeException不处理，直接返回\n- 抛出的是方法上注明的异常，直接返回\n- 如果异常类和接口类在同一jar包，直接返回\n- java或者javax目录下的异常类，直接返回\n- Dubbo自带的RpcException，直接返回\n- 其他的异常，会被封装为RuntimeException返回\n\n### 解决方式\n\n根据以上的分析，那么很显然，自定义异常是被直接封装为RuntimeException返回了，而且只带了自定义异常的类名信息，丢失了别的细节。\n\n那么我们想要自定义异常进行正常返回，那只有满足这个FIlter所写的上述条件。我们可以分析一下：\n\n- 不继承RuntimeException，以检查时异常抛出。**不推荐，正常的业务异常应该是运行时异常。**\n\n- 在接口方法上要写上throws BusinessException，如下：\n\n  ```java\n  public interface DemoService {\n  \n      DemoUser getUserInfo(Long userID) throws BusinessException;\n  \n  }\n  ```\n\n  **不推荐，不符合接口设计原则，且这样是把运行时异常作为检查时异常处理。**\n\n- 把自定义异常类和接口放在同一个包目录下。**不推荐，毕竟这样相当于绑定了异常类的目录，耦合性变高。**\n\n- 改包名，以“java.”或者“javax.”来开头。**不推荐，违反了类命名原则。**\n\n- 继承Dubbo的RpcException。RpcException也是继承了RuntimeException，因此能够以RuntimeException的方式进行处理。**不推荐，相当于自定义异常属于Dubbo的RpcException，这在程序设计上不合理。**\n\n我们发现，想要满足Dubbo的过滤器直接返回异常的条件，我们就必须做出一些违反程序设计的操作，如果一定要从这些方法中选择一种的话，相对来说，**自定义异常类和接口放在同一目录下，以及继承RpcException**是对于程序侵入性更小的方式。\n\n### 其他解决方式\n\n参考 [这篇文章](https://blog.csdn.net/yangzaizi/article/details/80638306)，提供了两种解决方式：\n\n1.在配置文件中配置如下，效果是：关闭ExceptionFIlter，使所有异常绕过该过滤器直接返回。**不推荐，Dubbo既然设置了这个异常过滤类，一定是出于安全和功能上的考虑，直接禁用可能会引发别的问题。**\n\n```yml\ndubbo:\n  provider:\n    filter: -exception\n```\n\n2.修改Dubbo源文件ExceptionFilter，使其遇到BusinessException也能直接返回。**不推荐，相当于定制了本地的Dubbo包，是一个后续很容易被人忽略的大坑。**\n\n### 总结\n\nDubbo在处理自定义异常时，会直接返回RuntimeException，且抹去自定义异常的所有细节，导致无法处理。\n\n本文写下的时候，Dubbo版本为2.7.3，该问题还没有非常完美的解决方案，相对来说，把**自定义异常和接口类放在同一目录下**是侵入性最小的方案。","slug":"解决Dubbo无法处理自定义异常的问题","published":1,"updated":"2021-11-23T02:13:27.000Z","_id":"ckwadg4ni000x73cf6stegnvr","layout":"post","photos":[],"link":"","content":"<h3 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h3><p>Dubbo有一个比较奇怪的问题，目前不知道Apache和Alibaba公司出于什么样的考虑，貌似一直都没有一个比较合适的解决方案，问题如下：</p>\n<ul>\n<li><p>项目搭建中你需要自定义一个本地的Exception，命名为比如BusinessException。比较一般的书写代码如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Author</span> linqiang</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Date</span> 2019/10/24 16:20</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span> 业务异常类</span></span><br><span class=\"line\"><span class=\"comment\"> **/</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BusinessException</span> <span class=\"keyword\">extends</span> <span class=\"title\">RuntimeException</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer code;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String msg;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">BusinessException</span><span class=\"params\">(Integer code, String msg)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.code = code;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.msg = msg;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Integer <span class=\"title\">getCode</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> code;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getMsg</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> msg;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>通常这个BusinessException是要能够跨模块使用的，一般放在commons或者core模块中，同时别的模块的pom.xml文件引入这些模块，使得整个项目都可以使用这个BusinessException。</p>\n</li>\n<li><p>问题来了，如果在A模块调用了B模块，B模块抛出了一个BusinessException，这时A模块接收到的不是BusinessException，而是一个RuntimeException，而且关于BusinessException的细节已经完全丢失，只会剩下一个类名的描述。</p>\n</li>\n</ul>\n<h3 id=\"问题原因\"><a href=\"#问题原因\" class=\"headerlink\" title=\"问题原因\"></a>问题原因</h3><p>关于该问题出现的原因，参考<a href=\"https://blog.csdn.net/qq_25673113/article/details/78574514\">这篇文章</a>，归纳一下，就是在Dubbo的传输信息过程中，类ExceptionFilter.java会对Exception做一个过滤，其过滤器的关键代码如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// directly throw if it&#x27;s checked exception</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (!(exception <span class=\"keyword\">instanceof</span> RuntimeException) &amp;&amp; (exception <span class=\"keyword\">instanceof</span> Exception)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// directly throw if the exception appears in the signature</span></span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    Method method = invoker.getInterface().getMethod(invocation.getMethodName(), invocation.getParameterTypes());</span><br><span class=\"line\">    Class&lt;?&gt;[] exceptionClassses = method.getExceptionTypes();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (Class&lt;?&gt; exceptionClass : exceptionClassses) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (exception.getClass().equals(exceptionClass)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span> (NoSuchMethodException e) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;!-- more --&gt;</span><br><span class=\"line\"><span class=\"comment\">// for the exception not found in method&#x27;s signature, print ERROR message in server&#x27;s log.</span></span><br><span class=\"line\">logger.error(<span class=\"string\">&quot;Got unchecked and undeclared exception which called by &quot;</span> + RpcContext.getContext().getRemoteHost() + <span class=\"string\">&quot;. service: &quot;</span> + invoker.getInterface().getName() + <span class=\"string\">&quot;, method: &quot;</span> + invocation.getMethodName() + <span class=\"string\">&quot;, exception: &quot;</span> + exception.getClass().getName() + <span class=\"string\">&quot;: &quot;</span> + exception.getMessage(), exception);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// directly throw if exception class and interface class are in the same jar file.</span></span><br><span class=\"line\">String serviceFile = ReflectUtils.getCodeBase(invoker.getInterface());</span><br><span class=\"line\">String exceptionFile = ReflectUtils.getCodeBase(exception.getClass());</span><br><span class=\"line\"><span class=\"keyword\">if</span> (serviceFile == <span class=\"keyword\">null</span> || exceptionFile == <span class=\"keyword\">null</span> || serviceFile.equals(exceptionFile)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// directly throw if it&#x27;s JDK exception</span></span><br><span class=\"line\">String className = exception.getClass().getName();</span><br><span class=\"line\"><span class=\"keyword\">if</span> (className.startsWith(<span class=\"string\">&quot;java.&quot;</span>) || className.startsWith(<span class=\"string\">&quot;javax.&quot;</span>)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// directly throw if it&#x27;s dubbo exception</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (exception <span class=\"keyword\">instanceof</span> RpcException) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// otherwise, wrap with RuntimeException and throw back to the client</span></span><br><span class=\"line\">appResponse.setException(<span class=\"keyword\">new</span> RuntimeException(StringUtils.toString(exception)));</span><br><span class=\"line\"><span class=\"keyword\">return</span>;</span><br></pre></td></tr></table></figure>\n\n<p>即Dubbo在遇到异常时会这样处理：</p>\n<ul>\n<li>非RuntimeException不处理，直接返回</li>\n<li>抛出的是方法上注明的异常，直接返回</li>\n<li>如果异常类和接口类在同一jar包，直接返回</li>\n<li>java或者javax目录下的异常类，直接返回</li>\n<li>Dubbo自带的RpcException，直接返回</li>\n<li>其他的异常，会被封装为RuntimeException返回</li>\n</ul>\n<h3 id=\"解决方式\"><a href=\"#解决方式\" class=\"headerlink\" title=\"解决方式\"></a>解决方式</h3><p>根据以上的分析，那么很显然，自定义异常是被直接封装为RuntimeException返回了，而且只带了自定义异常的类名信息，丢失了别的细节。</p>\n<p>那么我们想要自定义异常进行正常返回，那只有满足这个FIlter所写的上述条件。我们可以分析一下：</p>\n<ul>\n<li><p>不继承RuntimeException，以检查时异常抛出。<strong>不推荐，正常的业务异常应该是运行时异常。</strong></p>\n</li>\n<li><p>在接口方法上要写上throws BusinessException，如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">DemoService</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\">DemoUser <span class=\"title\">getUserInfo</span><span class=\"params\">(Long userID)</span> <span class=\"keyword\">throws</span> BusinessException</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>不推荐，不符合接口设计原则，且这样是把运行时异常作为检查时异常处理。</strong></p>\n</li>\n<li><p>把自定义异常类和接口放在同一个包目录下。<strong>不推荐，毕竟这样相当于绑定了异常类的目录，耦合性变高。</strong></p>\n</li>\n<li><p>改包名，以“java.”或者“javax.”来开头。<strong>不推荐，违反了类命名原则。</strong></p>\n</li>\n<li><p>继承Dubbo的RpcException。RpcException也是继承了RuntimeException，因此能够以RuntimeException的方式进行处理。<strong>不推荐，相当于自定义异常属于Dubbo的RpcException，这在程序设计上不合理。</strong></p>\n</li>\n</ul>\n<p>我们发现，想要满足Dubbo的过滤器直接返回异常的条件，我们就必须做出一些违反程序设计的操作，如果一定要从这些方法中选择一种的话，相对来说，<strong>自定义异常类和接口放在同一目录下，以及继承RpcException</strong>是对于程序侵入性更小的方式。</p>\n<h3 id=\"其他解决方式\"><a href=\"#其他解决方式\" class=\"headerlink\" title=\"其他解决方式\"></a>其他解决方式</h3><p>参考 <a href=\"https://blog.csdn.net/yangzaizi/article/details/80638306\">这篇文章</a>，提供了两种解决方式：</p>\n<p>1.在配置文件中配置如下，效果是：关闭ExceptionFIlter，使所有异常绕过该过滤器直接返回。<strong>不推荐，Dubbo既然设置了这个异常过滤类，一定是出于安全和功能上的考虑，直接禁用可能会引发别的问题。</strong></p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">dubbo:</span></span><br><span class=\"line\">  <span class=\"attr\">provider:</span></span><br><span class=\"line\">    <span class=\"attr\">filter:</span> <span class=\"string\">-exception</span></span><br></pre></td></tr></table></figure>\n\n<p>2.修改Dubbo源文件ExceptionFilter，使其遇到BusinessException也能直接返回。<strong>不推荐，相当于定制了本地的Dubbo包，是一个后续很容易被人忽略的大坑。</strong></p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>Dubbo在处理自定义异常时，会直接返回RuntimeException，且抹去自定义异常的所有细节，导致无法处理。</p>\n<p>本文写下的时候，Dubbo版本为2.7.3，该问题还没有非常完美的解决方案，相对来说，把<strong>自定义异常和接口类放在同一目录下</strong>是侵入性最小的方案。</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h3><p>Dubbo有一个比较奇怪的问题，目前不知道Apache和Alibaba公司出于什么样的考虑，貌似一直都没有一个比较合适的解决方案，问题如下：</p>\n<ul>\n<li><p>项目搭建中你需要自定义一个本地的Exception，命名为比如BusinessException。比较一般的书写代码如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Author</span> linqiang</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Date</span> 2019/10/24 16:20</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Version</span> 1.0</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Description</span> 业务异常类</span></span><br><span class=\"line\"><span class=\"comment\"> **/</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BusinessException</span> <span class=\"keyword\">extends</span> <span class=\"title\">RuntimeException</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer code;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String msg;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">BusinessException</span><span class=\"params\">(Integer code, String msg)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.code = code;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.msg = msg;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Integer <span class=\"title\">getCode</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> code;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getMsg</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> msg;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>通常这个BusinessException是要能够跨模块使用的，一般放在commons或者core模块中，同时别的模块的pom.xml文件引入这些模块，使得整个项目都可以使用这个BusinessException。</p>\n</li>\n<li><p>问题来了，如果在A模块调用了B模块，B模块抛出了一个BusinessException，这时A模块接收到的不是BusinessException，而是一个RuntimeException，而且关于BusinessException的细节已经完全丢失，只会剩下一个类名的描述。</p>\n</li>\n</ul>\n<h3 id=\"问题原因\"><a href=\"#问题原因\" class=\"headerlink\" title=\"问题原因\"></a>问题原因</h3><p>关于该问题出现的原因，参考<a href=\"https://blog.csdn.net/qq_25673113/article/details/78574514\">这篇文章</a>，归纳一下，就是在Dubbo的传输信息过程中，类ExceptionFilter.java会对Exception做一个过滤，其过滤器的关键代码如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// directly throw if it&#x27;s checked exception</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (!(exception <span class=\"keyword\">instanceof</span> RuntimeException) &amp;&amp; (exception <span class=\"keyword\">instanceof</span> Exception)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// directly throw if the exception appears in the signature</span></span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    Method method = invoker.getInterface().getMethod(invocation.getMethodName(), invocation.getParameterTypes());</span><br><span class=\"line\">    Class&lt;?&gt;[] exceptionClassses = method.getExceptionTypes();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (Class&lt;?&gt; exceptionClass : exceptionClassses) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (exception.getClass().equals(exceptionClass)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span> (NoSuchMethodException e) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;!-- more --&gt;</span><br><span class=\"line\"><span class=\"comment\">// for the exception not found in method&#x27;s signature, print ERROR message in server&#x27;s log.</span></span><br><span class=\"line\">logger.error(<span class=\"string\">&quot;Got unchecked and undeclared exception which called by &quot;</span> + RpcContext.getContext().getRemoteHost() + <span class=\"string\">&quot;. service: &quot;</span> + invoker.getInterface().getName() + <span class=\"string\">&quot;, method: &quot;</span> + invocation.getMethodName() + <span class=\"string\">&quot;, exception: &quot;</span> + exception.getClass().getName() + <span class=\"string\">&quot;: &quot;</span> + exception.getMessage(), exception);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// directly throw if exception class and interface class are in the same jar file.</span></span><br><span class=\"line\">String serviceFile = ReflectUtils.getCodeBase(invoker.getInterface());</span><br><span class=\"line\">String exceptionFile = ReflectUtils.getCodeBase(exception.getClass());</span><br><span class=\"line\"><span class=\"keyword\">if</span> (serviceFile == <span class=\"keyword\">null</span> || exceptionFile == <span class=\"keyword\">null</span> || serviceFile.equals(exceptionFile)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// directly throw if it&#x27;s JDK exception</span></span><br><span class=\"line\">String className = exception.getClass().getName();</span><br><span class=\"line\"><span class=\"keyword\">if</span> (className.startsWith(<span class=\"string\">&quot;java.&quot;</span>) || className.startsWith(<span class=\"string\">&quot;javax.&quot;</span>)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// directly throw if it&#x27;s dubbo exception</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (exception <span class=\"keyword\">instanceof</span> RpcException) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// otherwise, wrap with RuntimeException and throw back to the client</span></span><br><span class=\"line\">appResponse.setException(<span class=\"keyword\">new</span> RuntimeException(StringUtils.toString(exception)));</span><br><span class=\"line\"><span class=\"keyword\">return</span>;</span><br></pre></td></tr></table></figure>\n\n<p>即Dubbo在遇到异常时会这样处理：</p>\n<ul>\n<li>非RuntimeException不处理，直接返回</li>\n<li>抛出的是方法上注明的异常，直接返回</li>\n<li>如果异常类和接口类在同一jar包，直接返回</li>\n<li>java或者javax目录下的异常类，直接返回</li>\n<li>Dubbo自带的RpcException，直接返回</li>\n<li>其他的异常，会被封装为RuntimeException返回</li>\n</ul>\n<h3 id=\"解决方式\"><a href=\"#解决方式\" class=\"headerlink\" title=\"解决方式\"></a>解决方式</h3><p>根据以上的分析，那么很显然，自定义异常是被直接封装为RuntimeException返回了，而且只带了自定义异常的类名信息，丢失了别的细节。</p>\n<p>那么我们想要自定义异常进行正常返回，那只有满足这个FIlter所写的上述条件。我们可以分析一下：</p>\n<ul>\n<li><p>不继承RuntimeException，以检查时异常抛出。<strong>不推荐，正常的业务异常应该是运行时异常。</strong></p>\n</li>\n<li><p>在接口方法上要写上throws BusinessException，如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">DemoService</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\">DemoUser <span class=\"title\">getUserInfo</span><span class=\"params\">(Long userID)</span> <span class=\"keyword\">throws</span> BusinessException</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>不推荐，不符合接口设计原则，且这样是把运行时异常作为检查时异常处理。</strong></p>\n</li>\n<li><p>把自定义异常类和接口放在同一个包目录下。<strong>不推荐，毕竟这样相当于绑定了异常类的目录，耦合性变高。</strong></p>\n</li>\n<li><p>改包名，以“java.”或者“javax.”来开头。<strong>不推荐，违反了类命名原则。</strong></p>\n</li>\n<li><p>继承Dubbo的RpcException。RpcException也是继承了RuntimeException，因此能够以RuntimeException的方式进行处理。<strong>不推荐，相当于自定义异常属于Dubbo的RpcException，这在程序设计上不合理。</strong></p>\n</li>\n</ul>\n<p>我们发现，想要满足Dubbo的过滤器直接返回异常的条件，我们就必须做出一些违反程序设计的操作，如果一定要从这些方法中选择一种的话，相对来说，<strong>自定义异常类和接口放在同一目录下，以及继承RpcException</strong>是对于程序侵入性更小的方式。</p>\n<h3 id=\"其他解决方式\"><a href=\"#其他解决方式\" class=\"headerlink\" title=\"其他解决方式\"></a>其他解决方式</h3><p>参考 <a href=\"https://blog.csdn.net/yangzaizi/article/details/80638306\">这篇文章</a>，提供了两种解决方式：</p>\n<p>1.在配置文件中配置如下，效果是：关闭ExceptionFIlter，使所有异常绕过该过滤器直接返回。<strong>不推荐，Dubbo既然设置了这个异常过滤类，一定是出于安全和功能上的考虑，直接禁用可能会引发别的问题。</strong></p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">dubbo:</span></span><br><span class=\"line\">  <span class=\"attr\">provider:</span></span><br><span class=\"line\">    <span class=\"attr\">filter:</span> <span class=\"string\">-exception</span></span><br></pre></td></tr></table></figure>\n\n<p>2.修改Dubbo源文件ExceptionFilter，使其遇到BusinessException也能直接返回。<strong>不推荐，相当于定制了本地的Dubbo包，是一个后续很容易被人忽略的大坑。</strong></p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>Dubbo在处理自定义异常时，会直接返回RuntimeException，且抹去自定义异常的所有细节，导致无法处理。</p>\n<p>本文写下的时候，Dubbo版本为2.7.3，该问题还没有非常完美的解决方案，相对来说，把<strong>自定义异常和接口类放在同一目录下</strong>是侵入性最小的方案。</p>\n"},{"title":"记一次用代码分辨坑爹保险产品的经历","date":"2021-11-19T07:16:52.000Z","comments":1,"_content":"## 问题起源\n这两天刚好一年交一次的保险开始催我交年费，最近由于基金太绿，手头实在有点紧，因此这个年费一直拖着还没交，于是我动了是不是要退保的想法。\n\n而销售则继续去年的话术，说我这个交满20年就可以不交了，现在交到12年退保太可惜了之类的。\n\n今年我没有轻易把这话听进去，于是我又去搜了下这个保险产品的条例，这个产品的介绍如下图。\n![](1.png)\n\n按照我当前的情况，排除意外身故的情况，简单概括下就是：\n- 我每年交7600，交20年\n- 到66岁每两年领一次总保额(总保额是50000)的8%，我这份产品从19岁开始买，到66岁总共可以领23次\n- 66岁一次性给100%全保额\n- 66岁开始每年领一次总保额的8%，我假设我能活到88岁，那总共领22次\n<!-- more -->\n\n## 简单计算\n剔除别的因素，最简单的加减算法就是\n- 交的保费是20*7600 = 152000\n- 到66岁每两年领一次8%，领23次，那就是23*(50000*0.08)=92000\n- 66岁一次性领100%总保额，就是50000\n- 66-88岁每年领一次8%，领22次，22*(50000*0.08)=88000\n简单说来总保费是 **152000**，**最后收益是230000**\n\n其实就算是这么简单的计算，也会发现这是一份很坑的产品，230000的最终收益前提是要活到88岁。而我在39岁就会交完152000的总保费，相当于从39岁\n到88岁之间的49年时间，这份产品只帮我赚到了8万的收益，如果换算成一个理财产品的话，那这份产品的年收益是可怜的0.9%……\n\n我感觉已经不用分析了，这破产品分析到这已经是垃圾中的战斗机了啊。\n\n但是不行，我还要继续分析，因为如果考虑到通货膨胀率之类的东西，我得出的结论是，买这个产品，甚至收益完全是负的。。。\n\n## 代码分析\n之前的分析还是有点粗浅的，如果仔细分析的话其实还需要考虑至少下面几点\n- 产品分红会每年加到总保额里，每年收益应当是(50000+分红)*0.08\n- 钱是会通货膨胀的，今年给你的收益4000，到明年就不值4000了\n- 同样的因为通货膨胀，你今年交的保费7600，到明年可能就不值7600了\n\n我直接上代码解决吧\n```js\nfunction countInsuranceIncome() {\n    let eachYearOut = 7600;//每年缴纳费用\n    let eachYearRate = 0.08;//年金率\n    let inflationRate = 0.05;//每年通胀率\n    let eachYearIncreaseRate = 0.01;//每年获得分红率\n    let allMoney = 50000;//总保额\n    let allOut = 0;//总支出\n    let allIn = 0;//总收入\n    for(let i = 1; i <= 20; i++) {\n        if (i > 1) {\n            // 从第二年开始算通胀\n            eachYearOut = eachYearOut * (1-inflationRate);\n        }\n        allOut = allOut + eachYearOut;\n    }\n    // 到66岁每两年领一次8%\n    // 总共领23次\n    for (let i = 1; i <= 23; i++) {\n        let rate = 1;\n        if (i > 1) {\n            // 从第二年开始算通胀\n            rate = 1 + eachYearIncreaseRate - inflationRate;\n        }\n        // 总保额每年变化，由于是两年一次，所以乘两次\n        allMoney = allMoney * rate * rate;\n        console.log(\"第\" + i + \"次计算得总保额为\" + allMoney.toFixed(2));\n        allIn = allMoney * eachYearRate + allIn;\n        console.log(\"第\" + i + \"次年金为\" + (allMoney * eachYearRate).toFixed(2));\n    }\n    // 66岁一次性给100%\n    allIn = allIn + allMoney;\n    //66岁开始假设活到88岁，每年领一次8%\n    //总共领22次\n    for (let i = 1; i <= 22; i++) {\n        allIn = allMoney * (1 + eachYearIncreaseRate - inflationRate) * eachYearRate + allIn;\n    }\n    console.log('总共支出' + allOut.toFixed(2) + '，总共收入' + allIn.toFixed(2));\n}\n```\n代码逻辑基本上就是把我列的条件都写进去了，不多解释，总之最后的计算结果非常让我震惊。\n假设从今年开始买这个产品，基于当前物价水平\n- 基于5%的通胀率，1%的分红率\n- 付出**97510.14**元\n- 收益**65532.89**元 \n- 收益 **-31977.25**元\n\n也就是说考虑到通货膨胀，拉长到将近70年的周期，这份产品最终是让你倒亏3万多。\n而通胀率我设置的其实不算高，5%算是偏低水平，1%的每年分红率我甚至还比现实更高。而且现实中也基本不太可能每年保持1%的分红率，如果调整成6%的通胀率，和0.9%的分红率，\n- 基于6%的通胀率，0.9%的分红率\n- 付出**89919.88**元\n- 收益**49962.45**元\n- 收益 **-39957.43**元\n\n不得不说，算还是保险公司会算，你乍一看，只要交20年，然后长达70年给你持续分红和年金，似乎怎么想都是划算的，而且分红方式还按照不固定的分红增长，给人以更大的迷惑性。\n让你如果不依靠专业的工具，自己根本算不清楚，只能任保险公司鱼肉。\n\n最后，如果想要这份产品能够盈利，那最低条件是通胀率要小于等于3%，且年均分红率要稳定在1%，这样70年后能够血赚2000。。。\n\n\n","source":"_posts/记一次用代码分辨坑爹保险产品的经历.md","raw":"---\ntitle: 记一次用代码分辨坑爹保险产品的经历\ndate: 2021-11-19 15:16:52\ntags:\n- solved\ncomments: true\ncategories:\n- 学习\n---\n## 问题起源\n这两天刚好一年交一次的保险开始催我交年费，最近由于基金太绿，手头实在有点紧，因此这个年费一直拖着还没交，于是我动了是不是要退保的想法。\n\n而销售则继续去年的话术，说我这个交满20年就可以不交了，现在交到12年退保太可惜了之类的。\n\n今年我没有轻易把这话听进去，于是我又去搜了下这个保险产品的条例，这个产品的介绍如下图。\n![](1.png)\n\n按照我当前的情况，排除意外身故的情况，简单概括下就是：\n- 我每年交7600，交20年\n- 到66岁每两年领一次总保额(总保额是50000)的8%，我这份产品从19岁开始买，到66岁总共可以领23次\n- 66岁一次性给100%全保额\n- 66岁开始每年领一次总保额的8%，我假设我能活到88岁，那总共领22次\n<!-- more -->\n\n## 简单计算\n剔除别的因素，最简单的加减算法就是\n- 交的保费是20*7600 = 152000\n- 到66岁每两年领一次8%，领23次，那就是23*(50000*0.08)=92000\n- 66岁一次性领100%总保额，就是50000\n- 66-88岁每年领一次8%，领22次，22*(50000*0.08)=88000\n简单说来总保费是 **152000**，**最后收益是230000**\n\n其实就算是这么简单的计算，也会发现这是一份很坑的产品，230000的最终收益前提是要活到88岁。而我在39岁就会交完152000的总保费，相当于从39岁\n到88岁之间的49年时间，这份产品只帮我赚到了8万的收益，如果换算成一个理财产品的话，那这份产品的年收益是可怜的0.9%……\n\n我感觉已经不用分析了，这破产品分析到这已经是垃圾中的战斗机了啊。\n\n但是不行，我还要继续分析，因为如果考虑到通货膨胀率之类的东西，我得出的结论是，买这个产品，甚至收益完全是负的。。。\n\n## 代码分析\n之前的分析还是有点粗浅的，如果仔细分析的话其实还需要考虑至少下面几点\n- 产品分红会每年加到总保额里，每年收益应当是(50000+分红)*0.08\n- 钱是会通货膨胀的，今年给你的收益4000，到明年就不值4000了\n- 同样的因为通货膨胀，你今年交的保费7600，到明年可能就不值7600了\n\n我直接上代码解决吧\n```js\nfunction countInsuranceIncome() {\n    let eachYearOut = 7600;//每年缴纳费用\n    let eachYearRate = 0.08;//年金率\n    let inflationRate = 0.05;//每年通胀率\n    let eachYearIncreaseRate = 0.01;//每年获得分红率\n    let allMoney = 50000;//总保额\n    let allOut = 0;//总支出\n    let allIn = 0;//总收入\n    for(let i = 1; i <= 20; i++) {\n        if (i > 1) {\n            // 从第二年开始算通胀\n            eachYearOut = eachYearOut * (1-inflationRate);\n        }\n        allOut = allOut + eachYearOut;\n    }\n    // 到66岁每两年领一次8%\n    // 总共领23次\n    for (let i = 1; i <= 23; i++) {\n        let rate = 1;\n        if (i > 1) {\n            // 从第二年开始算通胀\n            rate = 1 + eachYearIncreaseRate - inflationRate;\n        }\n        // 总保额每年变化，由于是两年一次，所以乘两次\n        allMoney = allMoney * rate * rate;\n        console.log(\"第\" + i + \"次计算得总保额为\" + allMoney.toFixed(2));\n        allIn = allMoney * eachYearRate + allIn;\n        console.log(\"第\" + i + \"次年金为\" + (allMoney * eachYearRate).toFixed(2));\n    }\n    // 66岁一次性给100%\n    allIn = allIn + allMoney;\n    //66岁开始假设活到88岁，每年领一次8%\n    //总共领22次\n    for (let i = 1; i <= 22; i++) {\n        allIn = allMoney * (1 + eachYearIncreaseRate - inflationRate) * eachYearRate + allIn;\n    }\n    console.log('总共支出' + allOut.toFixed(2) + '，总共收入' + allIn.toFixed(2));\n}\n```\n代码逻辑基本上就是把我列的条件都写进去了，不多解释，总之最后的计算结果非常让我震惊。\n假设从今年开始买这个产品，基于当前物价水平\n- 基于5%的通胀率，1%的分红率\n- 付出**97510.14**元\n- 收益**65532.89**元 \n- 收益 **-31977.25**元\n\n也就是说考虑到通货膨胀，拉长到将近70年的周期，这份产品最终是让你倒亏3万多。\n而通胀率我设置的其实不算高，5%算是偏低水平，1%的每年分红率我甚至还比现实更高。而且现实中也基本不太可能每年保持1%的分红率，如果调整成6%的通胀率，和0.9%的分红率，\n- 基于6%的通胀率，0.9%的分红率\n- 付出**89919.88**元\n- 收益**49962.45**元\n- 收益 **-39957.43**元\n\n不得不说，算还是保险公司会算，你乍一看，只要交20年，然后长达70年给你持续分红和年金，似乎怎么想都是划算的，而且分红方式还按照不固定的分红增长，给人以更大的迷惑性。\n让你如果不依靠专业的工具，自己根本算不清楚，只能任保险公司鱼肉。\n\n最后，如果想要这份产品能够盈利，那最低条件是通胀率要小于等于3%，且年均分红率要稳定在1%，这样70年后能够血赚2000。。。\n\n\n","slug":"记一次用代码分辨坑爹保险产品的经历","published":1,"updated":"2021-11-23T01:43:46.000Z","_id":"ckwadg4nw002d73cf3w106wyu","layout":"post","photos":[],"link":"","content":"<h2 id=\"问题起源\"><a href=\"#问题起源\" class=\"headerlink\" title=\"问题起源\"></a>问题起源</h2><p>这两天刚好一年交一次的保险开始催我交年费，最近由于基金太绿，手头实在有点紧，因此这个年费一直拖着还没交，于是我动了是不是要退保的想法。</p>\n<p>而销售则继续去年的话术，说我这个交满20年就可以不交了，现在交到12年退保太可惜了之类的。</p>\n<p>今年我没有轻易把这话听进去，于是我又去搜了下这个保险产品的条例，这个产品的介绍如下图。<br><img src=\"/2021/11/19/%E8%AE%B0%E4%B8%80%E6%AC%A1%E7%94%A8%E4%BB%A3%E7%A0%81%E5%88%86%E8%BE%A8%E5%9D%91%E7%88%B9%E4%BF%9D%E9%99%A9%E4%BA%A7%E5%93%81%E7%9A%84%E7%BB%8F%E5%8E%86/1.png\"></p>\n<p>按照我当前的情况，排除意外身故的情况，简单概括下就是：</p>\n<ul>\n<li>我每年交7600，交20年</li>\n<li>到66岁每两年领一次总保额(总保额是50000)的8%，我这份产品从19岁开始买，到66岁总共可以领23次</li>\n<li>66岁一次性给100%全保额</li>\n<li>66岁开始每年领一次总保额的8%，我假设我能活到88岁，那总共领22次<span id=\"more\"></span></li>\n</ul>\n<h2 id=\"简单计算\"><a href=\"#简单计算\" class=\"headerlink\" title=\"简单计算\"></a>简单计算</h2><p>剔除别的因素，最简单的加减算法就是</p>\n<ul>\n<li>交的保费是20*7600 = 152000</li>\n<li>到66岁每两年领一次8%，领23次，那就是23*(50000*0.08)=92000</li>\n<li>66岁一次性领100%总保额，就是50000</li>\n<li>66-88岁每年领一次8%，领22次，22*(50000*0.08)=88000<br>简单说来总保费是 <strong>152000</strong>，<strong>最后收益是230000</strong></li>\n</ul>\n<p>其实就算是这么简单的计算，也会发现这是一份很坑的产品，230000的最终收益前提是要活到88岁。而我在39岁就会交完152000的总保费，相当于从39岁<br>到88岁之间的49年时间，这份产品只帮我赚到了8万的收益，如果换算成一个理财产品的话，那这份产品的年收益是可怜的0.9%……</p>\n<p>我感觉已经不用分析了，这破产品分析到这已经是垃圾中的战斗机了啊。</p>\n<p>但是不行，我还要继续分析，因为如果考虑到通货膨胀率之类的东西，我得出的结论是，买这个产品，甚至收益完全是负的。。。</p>\n<h2 id=\"代码分析\"><a href=\"#代码分析\" class=\"headerlink\" title=\"代码分析\"></a>代码分析</h2><p>之前的分析还是有点粗浅的，如果仔细分析的话其实还需要考虑至少下面几点</p>\n<ul>\n<li>产品分红会每年加到总保额里，每年收益应当是(50000+分红)*0.08</li>\n<li>钱是会通货膨胀的，今年给你的收益4000，到明年就不值4000了</li>\n<li>同样的因为通货膨胀，你今年交的保费7600，到明年可能就不值7600了</li>\n</ul>\n<p>我直接上代码解决吧</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">countInsuranceIncome</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> eachYearOut = <span class=\"number\">7600</span>;<span class=\"comment\">//每年缴纳费用</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> eachYearRate = <span class=\"number\">0.08</span>;<span class=\"comment\">//年金率</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> inflationRate = <span class=\"number\">0.05</span>;<span class=\"comment\">//每年通胀率</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> eachYearIncreaseRate = <span class=\"number\">0.01</span>;<span class=\"comment\">//每年获得分红率</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> allMoney = <span class=\"number\">50000</span>;<span class=\"comment\">//总保额</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> allOut = <span class=\"number\">0</span>;<span class=\"comment\">//总支出</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> allIn = <span class=\"number\">0</span>;<span class=\"comment\">//总收入</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">20</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i &gt; <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 从第二年开始算通胀</span></span><br><span class=\"line\">            eachYearOut = eachYearOut * (<span class=\"number\">1</span>-inflationRate);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        allOut = allOut + eachYearOut;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 到66岁每两年领一次8%</span></span><br><span class=\"line\">    <span class=\"comment\">// 总共领23次</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">23</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> rate = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i &gt; <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 从第二年开始算通胀</span></span><br><span class=\"line\">            rate = <span class=\"number\">1</span> + eachYearIncreaseRate - inflationRate;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 总保额每年变化，由于是两年一次，所以乘两次</span></span><br><span class=\"line\">        allMoney = allMoney * rate * rate;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;第&quot;</span> + i + <span class=\"string\">&quot;次计算得总保额为&quot;</span> + allMoney.toFixed(<span class=\"number\">2</span>));</span><br><span class=\"line\">        allIn = allMoney * eachYearRate + allIn;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;第&quot;</span> + i + <span class=\"string\">&quot;次年金为&quot;</span> + (allMoney * eachYearRate).toFixed(<span class=\"number\">2</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 66岁一次性给100%</span></span><br><span class=\"line\">    allIn = allIn + allMoney;</span><br><span class=\"line\">    <span class=\"comment\">//66岁开始假设活到88岁，每年领一次8%</span></span><br><span class=\"line\">    <span class=\"comment\">//总共领22次</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">22</span>; i++) &#123;</span><br><span class=\"line\">        allIn = allMoney * (<span class=\"number\">1</span> + eachYearIncreaseRate - inflationRate) * eachYearRate + allIn;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;总共支出&#x27;</span> + allOut.toFixed(<span class=\"number\">2</span>) + <span class=\"string\">&#x27;，总共收入&#x27;</span> + allIn.toFixed(<span class=\"number\">2</span>));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>代码逻辑基本上就是把我列的条件都写进去了，不多解释，总之最后的计算结果非常让我震惊。<br>假设从今年开始买这个产品，基于当前物价水平</p>\n<ul>\n<li>基于5%的通胀率，1%的分红率</li>\n<li>付出<strong>97510.14</strong>元</li>\n<li>收益<strong>65532.89</strong>元 </li>\n<li>收益 <strong>-31977.25</strong>元</li>\n</ul>\n<p>也就是说考虑到通货膨胀，拉长到将近70年的周期，这份产品最终是让你倒亏3万多。<br>而通胀率我设置的其实不算高，5%算是偏低水平，1%的每年分红率我甚至还比现实更高。而且现实中也基本不太可能每年保持1%的分红率，如果调整成6%的通胀率，和0.9%的分红率，</p>\n<ul>\n<li>基于6%的通胀率，0.9%的分红率</li>\n<li>付出<strong>89919.88</strong>元</li>\n<li>收益<strong>49962.45</strong>元</li>\n<li>收益 <strong>-39957.43</strong>元</li>\n</ul>\n<p>不得不说，算还是保险公司会算，你乍一看，只要交20年，然后长达70年给你持续分红和年金，似乎怎么想都是划算的，而且分红方式还按照不固定的分红增长，给人以更大的迷惑性。<br>让你如果不依靠专业的工具，自己根本算不清楚，只能任保险公司鱼肉。</p>\n<p>最后，如果想要这份产品能够盈利，那最低条件是通胀率要小于等于3%，且年均分红率要稳定在1%，这样70年后能够血赚2000。。。</p>\n","site":{"data":{}},"excerpt":"<h2 id=\"问题起源\"><a href=\"#问题起源\" class=\"headerlink\" title=\"问题起源\"></a>问题起源</h2><p>这两天刚好一年交一次的保险开始催我交年费，最近由于基金太绿，手头实在有点紧，因此这个年费一直拖着还没交，于是我动了是不是要退保的想法。</p>\n<p>而销售则继续去年的话术，说我这个交满20年就可以不交了，现在交到12年退保太可惜了之类的。</p>\n<p>今年我没有轻易把这话听进去，于是我又去搜了下这个保险产品的条例，这个产品的介绍如下图。<br><img src=\"/2021/11/19/%E8%AE%B0%E4%B8%80%E6%AC%A1%E7%94%A8%E4%BB%A3%E7%A0%81%E5%88%86%E8%BE%A8%E5%9D%91%E7%88%B9%E4%BF%9D%E9%99%A9%E4%BA%A7%E5%93%81%E7%9A%84%E7%BB%8F%E5%8E%86/1.png\"></p>\n<p>按照我当前的情况，排除意外身故的情况，简单概括下就是：</p>\n<ul>\n<li>我每年交7600，交20年</li>\n<li>到66岁每两年领一次总保额(总保额是50000)的8%，我这份产品从19岁开始买，到66岁总共可以领23次</li>\n<li>66岁一次性给100%全保额</li>\n<li>66岁开始每年领一次总保额的8%，我假设我能活到88岁，那总共领22次","more":"</li>\n</ul>\n<h2 id=\"简单计算\"><a href=\"#简单计算\" class=\"headerlink\" title=\"简单计算\"></a>简单计算</h2><p>剔除别的因素，最简单的加减算法就是</p>\n<ul>\n<li>交的保费是20*7600 = 152000</li>\n<li>到66岁每两年领一次8%，领23次，那就是23*(50000*0.08)=92000</li>\n<li>66岁一次性领100%总保额，就是50000</li>\n<li>66-88岁每年领一次8%，领22次，22*(50000*0.08)=88000<br>简单说来总保费是 <strong>152000</strong>，<strong>最后收益是230000</strong></li>\n</ul>\n<p>其实就算是这么简单的计算，也会发现这是一份很坑的产品，230000的最终收益前提是要活到88岁。而我在39岁就会交完152000的总保费，相当于从39岁<br>到88岁之间的49年时间，这份产品只帮我赚到了8万的收益，如果换算成一个理财产品的话，那这份产品的年收益是可怜的0.9%……</p>\n<p>我感觉已经不用分析了，这破产品分析到这已经是垃圾中的战斗机了啊。</p>\n<p>但是不行，我还要继续分析，因为如果考虑到通货膨胀率之类的东西，我得出的结论是，买这个产品，甚至收益完全是负的。。。</p>\n<h2 id=\"代码分析\"><a href=\"#代码分析\" class=\"headerlink\" title=\"代码分析\"></a>代码分析</h2><p>之前的分析还是有点粗浅的，如果仔细分析的话其实还需要考虑至少下面几点</p>\n<ul>\n<li>产品分红会每年加到总保额里，每年收益应当是(50000+分红)*0.08</li>\n<li>钱是会通货膨胀的，今年给你的收益4000，到明年就不值4000了</li>\n<li>同样的因为通货膨胀，你今年交的保费7600，到明年可能就不值7600了</li>\n</ul>\n<p>我直接上代码解决吧</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">countInsuranceIncome</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> eachYearOut = <span class=\"number\">7600</span>;<span class=\"comment\">//每年缴纳费用</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> eachYearRate = <span class=\"number\">0.08</span>;<span class=\"comment\">//年金率</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> inflationRate = <span class=\"number\">0.05</span>;<span class=\"comment\">//每年通胀率</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> eachYearIncreaseRate = <span class=\"number\">0.01</span>;<span class=\"comment\">//每年获得分红率</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> allMoney = <span class=\"number\">50000</span>;<span class=\"comment\">//总保额</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> allOut = <span class=\"number\">0</span>;<span class=\"comment\">//总支出</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> allIn = <span class=\"number\">0</span>;<span class=\"comment\">//总收入</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">20</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i &gt; <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 从第二年开始算通胀</span></span><br><span class=\"line\">            eachYearOut = eachYearOut * (<span class=\"number\">1</span>-inflationRate);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        allOut = allOut + eachYearOut;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 到66岁每两年领一次8%</span></span><br><span class=\"line\">    <span class=\"comment\">// 总共领23次</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">23</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> rate = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i &gt; <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 从第二年开始算通胀</span></span><br><span class=\"line\">            rate = <span class=\"number\">1</span> + eachYearIncreaseRate - inflationRate;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 总保额每年变化，由于是两年一次，所以乘两次</span></span><br><span class=\"line\">        allMoney = allMoney * rate * rate;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;第&quot;</span> + i + <span class=\"string\">&quot;次计算得总保额为&quot;</span> + allMoney.toFixed(<span class=\"number\">2</span>));</span><br><span class=\"line\">        allIn = allMoney * eachYearRate + allIn;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;第&quot;</span> + i + <span class=\"string\">&quot;次年金为&quot;</span> + (allMoney * eachYearRate).toFixed(<span class=\"number\">2</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 66岁一次性给100%</span></span><br><span class=\"line\">    allIn = allIn + allMoney;</span><br><span class=\"line\">    <span class=\"comment\">//66岁开始假设活到88岁，每年领一次8%</span></span><br><span class=\"line\">    <span class=\"comment\">//总共领22次</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">22</span>; i++) &#123;</span><br><span class=\"line\">        allIn = allMoney * (<span class=\"number\">1</span> + eachYearIncreaseRate - inflationRate) * eachYearRate + allIn;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;总共支出&#x27;</span> + allOut.toFixed(<span class=\"number\">2</span>) + <span class=\"string\">&#x27;，总共收入&#x27;</span> + allIn.toFixed(<span class=\"number\">2</span>));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>代码逻辑基本上就是把我列的条件都写进去了，不多解释，总之最后的计算结果非常让我震惊。<br>假设从今年开始买这个产品，基于当前物价水平</p>\n<ul>\n<li>基于5%的通胀率，1%的分红率</li>\n<li>付出<strong>97510.14</strong>元</li>\n<li>收益<strong>65532.89</strong>元 </li>\n<li>收益 <strong>-31977.25</strong>元</li>\n</ul>\n<p>也就是说考虑到通货膨胀，拉长到将近70年的周期，这份产品最终是让你倒亏3万多。<br>而通胀率我设置的其实不算高，5%算是偏低水平，1%的每年分红率我甚至还比现实更高。而且现实中也基本不太可能每年保持1%的分红率，如果调整成6%的通胀率，和0.9%的分红率，</p>\n<ul>\n<li>基于6%的通胀率，0.9%的分红率</li>\n<li>付出<strong>89919.88</strong>元</li>\n<li>收益<strong>49962.45</strong>元</li>\n<li>收益 <strong>-39957.43</strong>元</li>\n</ul>\n<p>不得不说，算还是保险公司会算，你乍一看，只要交20年，然后长达70年给你持续分红和年金，似乎怎么想都是划算的，而且分红方式还按照不固定的分红增长，给人以更大的迷惑性。<br>让你如果不依靠专业的工具，自己根本算不清楚，只能任保险公司鱼肉。</p>\n<p>最后，如果想要这份产品能够盈利，那最低条件是通胀率要小于等于3%，且年均分红率要稳定在1%，这样70年后能够血赚2000。。。</p>"},{"title":"MySql 8.0参考手册中文版（一）","date":"2019-10-17T01:03:03.000Z","comments":1,"_content":"[原文文档](https://dev.mysql.com/doc/refman/8.0/en/)  \n\n**声明**\n\n该文档纯粹自己手动翻译， 也许网上有更好的版本， 但是我这个属于自己学习的版本， 为了提高英语水平和对MySQL的理解， 后续不保证会持续更新，内容如有理解错误， 还请指正。\n\n## MySQL 8.0 参考手册  \n\n### 包含MySQL NDB集群8.0  \n\n#### 摘要  \n\n这是一份MySQL参考手册。 该文档分别记录了MySQL8.0到8.0.20，以及基于NDB8.0版本到NDB8.0.19版本的NDB集群发布版本。这份文档可能包括一些目前还没发布的MySQL版本的特性。想要了解哪些版本已经发布，请查看[MySQL8.0发布日志](https://dev.mysql.com/doc/relnotes/mysql/8.0/en/)。  \n\n**MySQL8.0特性**。这份手册描述的特性并没有包含在所有版本的MySQL8.0中；这些特性可能不包含在你所购买的MySQL8.0版本中。如果你有任何问题是关于你的MySQL8.0版本中所包含的特性的，请参阅你的MySQL8.0许可协议或者联系你的oracle销售代表。  \n\n有关每个发布版本的变化，请查看[MySQL8.0发布日志](https://dev.mysql.com/doc/relnotes/mysql/8.0/en/)。  \n\n有关法律信息和许可信息，请查看[前言和法律声明](https://dev.mysql.com/doc/refman/8.0/en/preface.html)。  \n\n在使用MySQL中需要帮助，请访问[MySQL论坛](http://forums.mysql.com/)，你可以在那里向别的MySQL用户描述你的问题。  \n\n文档创建于：2019-10-16  \n\n## 1.  一般信息  \n\nMySQL提供了非常快速的，多线程，多用户，和健壮的SQL数据库服务。MySQL服务用于关键服务，高负荷生产的系统以及嵌入大量部署的软件。Oracle是Oracle公司及其分支机构的注册商标。MySQL是Oracle公司及其分支机构的商标，未经Oracle正式的书面许可，客户不得使用。其他的名字可能是其各自所有者的商标。  \n\nMySQL软件具有双重许可。用户可以在GNU通用公共许可 (http://www.fsf.org/licenses/)  条款下将MySQL软件作为开源软件产品使用，或者从Oracle购买一份标准的商业许可。访问 http://www.mysql.com/company/legal/licensing/  以获取更多关于授权政策的信息。  \n\n下面的列表描述了一些在本手册中需要特别关注的部分：  \n\n - 访问[1.3.2章节，“MySql的主要特性”](https://dev.mysql.com/doc/refman/8.0/en/features.html)，讨论关于MySQL数据库服务的功能。\n\n - 访问[1.4章节，“MySQL8.0更新了什么”](https://dev.mysql.com/doc/refman/8.0/en/mysql-nutshell.html)，获取关于MySQL新功能的概况。访问[发布日志](https://dev.mysql.com/doc/relnotes/mysql/8.0/en/)，获取关于每个版本的更新信息。\n\n - 访问[2章节，安装和升级MySQL](https://dev.mysql.com/doc/refman/8.0/en/installing.html)，获取安装介绍。访问[章节2.11](https://dev.mysql.com/doc/refman/8.0/en/upgrading.html)，获取MySQL升级说明。  \n\n - 访问[第3章节，教程](https://dev.mysql.com/doc/refman/8.0/en/tutorial.html)，获取MySQL数据库服务的教程介绍。\n\n - 访问 [第5章节，MySQL服务管理](https://dev.mysql.com/doc/refman/8.0/en/server-administration.html)，获取关于MySQL服务的配置和管理的信息。\n\n - 访问 [第6章节，安全](https://dev.mysql.com/doc/refman/8.0/en/security.html)，获取关于MySQL的安全信息。\n\n - 访问 [第17章节，复制](https://dev.mysql.com/doc/refman/8.0/en/replication.html)，获取关于设置复制服务器的信息。\n\n - 访问[第30章节，MySQL企业版](https://dev.mysql.com/doc/refman/8.0/en/mysql-enterprise.html)，获取关于MySQL企业版的信息，商用版的MySQL会发布一些进阶的功能和管理工具。\n\n - 访问 [附录A，MySQL8.0常见问题](https://dev.mysql.com/doc/refman/8.0/en/faqs.html)，获取关于MySQL服务及其功能的一些常见问题的答案。\n\n - 访问[发布日志](https://dev.mysql.com/doc/relnotes/mysql/8.0/en/)，获取关于新特性和bug修复的发布信息。\n\n     \n\n   **重要**  \n\n   如果要报告问题或者bug，请按照[章节17，“如何报告bug和问题”](https://dev.mysql.com/doc/refman/8.0/en/bug-reports.html)的指示。如果你发现在MySQL中的一个敏感的安全性的bug，请立即发送邮件信息到< [secalert_us@oracle.com](mailto:secalert_us@oracle.com) >让我们知晓。例外：支持客户应该报告所有的问题，包括安全bug，发送给Oracle支持部门。  \n\n   \n\n### 1.1 关于本手册  \n\n这份参考手册适用于MySQL数据库系统8.0版本到8.0.20版。在本文中关于和MySQL8.0镜像版本的区别参照了（8.0.x）的发行版本。查看[法律声明](https://dev.mysql.com/doc/refman/8.0/en/preface.html#legalnotice)，获取许可的信息。\n\n本手册不适用于MySQL软件的更早版本，因为在MySQL8.0和更早版本之间存在着很多功能及别的方面的不同。如果你正在使用MySQL软件的早期发布版本，请参考对应的手册。比如：[MySQL5.7操作手册](https://dev.mysql.com/doc/refman/5.7/en/)可以覆盖MySQL软件的5.7发布版本系列。\n\n由于这个手册是作为参考来使用，因此不会提供关于SQL或关联的数据库概念的一般介绍。同样也不会教你如何使用你的操作系统或命令行解释器。\n\nMySQL数据库软件在经历不断的发展，其手册同样也会不断的更新。最新版本的手册可以在 https://dev.mysql.com/doc/ 在线搜索到。其他格式也可以在这里获取，包括HTML，PDF和EPUB版本。\n\n参考手册的源文件由DocBook XML格式写成。其HTML版本和其他版本都自动生成，主要使用DocBook XSL样式表。关于DocBook的信息，详见 http://docbook.org/ 。\n\nMySQL的源代码包括内部文档，由Doxygen编写。已完成的Doxygen内容可以访问 https://dev.mysql.com/doc/index-other.html 。同样也可以按照 [章节2.9.10，“创建MySQL Doxygen文档内容”](https://dev.mysql.com/doc/refman/8.0/en/source-installation-doxygen.html)的介绍从MySQL源分发创建本地的内容。\n\n如果你有使用MySQL的的问题，加入 [MySQL开发者社区](https://mysqlcommunity.slack.com/)，或者在我们的论坛提问；详见 [章节1.6.2，“MySQL论坛的MySQL社区支持”](https://dev.mysql.com/doc/refman/8.0/en/forums.html)。如果你对本手册有补充或者更正的建议，请发送到 http://www.mysql.com/company/contact/。\n\n本手册最初由 David Axmark 和 Michael “Monty” Widenius 编写。主要由MySQL文档团队编写，成员包括 Chris Cole， Paul DuBois， Margaret Fisher， Edward Gilmore， Stefan Hinz， David Moss， Philip Olson， Daniel Price， Daniel So， 以及 Jon Stephens 。\n\n\n\n### 1.2  排版和语法约定\n\n本手册使用下列的排版约定：\n\n// TODO\n\n### 1.3 MySQL数据库管理系统总览  \n\n#### 1.3.1 什么是MySQL？ \n\nMySQL是最受欢迎的开源的SQL数据库管理系统，由Oracle公司开发，发布和支持。\n\n[MySQL官网](http://www.mysql.com/)提供了MySQL软件的最新版本的信息。\n\n- MySQL是一个数据库管理系统  \n\n  数据库是数据的结构化集合。它可以是任何东西，从简单的购物清单，到一个图片集，或者公司网络中的海量信息。在一个计算机数据库上添加，访问和执行数据存储，你需要一个像MySQL服务器一样的数据库管理系统。由于计算机非常善于处理大量的数据，数据库管理系统就在计算机中扮演了一个中心角色，无论是作为一个独立的程序，还是别的应用的一部分。\n\n- MySQL数据库是关系型的\n\n  一个关系型数据库将数据存储在不同的表中，而不是把所有的数据放在一个大的存储库中。数据库结构组织成物理文件以优化速度。具有对象（诸如数据库，表，视图，行和列）的逻辑模型提供了灵活的程序设计环境。你可以建立规则去管理不同字段之间的关系，比如一对一，一对多，唯一，必填或者选填，以及不同表之间的指向。数据库强制执行这些规则，所以一个良好设计的数据库，可以使你的程序避免看到不一致，重复，孤立，过期，或者缺失的数据。\n\n  MySQL中的SQL代表“结构化查询语言”。SQL是用于访问数据库的最通用的标准化语言。基于你的程序设计环境，又可以直接输入SQL（比如，用于创建报表），用另一种语言把SQL注入到代码中，或者使用隐含SQL语法的特定语言的API。\n\n  SQL由 ANSI/ISO 的SQL标准来定义。SQL的标准从1986年以来不断发展，存在多个不同的版本。在本手册中，“SQL-92”是指1992年发布的标准，“SQL:1999”是指在1999年发布的版本，以及“SQL:2003”，指现在的版本。我们在任何时用到“SQL标准”这个词时，都是指当前版本的SQL标准。\n\n- MySQL软件是开源的\n\n  开源意味着对于任何人来说都可以使用和修改该软件。任何人都可以从网络上下载MySQL软件并且免费使用。你也可以按照你的意愿去学习和更改源代码以适应你的需求。MySQL软件使用[GPL]( http://www.fsf.org/licenses/)（通用公共许可），来定义你在不同情景下对软件能做的和不能做的事。如果你对GPL感到不适，或者想要将MySQL的代码注入到一个商用软件中，你可以从我们这里购买一份商用许可。访问[MySQL许可概览](http://www.mysql.com/company/legal/licensing/)以获取更多信息。\n\n- MySQL数据库服务快速，可靠，可拓展且易用\n\n  如果你寻求的就是这个，你应该去尝试一下。MySQL服务可以在笔记本或者台式机上与其他应用，网络服务一起舒适的运行，只需要一点甚至无需额外的关注。如果你将整台机器都用于MySQL，你可以调整设置利用所有的内存，CPU功率，以及IO性能。MySQL同样可以扩大网络和机器的集群。\n\n  MySQL服务最初开发用来比现有方式更快的处理数据，而且成功的应用在高要求的生产环境很多年。尽管经历了不断的发展，MySQL如今提供了一组丰富而有用的功能。其可连接性，速度以及安全性使得MySQL服务高度适合在网络上访问数据库。\n\n- MySQL服务运行于客户端/服务端或者嵌入式系统\n\n  MySQL数据库软件是一个客户端/服务端系统，其包含了一个多线程的SQL服务器用于支持不同的后端，不同的客户端程序以及库，管理工具，以及大范围的应用程序接口。\n\n  我们也提供MySQL服务作为一个嵌入的多线程库，你可以将其链接到你的应用以实现一个更小，更快，易于管理的独立产品。\n\n- 大量捐赠的MySQL软件已经可用\n\n  MySQL服务有一些使用的功能是由与我们密切合作的用户开发的。很有可能你最喜欢的应用或者语言由MySQL数据库服务支持。\n\n“MySQL”的官方读法是“ My Ess Que Ell ”（而不是 “my sequel” ），但是我们不介意你把它读作“my sequel”或者别的当地的读法。\n\n#### 1.3.2 MySQL的主要功能\n\n本节描述了一些MySQL数据库软件的重要特征。在大部分情况下，该路线图适用于所有版本的MySQL。想要知道在特定版本的MySQL中引入的功能，请在“In a Nutshell”章节查看对应的手册：\n\n- MySQL8.0：[章节1.4，“MySQL8.0更新了什么”](https://dev.mysql.com/doc/refman/8.0/en/mysql-nutshell.html)\n- MySQL5.7：[MySQL5.7更新了什么](https://dev.mysql.com/doc/refman/5.7/en/mysql-nutshell.html)\n- MySQL5.6：[MySQL5.6更新了什么](https://dev.mysql.com/doc/refman/5.6/en/mysql-nutshell.html)\n- MySQL5.5：[MySQL5.5更新了什么](https://dev.mysql.com/doc/refman/5.5/en/mysql-nutshell.html)\n\n**内部实现和可移植性**\n\n- 由C和C++实现\n- 通过了大规模的不同编译器的测试\n- 在多个不同的平台上运行。详见https://www.mysql.com/support/supportedplatforms/database.html\n- 关于移植，MySQL5.5及以上的版本使用CMake命令。更早的版本使用GNU Automake，Autoconf和Libtool。\n- 经过了Purify（一个商用的内存泄漏探测器）以及Valgrind（一个GPL工具）的测试。（http://developer.kde.org/~sewardj/）\n- 使用具有独立模块的多层服务的设计。\n- 设计为使用核心线程的多线程方式，如果多核CPU可用，则可以很容易的被使用。\n- 提供了基于事务和非事务的存储引擎。\n- 使用索引压缩的非常快速的B-tree磁盘（MyISAM）\n- 设计为可以相对简单的增加另一个存储引擎。如果你想为一个内部的数据库提供一个SQL接口，这会非常有用。\n- 使用了非常快速的基于线程的内存分配系统。\n- 使用了一种优化了的内部循环的join来非常快速的执行join。\n- 实现了在内存的hash table，其作为临时表来使用。\n- 使用了一种尽可能快的高度优化的类库来实现SQL功能。在所有的查询初始化后一般就不会再有内存分配。\n- 为使用客户端/服务端环境提供了作为单独程序的服务，作为一个库可以嵌入到独立的应用中。这种应用可以单独使用或者在网络无法访问的环境中使用。\n\n**数据类型**\n\n- 很多的数据类型：带符号/无符号的整数类型，1、2、3、4以及8比特的长度， [`FLOAT`](https://dev.mysql.com/doc/refman/8.0/en/floating-point-types.html), [`DOUBLE`](https://dev.mysql.com/doc/refman/8.0/en/floating-point-types.html), [`CHAR`](https://dev.mysql.com/doc/refman/8.0/en/char.html), [`VARCHAR`](https://dev.mysql.com/doc/refman/8.0/en/char.html), [`BINARY`](https://dev.mysql.com/doc/refman/8.0/en/binary-varbinary.html), [`VARBINARY`](https://dev.mysql.com/doc/refman/8.0/en/binary-varbinary.html), [`TEXT`](https://dev.mysql.com/doc/refman/8.0/en/blob.html), [`BLOB`](https://dev.mysql.com/doc/refman/8.0/en/blob.html), [`DATE`](https://dev.mysql.com/doc/refman/8.0/en/datetime.html), [`TIME`](https://dev.mysql.com/doc/refman/8.0/en/time.html), [`DATETIME`](https://dev.mysql.com/doc/refman/8.0/en/datetime.html), [`TIMESTAMP`](https://dev.mysql.com/doc/refman/8.0/en/datetime.html), [`YEAR`](https://dev.mysql.com/doc/refman/8.0/en/year.html), [`SET`](https://dev.mysql.com/doc/refman/8.0/en/set.html), [`ENUM`](https://dev.mysql.com/doc/refman/8.0/en/enum.html) ，以及OpenGIS的空间数据类型。详见[章节11，数据类型](https://dev.mysql.com/doc/refman/8.0/en/data-types.html)。\n- 固定长度和可变长度的字符串类型。\n\n**语句和功能**\n\n- 所有的操作符和功能支持都在Select列表和Where条件语句查询中。比如：\n\n  ```sql\n  mysql> SELECT CONCAT(first_name, ' ', last_name)\n      -> FROM citizen\n      -> WHERE income/dependents > 10000 AND age > 30;\n  ```\n\n- 完全支持SQL中的`Group By`和`Order By`条件。提供Group的功能的支持（ [`COUNT()`](https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_count), [`AVG()`](https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_avg), [`STD()`](https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_std), [`SUM()`](https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_sum), [`MAX()`](https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_max), [`MIN()`](https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_min), 和 [`GROUP_CONCAT()`](https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_group-concat)) ）\n\n- 完全支持拥有SQL和ODBC语法的 `LEFT OUTER JOIN` 和 `RIGHT OUTER JOIN`  \n\n- 支持标准SQL要求的表和列的别名。\n\n- 支持`Delete`，`Insert`，`Replace`，以及在`update`时返回修改的数量，或者返回匹配的行数，而不是在连接服务器时设置一个标识。\n\n- 支持MySQL特定的`show`语句，用于返回数据库，存储引擎，表，以及索引的信息。支持 `INFORMATION_SCHEMA`数据库，实现自标准SQL。\n\n-  [`EXPLAIN`](https://dev.mysql.com/doc/refman/8.0/en/explain.html) 语句会展现优化器如何处理查询语句的。\n\n- 函数名称独立于表明和列名。比如，`ABS`是一个合法的列明。唯一的限制是在调用函数时，在函数名和(之间不能存在空格。详见[章节9.3，关键字和保留字](https://dev.mysql.com/doc/refman/8.0/en/keywords.html)。\n\n- 你可以在一个语句内指定不同数据库的表。\n\n**安全性**\n\n- 权限和密码系统非常灵活和安全，并支持基于主机的认证。\n- 连接服务器时，通过对所有密码通信进行加密来实现密码安全。\n\n**可拓展性和限制**\n\n- 支持大型数据库。我们使用的MySQL服务拥有可以包含5000万条数据的数据库。我们也知道拥有20万张表和50亿条数据的MySQL服务器的用户。\n- 支持每张表最多64个索引。每个索引可以包含1-16列或者部分列。InnoDB表的索引最大宽度为767字节或者3072字节。详见 [章节15.6.1.16，“InnoDB表的限制”](https://dev.mysql.com/doc/refman/8.0/en/innodb-restrictions.html)。MyISAM表的最大索引宽度为1000字节。详见 [章节16.2，“MyISAM存储引擎”](https://dev.mysql.com/doc/refman/8.0/en/myisam-storage-engine.html)。可以使用Char，Varchar，Blob或者Text字段类型的前缀作为一个索引。\n\n**可连接性**\n\n- 客户端可以通过不同的协议连接MySQL服务：\n  - 客户端可以在任何平台上使用TCP/IP端口进行连接。\n  - 在windows系统，如果服务端启用了 [`named_pipe`](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_named_pipe) 系统参数进行启动，那客户端就可以使用name pipe进行连接。如果服务端启用了 [`shared_memory`](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_shared_memory)  系统参数进行启动，那客户端也可以使用  [`shared_memory`](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_shared_memory)  方式进行连接。客户端可以通过使用  [`--protocol=memory`](https://dev.mysql.com/doc/refman/8.0/en/connection-options.html#option_general_protocol) 选项来进行shared memory的连接。\n  - 在unix系统，客户端可以使用Unix域的套接字文件来进行连接。\n- MySQL的客户端程序可以用不同的语言编写。一个C语言编写的客户端库可以用于C语言和C++编写的客户端，或者任何别的提供C语言绑定的语言。\n-  C, C++, Eiffel, Java, Perl, PHP, Python, Ruby, 和 Tcl 的API都是可用的，使得MySQL客户端可以被多种语言编写。详见[章节28，连接器和API](https://dev.mysql.com/doc/refman/8.0/en/connectors-apis.html).\n- 连接器/ODBC（MyODBC）接口为那些使用ODBC（Open Datebase Connectivity）连接的客户端程序提供了MySQL支持。比如说，你可以使用MS Access去连接你的MySQL服务器。客户端可以运行在Windows或者Unix。连接器/ODBC源是可用的。和很多其他的功能一样，所有的ODBC2.5的功能都是被支持的。详见[MySQL 连接器/ODBC开发者指南](https://dev.mysql.com/doc/connector-odbc/en/)。\n- 连接器/J 接口为那些使用了JDBC连接器的java客户端程序提供了MySQL支持。客户端可以运行于Windows或者Unix。连接器/J 源是可用的。详见[MySQL连接器/J 5.1开发者指南](https://dev.mysql.com/doc/connector-j/5.1/en/)。\n- MySQL连接器/NET 允许开发者创建一个要求安全和高性能数据连接MySQL的.NET应用程序。它实现了必须的ADO.NET的接口并融入进了ADO.NET的感知工具。开发者可以选择他们的.NET语言去构建应用。MySQL连接器/NET是一个完全托管的ADO.NET驱动，100%由纯粹的C#编写。详见[MySQL连接器/NET开发者指南](https://dev.mysql.com/doc/connector-net/en/)。\n\n**本地化**\n\n- 服务器可以提供各种语言的报错信息。详见[章节10.12，设置错误提示的语言](https://dev.mysql.com/doc/refman/8.0/en/error-message-language.html)。\n- 完全支持不同的字符集，包括 `latin1` (cp1252)，`german`，`big5`，`ujis` ，几种Unicode编码，以及别的。比如， Scandinavian 的字符 “`å`”, “`ä`” 和“`ö`” 可以用在表和列的名字中。\n- 所有的数据以选定的字符集存储。\n- 根据默认的字符集和校对规则进行排序和比较。当MySQL服务运行的时候也可以对该规则进行更改(详见[章节10.3.2，“服务器字符集和校验”](https://dev.mysql.com/doc/refman/8.0/en/charset-server.html))。一个非常高级的排序例子，可以看下捷克的排序编码。MySQL支持多种可以在编译和运行阶段指定的字符集。\n- 服务器时区可以动态的改变，而且单独的客户端可以指定各自的时区。详见[章节5.1.13，MySQL服务器时区支持](https://dev.mysql.com/doc/refman/8.0/en/time-zone-support.html)。\n\n**客户端和工具**\n\n- MySQL包含多个客户端和实用程序。包括命令行程序，比如 [**mysqldump**](https://dev.mysql.com/doc/refman/8.0/en/mysqldump.html) 和 [**mysqladmin**](https://dev.mysql.com/doc/refman/8.0/en/mysqladmin.html) ，以及图形化程序 [MySQL Workbench](https://dev.mysql.com/doc/refman/8.0/en/workbench.html) 。\n- MySQL服务器内置了对于SQL语句的检查，优化和表修复的支持。这些语句可以通过[mysqlcheck](https://dev.mysql.com/doc/refman/8.0/en/mysqlcheck.html)客户端从命令行使用。MySQL也包含了[myisamchk](https://dev.mysql.com/doc/refman/8.0/en/myisamchk.html)工具，一个非常快速的命令行工具，用于在MyISAM表提交这些操作。详见[章节4，MySQL程序](https://dev.mysql.com/doc/refman/8.0/en/programs.html)。\n- 可以调用 --help 和 -?来呼叫MySQL程序用以获取在线协助。\n\n#### 1.3.3 MySQL的历史\n\n我们一开始想要用我们自己的快速，低级的引擎来使用mSQL数据库来连接我们的表。然而，经过了一些测试后，我们认为mSQL的速度和灵活性达不到我们的要求。这导致了我们的数据库的一个新的SQL接口，但是其API接口和mSQL几乎一样。该API设计为允许那些为mSQL编写的第三方代码可以很方便的移植以用于MySQL。\n\nMySQL得名于联合创建人Monty Widenius的女儿，My。\n\nMySQL的海豚（我们的logo）的名字是“Sakila”，这来自于“为海豚取名”的比赛中用户建议的庞大的名字列表里选择出来的。最后获胜的名字由来自非洲Swaziland， 一个名叫Ambrose Twebaze的开源软件开发者提供。据 Ambrose所说，这个女性化的名字Sakila出自 Swaziland 的当地语Siswati。Sakila也是坦桑尼亚的 Arusha 的一个城镇的名字，邻近 Ambrose 的原籍国乌干达。\n\n### 1.4 MySQL8.0更新了什么\n\n这一节总结了在MySQL8.0中哪些被添加，启用，以及移除。随附的部分罗列了在MySQL8.0中已经被新增，启用，移除的选项和变量。详见 [章节1.5，“服务器，状态变量和选项在MySQL8.0中的添加，弃用和删除”](https://dev.mysql.com/doc/refman/8.0/en/added-deprecated-removed.html)。\n<!-- more -->\n**MySQL8.0新增的特性**\n\n以下特性被加入到MySQL8.0中：\n\n- **数据字典。**MySQL现在合并了一个可以存储数据库对象的事务化的数据字典。在之前的MySQL发行版中，数据字典存储在元数据文件和非事务的表。关于更多信息，详见[章节14，MySQL数据字典](https://dev.mysql.com/doc/refman/8.0/en/data-dictionary.html)。\n\n- **原子数据定义语句(原子DDL)。**一个原子DDL语句包含了数据字典的升级，存储引擎的操作，以及将关联DDL操作的二进制日志写入到单独的原子事务中。要获取更多信息，详见[章节13.1.1，“原子数据定义语句的支持”](https://dev.mysql.com/doc/refman/8.0/en/atomic-ddl.html)。\n\n- **升级过程。**在以前，安装了一个新版本的MySQL后，MySQL服务器会在下一次启动时自动升级数据字典表，在此之后，需要DBA在mysql的schema里手动调用 [**mysql_upgrade**](https://dev.mysql.com/doc/refman/8.0/en/mysql-upgrade.html) 去升级系统表，也包括在别的schema比如sys schema和user schema里面的对象。\n\n  对于MySQL8.0.16来说，服务器会执行先前由 [**mysql_upgrade**](https://dev.mysql.com/doc/refman/8.0/en/mysql-upgrade.html) 控制的任务。在安装了新版本的MySQL之后，服务器会在下次升级时自动执行所有的升级任务，而不是依赖DBA去调用 [**mysql_upgrade**](https://dev.mysql.com/doc/refman/8.0/en/mysql-upgrade.html) 。而且，服务器会更新帮助表里面的内容（这是 [**mysql_upgrade**](https://dev.mysql.com/doc/refman/8.0/en/mysql-upgrade.html) 没有做的）。一个新的 [`--upgrade`](https://dev.mysql.com/doc/refman/8.0/en/server-options.html#option_mysqld_upgrade) 服务器参数为服务器如何自动执行数据字典和服务器升级的选项提供了控制。想要了解更多，详见[章节2.11.3，MySQL的升级流程升级了什么](https://dev.mysql.com/doc/refman/8.0/en/upgrading-what-is-upgraded.html)。\n\n- **安全和账户管理**。增加下列增强的功能后，可以提高安全性以及增加DBA在账户管理方面的灵活性：\n\n  - 在mysql系统数据库中的授权表现在属于InnoDB（事务型）表。以前它们是MyISAM（非事务型）表。授权表的存储引擎的变化是伴随账户管理语句变化的基础。以前一句命名多个用户的账户管理的语句（如 [`CREATE USER`](https://dev.mysql.com/doc/refman/8.0/en/create-user.html) 或 [`DROP USER`](https://dev.mysql.com/doc/refman/8.0/en/drop-user.html)) ，在其中一些用户命名失败的情况下也可以对别的用户命名成功。现在，每一个语句都是事务的，且要么所有的命名用户都成功，要么其中任何一个失败之后语句都会回滚并不发生任何效果。语句如果成功会被写入二进制表中，但是在失败时不会写入；在这种情况下，会发生回滚且没有任何变化发生。想要了解更多，详见[13.1.1“原子数据定义语句的支持”](https://dev.mysql.com/doc/refman/8.0/en/atomic-ddl.html)。\n\n  - 一个新的 `caching_sha2_password`  认证插件已经可用。类似于 `sha256_password`  插件， caching_sha2_password 实现了 SHA-256 的密码Hash，但是在连接时用缓存来解决延迟问题。它也支持更多的连接协议，而且不需要为了基于RAS密钥对的密码交换功能和OpenSSL进行连接。\n\n     caching_sha2_password 和 sha256_password 的认证方式相比 mysql_native_password 插件提供了更多的安全加密方式，而且 caching_sha2_password 的性能比sha256_password更好。由于这些 caching_sha2_password 卓越的安全和性能的特点，现在已经成为首选的认证插件，而且也是默认的认证插件，而不是  `mysql_native_password` 。想要了解这种默认插件的变化对于服务器操作和服务器与客户端及连接器之间的兼容性的信息，详见 [ caching_sha2_password 作为首选的认证插件](https://dev.mysql.com/doc/refman/8.0/en/upgrading-from-previous-series.html#upgrade-caching-sha2-password)。\n\n  - MySQL如今支持角色，即权限集合的命名。角色可以被创建和删除。角色可以被授权和撤销权限。角色可以从用户账号中授权和删除。一个账户下的活跃的适用角色可以从账户里已授权的角色中选择，也可以在账户的登陆期间进行修改。想要了解更多信息，详见[6.2.10，使用角色](https://dev.mysql.com/doc/refman/8.0/en/roles.html)。\n\n  - MySQL现在包含了用户账号目录的概念，根据系统和普通用户区分他们是否有 [`SYSTEM_USER`](https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_system-user) 权限。详见[6.2.11，账户目录](https://dev.mysql.com/doc/refman/8.0/en/account-categories.html)。\n\n  - 在以前，除非在某些schema里，否则不能授予一个全局的权限。现在只要设置 [`partial_revokes`](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_partial_revokes)  系统参数为 enabled 就可以做到。详见[6.2.12，使用部分撤销的权限限制](https://dev.mysql.com/doc/refman/8.0/en/partial-revokes.html)。\n\n  - 授权语句拥有一个可以指定额外的权限信息的用户条件去用于语句执行。这种语法在SQL层面可见， 尽管其主要目的是使在部分撤销所施加的授予者特权限制的所有节点之间实现统一复制， 通过使这些限制出现在二进制日志中。\n\n  - MySQL现在会保留历史密码信息，限制重复使用以前的密码。DBA可以要求一些数量的密码更改或者一段时间内不可以从以前的密码中选择。可以为全局和每个账户建立密码重新使用的策略。\n\n    现在可以通过指定当前要被取代的密码来验证更改密码的操作。这可以让DBA去避免那些不能提供他们知道的当前密码的用户去修改密码。可以为全局或每个账户建立密码验证策略。\n\n    账户现在允许使用双重验证，这使得在复杂的多服务器系统上可以无缝的提交分阶段的密码修改，而不需要停机。\n\n    这些功能为DBA提供了对密码管理的完全掌控。关于更多信息，详见[6.2.15，密码管理](https://dev.mysql.com/doc/refman/8.0/en/password-management.html)。\n\n  - MySQL现在支持FIPS模式，它使用OpenSSL编译，在运行时一个OpenSSL库和FIPS对象模式都是可用的。FIPS模式为密码相关操作强加了一些条件，比如对于可接受的加密方式的限制，或者对于密码长度的要求。详见[6.5，FIPS支持](https://dev.mysql.com/doc/refman/8.0/en/fips-mode.html)。\n\n  -  服务器现在可以在运行时重新配置服务器用于新连接的SSL上下文。该功能可能会很有用，比如，在一个MySQL服务器运行太久而SSL证书过期，可以避免去重启该服务器。详见 [加密连接的服务器端运行时配置](https://dev.mysql.com/doc/refman/8.0/en/using-encrypted-connections.html#using-encrypted-connections-server-side-runtime-configuration)。\n\n  - OpenSSL1.1.1支持用于加密连接的TLS1.3协议，如果服务端和客户端都用OpenSSL或更高版本来编译，那么MySQL8.0.16和更高版本下也将支持TLS1.3协议。详见[6.3.2，加密连接TLS协议和密码](https://dev.mysql.com/doc/refman/8.0/en/encrypted-connection-protocols-ciphers.html)。\n\n  - MySQL现在授予客户端在已命名的管道上用于windows尽量少的必要连接的访问控制。新的MySQL客户端软件可以不用任何额外配置打开命名管道连接。如果更早版本的客户端软件不能马上升级，那么新的 [`named_pipe_full_access_group`](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_named_pipe_full_access_group)系统参数可以给予windows用户组必要的权限用于打开命名管道连接。完全访问权限的用户组的成员应该是暂时的且被限制的。\n\n- **资源管理。**MySQL现在支持资源组的创建和管理，并且允许跟服务器一起运行的线程分配给特定的组，以便线程根据组的可用的资源执行。组属性可以控制其资源，允许或者限制组内线程的资源消费。DBA可以根据不同的工作量来调整这些属性为合适的值。现在，CPU时间是可以管理的资源，其概念由\"虚拟CPU\"来表示，其包含了CPU内核，超线程，硬件线程等等。服务器在启动时决定有多少虚拟CPU可用，并且拥有相应权限的数据库管理员可以将这些CPU与资源组关联并分配线程给组。要了解更多信息，详见[8.12.5，资源组](https://dev.mysql.com/doc/refman/8.0/en/resource-groups.html)。\n\n- **表加密管理。**","source":"_posts/MySql-Document.md","raw":"---\ntitle: MySql 8.0参考手册中文版（一）\ndate: 2019-10-17 09:03:03\ntags: \n- mysql\n- translate\ncomments: true\ncategories: \n- 学习\n- 数据库\n---\n[原文文档](https://dev.mysql.com/doc/refman/8.0/en/)  \n\n**声明**\n\n该文档纯粹自己手动翻译， 也许网上有更好的版本， 但是我这个属于自己学习的版本， 为了提高英语水平和对MySQL的理解， 后续不保证会持续更新，内容如有理解错误， 还请指正。\n\n## MySQL 8.0 参考手册  \n\n### 包含MySQL NDB集群8.0  \n\n#### 摘要  \n\n这是一份MySQL参考手册。 该文档分别记录了MySQL8.0到8.0.20，以及基于NDB8.0版本到NDB8.0.19版本的NDB集群发布版本。这份文档可能包括一些目前还没发布的MySQL版本的特性。想要了解哪些版本已经发布，请查看[MySQL8.0发布日志](https://dev.mysql.com/doc/relnotes/mysql/8.0/en/)。  \n\n**MySQL8.0特性**。这份手册描述的特性并没有包含在所有版本的MySQL8.0中；这些特性可能不包含在你所购买的MySQL8.0版本中。如果你有任何问题是关于你的MySQL8.0版本中所包含的特性的，请参阅你的MySQL8.0许可协议或者联系你的oracle销售代表。  \n\n有关每个发布版本的变化，请查看[MySQL8.0发布日志](https://dev.mysql.com/doc/relnotes/mysql/8.0/en/)。  \n\n有关法律信息和许可信息，请查看[前言和法律声明](https://dev.mysql.com/doc/refman/8.0/en/preface.html)。  \n\n在使用MySQL中需要帮助，请访问[MySQL论坛](http://forums.mysql.com/)，你可以在那里向别的MySQL用户描述你的问题。  \n\n文档创建于：2019-10-16  \n\n## 1.  一般信息  \n\nMySQL提供了非常快速的，多线程，多用户，和健壮的SQL数据库服务。MySQL服务用于关键服务，高负荷生产的系统以及嵌入大量部署的软件。Oracle是Oracle公司及其分支机构的注册商标。MySQL是Oracle公司及其分支机构的商标，未经Oracle正式的书面许可，客户不得使用。其他的名字可能是其各自所有者的商标。  \n\nMySQL软件具有双重许可。用户可以在GNU通用公共许可 (http://www.fsf.org/licenses/)  条款下将MySQL软件作为开源软件产品使用，或者从Oracle购买一份标准的商业许可。访问 http://www.mysql.com/company/legal/licensing/  以获取更多关于授权政策的信息。  \n\n下面的列表描述了一些在本手册中需要特别关注的部分：  \n\n - 访问[1.3.2章节，“MySql的主要特性”](https://dev.mysql.com/doc/refman/8.0/en/features.html)，讨论关于MySQL数据库服务的功能。\n\n - 访问[1.4章节，“MySQL8.0更新了什么”](https://dev.mysql.com/doc/refman/8.0/en/mysql-nutshell.html)，获取关于MySQL新功能的概况。访问[发布日志](https://dev.mysql.com/doc/relnotes/mysql/8.0/en/)，获取关于每个版本的更新信息。\n\n - 访问[2章节，安装和升级MySQL](https://dev.mysql.com/doc/refman/8.0/en/installing.html)，获取安装介绍。访问[章节2.11](https://dev.mysql.com/doc/refman/8.0/en/upgrading.html)，获取MySQL升级说明。  \n\n - 访问[第3章节，教程](https://dev.mysql.com/doc/refman/8.0/en/tutorial.html)，获取MySQL数据库服务的教程介绍。\n\n - 访问 [第5章节，MySQL服务管理](https://dev.mysql.com/doc/refman/8.0/en/server-administration.html)，获取关于MySQL服务的配置和管理的信息。\n\n - 访问 [第6章节，安全](https://dev.mysql.com/doc/refman/8.0/en/security.html)，获取关于MySQL的安全信息。\n\n - 访问 [第17章节，复制](https://dev.mysql.com/doc/refman/8.0/en/replication.html)，获取关于设置复制服务器的信息。\n\n - 访问[第30章节，MySQL企业版](https://dev.mysql.com/doc/refman/8.0/en/mysql-enterprise.html)，获取关于MySQL企业版的信息，商用版的MySQL会发布一些进阶的功能和管理工具。\n\n - 访问 [附录A，MySQL8.0常见问题](https://dev.mysql.com/doc/refman/8.0/en/faqs.html)，获取关于MySQL服务及其功能的一些常见问题的答案。\n\n - 访问[发布日志](https://dev.mysql.com/doc/relnotes/mysql/8.0/en/)，获取关于新特性和bug修复的发布信息。\n\n     \n\n   **重要**  \n\n   如果要报告问题或者bug，请按照[章节17，“如何报告bug和问题”](https://dev.mysql.com/doc/refman/8.0/en/bug-reports.html)的指示。如果你发现在MySQL中的一个敏感的安全性的bug，请立即发送邮件信息到< [secalert_us@oracle.com](mailto:secalert_us@oracle.com) >让我们知晓。例外：支持客户应该报告所有的问题，包括安全bug，发送给Oracle支持部门。  \n\n   \n\n### 1.1 关于本手册  \n\n这份参考手册适用于MySQL数据库系统8.0版本到8.0.20版。在本文中关于和MySQL8.0镜像版本的区别参照了（8.0.x）的发行版本。查看[法律声明](https://dev.mysql.com/doc/refman/8.0/en/preface.html#legalnotice)，获取许可的信息。\n\n本手册不适用于MySQL软件的更早版本，因为在MySQL8.0和更早版本之间存在着很多功能及别的方面的不同。如果你正在使用MySQL软件的早期发布版本，请参考对应的手册。比如：[MySQL5.7操作手册](https://dev.mysql.com/doc/refman/5.7/en/)可以覆盖MySQL软件的5.7发布版本系列。\n\n由于这个手册是作为参考来使用，因此不会提供关于SQL或关联的数据库概念的一般介绍。同样也不会教你如何使用你的操作系统或命令行解释器。\n\nMySQL数据库软件在经历不断的发展，其手册同样也会不断的更新。最新版本的手册可以在 https://dev.mysql.com/doc/ 在线搜索到。其他格式也可以在这里获取，包括HTML，PDF和EPUB版本。\n\n参考手册的源文件由DocBook XML格式写成。其HTML版本和其他版本都自动生成，主要使用DocBook XSL样式表。关于DocBook的信息，详见 http://docbook.org/ 。\n\nMySQL的源代码包括内部文档，由Doxygen编写。已完成的Doxygen内容可以访问 https://dev.mysql.com/doc/index-other.html 。同样也可以按照 [章节2.9.10，“创建MySQL Doxygen文档内容”](https://dev.mysql.com/doc/refman/8.0/en/source-installation-doxygen.html)的介绍从MySQL源分发创建本地的内容。\n\n如果你有使用MySQL的的问题，加入 [MySQL开发者社区](https://mysqlcommunity.slack.com/)，或者在我们的论坛提问；详见 [章节1.6.2，“MySQL论坛的MySQL社区支持”](https://dev.mysql.com/doc/refman/8.0/en/forums.html)。如果你对本手册有补充或者更正的建议，请发送到 http://www.mysql.com/company/contact/。\n\n本手册最初由 David Axmark 和 Michael “Monty” Widenius 编写。主要由MySQL文档团队编写，成员包括 Chris Cole， Paul DuBois， Margaret Fisher， Edward Gilmore， Stefan Hinz， David Moss， Philip Olson， Daniel Price， Daniel So， 以及 Jon Stephens 。\n\n\n\n### 1.2  排版和语法约定\n\n本手册使用下列的排版约定：\n\n// TODO\n\n### 1.3 MySQL数据库管理系统总览  \n\n#### 1.3.1 什么是MySQL？ \n\nMySQL是最受欢迎的开源的SQL数据库管理系统，由Oracle公司开发，发布和支持。\n\n[MySQL官网](http://www.mysql.com/)提供了MySQL软件的最新版本的信息。\n\n- MySQL是一个数据库管理系统  \n\n  数据库是数据的结构化集合。它可以是任何东西，从简单的购物清单，到一个图片集，或者公司网络中的海量信息。在一个计算机数据库上添加，访问和执行数据存储，你需要一个像MySQL服务器一样的数据库管理系统。由于计算机非常善于处理大量的数据，数据库管理系统就在计算机中扮演了一个中心角色，无论是作为一个独立的程序，还是别的应用的一部分。\n\n- MySQL数据库是关系型的\n\n  一个关系型数据库将数据存储在不同的表中，而不是把所有的数据放在一个大的存储库中。数据库结构组织成物理文件以优化速度。具有对象（诸如数据库，表，视图，行和列）的逻辑模型提供了灵活的程序设计环境。你可以建立规则去管理不同字段之间的关系，比如一对一，一对多，唯一，必填或者选填，以及不同表之间的指向。数据库强制执行这些规则，所以一个良好设计的数据库，可以使你的程序避免看到不一致，重复，孤立，过期，或者缺失的数据。\n\n  MySQL中的SQL代表“结构化查询语言”。SQL是用于访问数据库的最通用的标准化语言。基于你的程序设计环境，又可以直接输入SQL（比如，用于创建报表），用另一种语言把SQL注入到代码中，或者使用隐含SQL语法的特定语言的API。\n\n  SQL由 ANSI/ISO 的SQL标准来定义。SQL的标准从1986年以来不断发展，存在多个不同的版本。在本手册中，“SQL-92”是指1992年发布的标准，“SQL:1999”是指在1999年发布的版本，以及“SQL:2003”，指现在的版本。我们在任何时用到“SQL标准”这个词时，都是指当前版本的SQL标准。\n\n- MySQL软件是开源的\n\n  开源意味着对于任何人来说都可以使用和修改该软件。任何人都可以从网络上下载MySQL软件并且免费使用。你也可以按照你的意愿去学习和更改源代码以适应你的需求。MySQL软件使用[GPL]( http://www.fsf.org/licenses/)（通用公共许可），来定义你在不同情景下对软件能做的和不能做的事。如果你对GPL感到不适，或者想要将MySQL的代码注入到一个商用软件中，你可以从我们这里购买一份商用许可。访问[MySQL许可概览](http://www.mysql.com/company/legal/licensing/)以获取更多信息。\n\n- MySQL数据库服务快速，可靠，可拓展且易用\n\n  如果你寻求的就是这个，你应该去尝试一下。MySQL服务可以在笔记本或者台式机上与其他应用，网络服务一起舒适的运行，只需要一点甚至无需额外的关注。如果你将整台机器都用于MySQL，你可以调整设置利用所有的内存，CPU功率，以及IO性能。MySQL同样可以扩大网络和机器的集群。\n\n  MySQL服务最初开发用来比现有方式更快的处理数据，而且成功的应用在高要求的生产环境很多年。尽管经历了不断的发展，MySQL如今提供了一组丰富而有用的功能。其可连接性，速度以及安全性使得MySQL服务高度适合在网络上访问数据库。\n\n- MySQL服务运行于客户端/服务端或者嵌入式系统\n\n  MySQL数据库软件是一个客户端/服务端系统，其包含了一个多线程的SQL服务器用于支持不同的后端，不同的客户端程序以及库，管理工具，以及大范围的应用程序接口。\n\n  我们也提供MySQL服务作为一个嵌入的多线程库，你可以将其链接到你的应用以实现一个更小，更快，易于管理的独立产品。\n\n- 大量捐赠的MySQL软件已经可用\n\n  MySQL服务有一些使用的功能是由与我们密切合作的用户开发的。很有可能你最喜欢的应用或者语言由MySQL数据库服务支持。\n\n“MySQL”的官方读法是“ My Ess Que Ell ”（而不是 “my sequel” ），但是我们不介意你把它读作“my sequel”或者别的当地的读法。\n\n#### 1.3.2 MySQL的主要功能\n\n本节描述了一些MySQL数据库软件的重要特征。在大部分情况下，该路线图适用于所有版本的MySQL。想要知道在特定版本的MySQL中引入的功能，请在“In a Nutshell”章节查看对应的手册：\n\n- MySQL8.0：[章节1.4，“MySQL8.0更新了什么”](https://dev.mysql.com/doc/refman/8.0/en/mysql-nutshell.html)\n- MySQL5.7：[MySQL5.7更新了什么](https://dev.mysql.com/doc/refman/5.7/en/mysql-nutshell.html)\n- MySQL5.6：[MySQL5.6更新了什么](https://dev.mysql.com/doc/refman/5.6/en/mysql-nutshell.html)\n- MySQL5.5：[MySQL5.5更新了什么](https://dev.mysql.com/doc/refman/5.5/en/mysql-nutshell.html)\n\n**内部实现和可移植性**\n\n- 由C和C++实现\n- 通过了大规模的不同编译器的测试\n- 在多个不同的平台上运行。详见https://www.mysql.com/support/supportedplatforms/database.html\n- 关于移植，MySQL5.5及以上的版本使用CMake命令。更早的版本使用GNU Automake，Autoconf和Libtool。\n- 经过了Purify（一个商用的内存泄漏探测器）以及Valgrind（一个GPL工具）的测试。（http://developer.kde.org/~sewardj/）\n- 使用具有独立模块的多层服务的设计。\n- 设计为使用核心线程的多线程方式，如果多核CPU可用，则可以很容易的被使用。\n- 提供了基于事务和非事务的存储引擎。\n- 使用索引压缩的非常快速的B-tree磁盘（MyISAM）\n- 设计为可以相对简单的增加另一个存储引擎。如果你想为一个内部的数据库提供一个SQL接口，这会非常有用。\n- 使用了非常快速的基于线程的内存分配系统。\n- 使用了一种优化了的内部循环的join来非常快速的执行join。\n- 实现了在内存的hash table，其作为临时表来使用。\n- 使用了一种尽可能快的高度优化的类库来实现SQL功能。在所有的查询初始化后一般就不会再有内存分配。\n- 为使用客户端/服务端环境提供了作为单独程序的服务，作为一个库可以嵌入到独立的应用中。这种应用可以单独使用或者在网络无法访问的环境中使用。\n\n**数据类型**\n\n- 很多的数据类型：带符号/无符号的整数类型，1、2、3、4以及8比特的长度， [`FLOAT`](https://dev.mysql.com/doc/refman/8.0/en/floating-point-types.html), [`DOUBLE`](https://dev.mysql.com/doc/refman/8.0/en/floating-point-types.html), [`CHAR`](https://dev.mysql.com/doc/refman/8.0/en/char.html), [`VARCHAR`](https://dev.mysql.com/doc/refman/8.0/en/char.html), [`BINARY`](https://dev.mysql.com/doc/refman/8.0/en/binary-varbinary.html), [`VARBINARY`](https://dev.mysql.com/doc/refman/8.0/en/binary-varbinary.html), [`TEXT`](https://dev.mysql.com/doc/refman/8.0/en/blob.html), [`BLOB`](https://dev.mysql.com/doc/refman/8.0/en/blob.html), [`DATE`](https://dev.mysql.com/doc/refman/8.0/en/datetime.html), [`TIME`](https://dev.mysql.com/doc/refman/8.0/en/time.html), [`DATETIME`](https://dev.mysql.com/doc/refman/8.0/en/datetime.html), [`TIMESTAMP`](https://dev.mysql.com/doc/refman/8.0/en/datetime.html), [`YEAR`](https://dev.mysql.com/doc/refman/8.0/en/year.html), [`SET`](https://dev.mysql.com/doc/refman/8.0/en/set.html), [`ENUM`](https://dev.mysql.com/doc/refman/8.0/en/enum.html) ，以及OpenGIS的空间数据类型。详见[章节11，数据类型](https://dev.mysql.com/doc/refman/8.0/en/data-types.html)。\n- 固定长度和可变长度的字符串类型。\n\n**语句和功能**\n\n- 所有的操作符和功能支持都在Select列表和Where条件语句查询中。比如：\n\n  ```sql\n  mysql> SELECT CONCAT(first_name, ' ', last_name)\n      -> FROM citizen\n      -> WHERE income/dependents > 10000 AND age > 30;\n  ```\n\n- 完全支持SQL中的`Group By`和`Order By`条件。提供Group的功能的支持（ [`COUNT()`](https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_count), [`AVG()`](https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_avg), [`STD()`](https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_std), [`SUM()`](https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_sum), [`MAX()`](https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_max), [`MIN()`](https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_min), 和 [`GROUP_CONCAT()`](https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_group-concat)) ）\n\n- 完全支持拥有SQL和ODBC语法的 `LEFT OUTER JOIN` 和 `RIGHT OUTER JOIN`  \n\n- 支持标准SQL要求的表和列的别名。\n\n- 支持`Delete`，`Insert`，`Replace`，以及在`update`时返回修改的数量，或者返回匹配的行数，而不是在连接服务器时设置一个标识。\n\n- 支持MySQL特定的`show`语句，用于返回数据库，存储引擎，表，以及索引的信息。支持 `INFORMATION_SCHEMA`数据库，实现自标准SQL。\n\n-  [`EXPLAIN`](https://dev.mysql.com/doc/refman/8.0/en/explain.html) 语句会展现优化器如何处理查询语句的。\n\n- 函数名称独立于表明和列名。比如，`ABS`是一个合法的列明。唯一的限制是在调用函数时，在函数名和(之间不能存在空格。详见[章节9.3，关键字和保留字](https://dev.mysql.com/doc/refman/8.0/en/keywords.html)。\n\n- 你可以在一个语句内指定不同数据库的表。\n\n**安全性**\n\n- 权限和密码系统非常灵活和安全，并支持基于主机的认证。\n- 连接服务器时，通过对所有密码通信进行加密来实现密码安全。\n\n**可拓展性和限制**\n\n- 支持大型数据库。我们使用的MySQL服务拥有可以包含5000万条数据的数据库。我们也知道拥有20万张表和50亿条数据的MySQL服务器的用户。\n- 支持每张表最多64个索引。每个索引可以包含1-16列或者部分列。InnoDB表的索引最大宽度为767字节或者3072字节。详见 [章节15.6.1.16，“InnoDB表的限制”](https://dev.mysql.com/doc/refman/8.0/en/innodb-restrictions.html)。MyISAM表的最大索引宽度为1000字节。详见 [章节16.2，“MyISAM存储引擎”](https://dev.mysql.com/doc/refman/8.0/en/myisam-storage-engine.html)。可以使用Char，Varchar，Blob或者Text字段类型的前缀作为一个索引。\n\n**可连接性**\n\n- 客户端可以通过不同的协议连接MySQL服务：\n  - 客户端可以在任何平台上使用TCP/IP端口进行连接。\n  - 在windows系统，如果服务端启用了 [`named_pipe`](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_named_pipe) 系统参数进行启动，那客户端就可以使用name pipe进行连接。如果服务端启用了 [`shared_memory`](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_shared_memory)  系统参数进行启动，那客户端也可以使用  [`shared_memory`](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_shared_memory)  方式进行连接。客户端可以通过使用  [`--protocol=memory`](https://dev.mysql.com/doc/refman/8.0/en/connection-options.html#option_general_protocol) 选项来进行shared memory的连接。\n  - 在unix系统，客户端可以使用Unix域的套接字文件来进行连接。\n- MySQL的客户端程序可以用不同的语言编写。一个C语言编写的客户端库可以用于C语言和C++编写的客户端，或者任何别的提供C语言绑定的语言。\n-  C, C++, Eiffel, Java, Perl, PHP, Python, Ruby, 和 Tcl 的API都是可用的，使得MySQL客户端可以被多种语言编写。详见[章节28，连接器和API](https://dev.mysql.com/doc/refman/8.0/en/connectors-apis.html).\n- 连接器/ODBC（MyODBC）接口为那些使用ODBC（Open Datebase Connectivity）连接的客户端程序提供了MySQL支持。比如说，你可以使用MS Access去连接你的MySQL服务器。客户端可以运行在Windows或者Unix。连接器/ODBC源是可用的。和很多其他的功能一样，所有的ODBC2.5的功能都是被支持的。详见[MySQL 连接器/ODBC开发者指南](https://dev.mysql.com/doc/connector-odbc/en/)。\n- 连接器/J 接口为那些使用了JDBC连接器的java客户端程序提供了MySQL支持。客户端可以运行于Windows或者Unix。连接器/J 源是可用的。详见[MySQL连接器/J 5.1开发者指南](https://dev.mysql.com/doc/connector-j/5.1/en/)。\n- MySQL连接器/NET 允许开发者创建一个要求安全和高性能数据连接MySQL的.NET应用程序。它实现了必须的ADO.NET的接口并融入进了ADO.NET的感知工具。开发者可以选择他们的.NET语言去构建应用。MySQL连接器/NET是一个完全托管的ADO.NET驱动，100%由纯粹的C#编写。详见[MySQL连接器/NET开发者指南](https://dev.mysql.com/doc/connector-net/en/)。\n\n**本地化**\n\n- 服务器可以提供各种语言的报错信息。详见[章节10.12，设置错误提示的语言](https://dev.mysql.com/doc/refman/8.0/en/error-message-language.html)。\n- 完全支持不同的字符集，包括 `latin1` (cp1252)，`german`，`big5`，`ujis` ，几种Unicode编码，以及别的。比如， Scandinavian 的字符 “`å`”, “`ä`” 和“`ö`” 可以用在表和列的名字中。\n- 所有的数据以选定的字符集存储。\n- 根据默认的字符集和校对规则进行排序和比较。当MySQL服务运行的时候也可以对该规则进行更改(详见[章节10.3.2，“服务器字符集和校验”](https://dev.mysql.com/doc/refman/8.0/en/charset-server.html))。一个非常高级的排序例子，可以看下捷克的排序编码。MySQL支持多种可以在编译和运行阶段指定的字符集。\n- 服务器时区可以动态的改变，而且单独的客户端可以指定各自的时区。详见[章节5.1.13，MySQL服务器时区支持](https://dev.mysql.com/doc/refman/8.0/en/time-zone-support.html)。\n\n**客户端和工具**\n\n- MySQL包含多个客户端和实用程序。包括命令行程序，比如 [**mysqldump**](https://dev.mysql.com/doc/refman/8.0/en/mysqldump.html) 和 [**mysqladmin**](https://dev.mysql.com/doc/refman/8.0/en/mysqladmin.html) ，以及图形化程序 [MySQL Workbench](https://dev.mysql.com/doc/refman/8.0/en/workbench.html) 。\n- MySQL服务器内置了对于SQL语句的检查，优化和表修复的支持。这些语句可以通过[mysqlcheck](https://dev.mysql.com/doc/refman/8.0/en/mysqlcheck.html)客户端从命令行使用。MySQL也包含了[myisamchk](https://dev.mysql.com/doc/refman/8.0/en/myisamchk.html)工具，一个非常快速的命令行工具，用于在MyISAM表提交这些操作。详见[章节4，MySQL程序](https://dev.mysql.com/doc/refman/8.0/en/programs.html)。\n- 可以调用 --help 和 -?来呼叫MySQL程序用以获取在线协助。\n\n#### 1.3.3 MySQL的历史\n\n我们一开始想要用我们自己的快速，低级的引擎来使用mSQL数据库来连接我们的表。然而，经过了一些测试后，我们认为mSQL的速度和灵活性达不到我们的要求。这导致了我们的数据库的一个新的SQL接口，但是其API接口和mSQL几乎一样。该API设计为允许那些为mSQL编写的第三方代码可以很方便的移植以用于MySQL。\n\nMySQL得名于联合创建人Monty Widenius的女儿，My。\n\nMySQL的海豚（我们的logo）的名字是“Sakila”，这来自于“为海豚取名”的比赛中用户建议的庞大的名字列表里选择出来的。最后获胜的名字由来自非洲Swaziland， 一个名叫Ambrose Twebaze的开源软件开发者提供。据 Ambrose所说，这个女性化的名字Sakila出自 Swaziland 的当地语Siswati。Sakila也是坦桑尼亚的 Arusha 的一个城镇的名字，邻近 Ambrose 的原籍国乌干达。\n\n### 1.4 MySQL8.0更新了什么\n\n这一节总结了在MySQL8.0中哪些被添加，启用，以及移除。随附的部分罗列了在MySQL8.0中已经被新增，启用，移除的选项和变量。详见 [章节1.5，“服务器，状态变量和选项在MySQL8.0中的添加，弃用和删除”](https://dev.mysql.com/doc/refman/8.0/en/added-deprecated-removed.html)。\n<!-- more -->\n**MySQL8.0新增的特性**\n\n以下特性被加入到MySQL8.0中：\n\n- **数据字典。**MySQL现在合并了一个可以存储数据库对象的事务化的数据字典。在之前的MySQL发行版中，数据字典存储在元数据文件和非事务的表。关于更多信息，详见[章节14，MySQL数据字典](https://dev.mysql.com/doc/refman/8.0/en/data-dictionary.html)。\n\n- **原子数据定义语句(原子DDL)。**一个原子DDL语句包含了数据字典的升级，存储引擎的操作，以及将关联DDL操作的二进制日志写入到单独的原子事务中。要获取更多信息，详见[章节13.1.1，“原子数据定义语句的支持”](https://dev.mysql.com/doc/refman/8.0/en/atomic-ddl.html)。\n\n- **升级过程。**在以前，安装了一个新版本的MySQL后，MySQL服务器会在下一次启动时自动升级数据字典表，在此之后，需要DBA在mysql的schema里手动调用 [**mysql_upgrade**](https://dev.mysql.com/doc/refman/8.0/en/mysql-upgrade.html) 去升级系统表，也包括在别的schema比如sys schema和user schema里面的对象。\n\n  对于MySQL8.0.16来说，服务器会执行先前由 [**mysql_upgrade**](https://dev.mysql.com/doc/refman/8.0/en/mysql-upgrade.html) 控制的任务。在安装了新版本的MySQL之后，服务器会在下次升级时自动执行所有的升级任务，而不是依赖DBA去调用 [**mysql_upgrade**](https://dev.mysql.com/doc/refman/8.0/en/mysql-upgrade.html) 。而且，服务器会更新帮助表里面的内容（这是 [**mysql_upgrade**](https://dev.mysql.com/doc/refman/8.0/en/mysql-upgrade.html) 没有做的）。一个新的 [`--upgrade`](https://dev.mysql.com/doc/refman/8.0/en/server-options.html#option_mysqld_upgrade) 服务器参数为服务器如何自动执行数据字典和服务器升级的选项提供了控制。想要了解更多，详见[章节2.11.3，MySQL的升级流程升级了什么](https://dev.mysql.com/doc/refman/8.0/en/upgrading-what-is-upgraded.html)。\n\n- **安全和账户管理**。增加下列增强的功能后，可以提高安全性以及增加DBA在账户管理方面的灵活性：\n\n  - 在mysql系统数据库中的授权表现在属于InnoDB（事务型）表。以前它们是MyISAM（非事务型）表。授权表的存储引擎的变化是伴随账户管理语句变化的基础。以前一句命名多个用户的账户管理的语句（如 [`CREATE USER`](https://dev.mysql.com/doc/refman/8.0/en/create-user.html) 或 [`DROP USER`](https://dev.mysql.com/doc/refman/8.0/en/drop-user.html)) ，在其中一些用户命名失败的情况下也可以对别的用户命名成功。现在，每一个语句都是事务的，且要么所有的命名用户都成功，要么其中任何一个失败之后语句都会回滚并不发生任何效果。语句如果成功会被写入二进制表中，但是在失败时不会写入；在这种情况下，会发生回滚且没有任何变化发生。想要了解更多，详见[13.1.1“原子数据定义语句的支持”](https://dev.mysql.com/doc/refman/8.0/en/atomic-ddl.html)。\n\n  - 一个新的 `caching_sha2_password`  认证插件已经可用。类似于 `sha256_password`  插件， caching_sha2_password 实现了 SHA-256 的密码Hash，但是在连接时用缓存来解决延迟问题。它也支持更多的连接协议，而且不需要为了基于RAS密钥对的密码交换功能和OpenSSL进行连接。\n\n     caching_sha2_password 和 sha256_password 的认证方式相比 mysql_native_password 插件提供了更多的安全加密方式，而且 caching_sha2_password 的性能比sha256_password更好。由于这些 caching_sha2_password 卓越的安全和性能的特点，现在已经成为首选的认证插件，而且也是默认的认证插件，而不是  `mysql_native_password` 。想要了解这种默认插件的变化对于服务器操作和服务器与客户端及连接器之间的兼容性的信息，详见 [ caching_sha2_password 作为首选的认证插件](https://dev.mysql.com/doc/refman/8.0/en/upgrading-from-previous-series.html#upgrade-caching-sha2-password)。\n\n  - MySQL如今支持角色，即权限集合的命名。角色可以被创建和删除。角色可以被授权和撤销权限。角色可以从用户账号中授权和删除。一个账户下的活跃的适用角色可以从账户里已授权的角色中选择，也可以在账户的登陆期间进行修改。想要了解更多信息，详见[6.2.10，使用角色](https://dev.mysql.com/doc/refman/8.0/en/roles.html)。\n\n  - MySQL现在包含了用户账号目录的概念，根据系统和普通用户区分他们是否有 [`SYSTEM_USER`](https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_system-user) 权限。详见[6.2.11，账户目录](https://dev.mysql.com/doc/refman/8.0/en/account-categories.html)。\n\n  - 在以前，除非在某些schema里，否则不能授予一个全局的权限。现在只要设置 [`partial_revokes`](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_partial_revokes)  系统参数为 enabled 就可以做到。详见[6.2.12，使用部分撤销的权限限制](https://dev.mysql.com/doc/refman/8.0/en/partial-revokes.html)。\n\n  - 授权语句拥有一个可以指定额外的权限信息的用户条件去用于语句执行。这种语法在SQL层面可见， 尽管其主要目的是使在部分撤销所施加的授予者特权限制的所有节点之间实现统一复制， 通过使这些限制出现在二进制日志中。\n\n  - MySQL现在会保留历史密码信息，限制重复使用以前的密码。DBA可以要求一些数量的密码更改或者一段时间内不可以从以前的密码中选择。可以为全局和每个账户建立密码重新使用的策略。\n\n    现在可以通过指定当前要被取代的密码来验证更改密码的操作。这可以让DBA去避免那些不能提供他们知道的当前密码的用户去修改密码。可以为全局或每个账户建立密码验证策略。\n\n    账户现在允许使用双重验证，这使得在复杂的多服务器系统上可以无缝的提交分阶段的密码修改，而不需要停机。\n\n    这些功能为DBA提供了对密码管理的完全掌控。关于更多信息，详见[6.2.15，密码管理](https://dev.mysql.com/doc/refman/8.0/en/password-management.html)。\n\n  - MySQL现在支持FIPS模式，它使用OpenSSL编译，在运行时一个OpenSSL库和FIPS对象模式都是可用的。FIPS模式为密码相关操作强加了一些条件，比如对于可接受的加密方式的限制，或者对于密码长度的要求。详见[6.5，FIPS支持](https://dev.mysql.com/doc/refman/8.0/en/fips-mode.html)。\n\n  -  服务器现在可以在运行时重新配置服务器用于新连接的SSL上下文。该功能可能会很有用，比如，在一个MySQL服务器运行太久而SSL证书过期，可以避免去重启该服务器。详见 [加密连接的服务器端运行时配置](https://dev.mysql.com/doc/refman/8.0/en/using-encrypted-connections.html#using-encrypted-connections-server-side-runtime-configuration)。\n\n  - OpenSSL1.1.1支持用于加密连接的TLS1.3协议，如果服务端和客户端都用OpenSSL或更高版本来编译，那么MySQL8.0.16和更高版本下也将支持TLS1.3协议。详见[6.3.2，加密连接TLS协议和密码](https://dev.mysql.com/doc/refman/8.0/en/encrypted-connection-protocols-ciphers.html)。\n\n  - MySQL现在授予客户端在已命名的管道上用于windows尽量少的必要连接的访问控制。新的MySQL客户端软件可以不用任何额外配置打开命名管道连接。如果更早版本的客户端软件不能马上升级，那么新的 [`named_pipe_full_access_group`](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_named_pipe_full_access_group)系统参数可以给予windows用户组必要的权限用于打开命名管道连接。完全访问权限的用户组的成员应该是暂时的且被限制的。\n\n- **资源管理。**MySQL现在支持资源组的创建和管理，并且允许跟服务器一起运行的线程分配给特定的组，以便线程根据组的可用的资源执行。组属性可以控制其资源，允许或者限制组内线程的资源消费。DBA可以根据不同的工作量来调整这些属性为合适的值。现在，CPU时间是可以管理的资源，其概念由\"虚拟CPU\"来表示，其包含了CPU内核，超线程，硬件线程等等。服务器在启动时决定有多少虚拟CPU可用，并且拥有相应权限的数据库管理员可以将这些CPU与资源组关联并分配线程给组。要了解更多信息，详见[8.12.5，资源组](https://dev.mysql.com/doc/refman/8.0/en/resource-groups.html)。\n\n- **表加密管理。**","slug":"MySql-Document","published":1,"updated":"2021-11-23T02:15:25.000Z","_id":"ckwadg4nx002e73cfeq922f98","layout":"post","photos":[],"link":"","content":"<p><a href=\"https://dev.mysql.com/doc/refman/8.0/en/\">原文文档</a>  </p>\n<p><strong>声明</strong></p>\n<p>该文档纯粹自己手动翻译， 也许网上有更好的版本， 但是我这个属于自己学习的版本， 为了提高英语水平和对MySQL的理解， 后续不保证会持续更新，内容如有理解错误， 还请指正。</p>\n<h2 id=\"MySQL-8-0-参考手册\"><a href=\"#MySQL-8-0-参考手册\" class=\"headerlink\" title=\"MySQL 8.0 参考手册\"></a>MySQL 8.0 参考手册</h2><h3 id=\"包含MySQL-NDB集群8-0\"><a href=\"#包含MySQL-NDB集群8-0\" class=\"headerlink\" title=\"包含MySQL NDB集群8.0\"></a>包含MySQL NDB集群8.0</h3><h4 id=\"摘要\"><a href=\"#摘要\" class=\"headerlink\" title=\"摘要\"></a>摘要</h4><p>这是一份MySQL参考手册。 该文档分别记录了MySQL8.0到8.0.20，以及基于NDB8.0版本到NDB8.0.19版本的NDB集群发布版本。这份文档可能包括一些目前还没发布的MySQL版本的特性。想要了解哪些版本已经发布，请查看<a href=\"https://dev.mysql.com/doc/relnotes/mysql/8.0/en/\">MySQL8.0发布日志</a>。  </p>\n<p><strong>MySQL8.0特性</strong>。这份手册描述的特性并没有包含在所有版本的MySQL8.0中；这些特性可能不包含在你所购买的MySQL8.0版本中。如果你有任何问题是关于你的MySQL8.0版本中所包含的特性的，请参阅你的MySQL8.0许可协议或者联系你的oracle销售代表。  </p>\n<p>有关每个发布版本的变化，请查看<a href=\"https://dev.mysql.com/doc/relnotes/mysql/8.0/en/\">MySQL8.0发布日志</a>。  </p>\n<p>有关法律信息和许可信息，请查看<a href=\"https://dev.mysql.com/doc/refman/8.0/en/preface.html\">前言和法律声明</a>。  </p>\n<p>在使用MySQL中需要帮助，请访问<a href=\"http://forums.mysql.com/\">MySQL论坛</a>，你可以在那里向别的MySQL用户描述你的问题。  </p>\n<p>文档创建于：2019-10-16  </p>\n<h2 id=\"1-一般信息\"><a href=\"#1-一般信息\" class=\"headerlink\" title=\"1.  一般信息\"></a>1.  一般信息</h2><p>MySQL提供了非常快速的，多线程，多用户，和健壮的SQL数据库服务。MySQL服务用于关键服务，高负荷生产的系统以及嵌入大量部署的软件。Oracle是Oracle公司及其分支机构的注册商标。MySQL是Oracle公司及其分支机构的商标，未经Oracle正式的书面许可，客户不得使用。其他的名字可能是其各自所有者的商标。  </p>\n<p>MySQL软件具有双重许可。用户可以在GNU通用公共许可 (<a href=\"http://www.fsf.org/licenses/\">http://www.fsf.org/licenses/</a>)  条款下将MySQL软件作为开源软件产品使用，或者从Oracle购买一份标准的商业许可。访问 <a href=\"http://www.mysql.com/company/legal/licensing/\">http://www.mysql.com/company/legal/licensing/</a>  以获取更多关于授权政策的信息。  </p>\n<p>下面的列表描述了一些在本手册中需要特别关注的部分：  </p>\n<ul>\n<li><p>访问<a href=\"https://dev.mysql.com/doc/refman/8.0/en/features.html\">1.3.2章节，“MySql的主要特性”</a>，讨论关于MySQL数据库服务的功能。</p>\n</li>\n<li><p>访问<a href=\"https://dev.mysql.com/doc/refman/8.0/en/mysql-nutshell.html\">1.4章节，“MySQL8.0更新了什么”</a>，获取关于MySQL新功能的概况。访问<a href=\"https://dev.mysql.com/doc/relnotes/mysql/8.0/en/\">发布日志</a>，获取关于每个版本的更新信息。</p>\n</li>\n<li><p>访问<a href=\"https://dev.mysql.com/doc/refman/8.0/en/installing.html\">2章节，安装和升级MySQL</a>，获取安装介绍。访问<a href=\"https://dev.mysql.com/doc/refman/8.0/en/upgrading.html\">章节2.11</a>，获取MySQL升级说明。  </p>\n</li>\n<li><p>访问<a href=\"https://dev.mysql.com/doc/refman/8.0/en/tutorial.html\">第3章节，教程</a>，获取MySQL数据库服务的教程介绍。</p>\n</li>\n<li><p>访问 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/server-administration.html\">第5章节，MySQL服务管理</a>，获取关于MySQL服务的配置和管理的信息。</p>\n</li>\n<li><p>访问 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/security.html\">第6章节，安全</a>，获取关于MySQL的安全信息。</p>\n</li>\n<li><p>访问 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/replication.html\">第17章节，复制</a>，获取关于设置复制服务器的信息。</p>\n</li>\n<li><p>访问<a href=\"https://dev.mysql.com/doc/refman/8.0/en/mysql-enterprise.html\">第30章节，MySQL企业版</a>，获取关于MySQL企业版的信息，商用版的MySQL会发布一些进阶的功能和管理工具。</p>\n</li>\n<li><p>访问 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/faqs.html\">附录A，MySQL8.0常见问题</a>，获取关于MySQL服务及其功能的一些常见问题的答案。</p>\n</li>\n<li><p>访问<a href=\"https://dev.mysql.com/doc/relnotes/mysql/8.0/en/\">发布日志</a>，获取关于新特性和bug修复的发布信息。</p>\n<p><strong>重要</strong>  </p>\n<p>如果要报告问题或者bug，请按照<a href=\"https://dev.mysql.com/doc/refman/8.0/en/bug-reports.html\">章节17，“如何报告bug和问题”</a>的指示。如果你发现在MySQL中的一个敏感的安全性的bug，请立即发送邮件信息到&lt; <a href=\"mailto:secalert_us@oracle.com\">secalert_us@oracle.com</a> &gt;让我们知晓。例外：支持客户应该报告所有的问题，包括安全bug，发送给Oracle支持部门。  </p>\n</li>\n</ul>\n<h3 id=\"1-1-关于本手册\"><a href=\"#1-1-关于本手册\" class=\"headerlink\" title=\"1.1 关于本手册\"></a>1.1 关于本手册</h3><p>这份参考手册适用于MySQL数据库系统8.0版本到8.0.20版。在本文中关于和MySQL8.0镜像版本的区别参照了（8.0.x）的发行版本。查看<a href=\"https://dev.mysql.com/doc/refman/8.0/en/preface.html#legalnotice\">法律声明</a>，获取许可的信息。</p>\n<p>本手册不适用于MySQL软件的更早版本，因为在MySQL8.0和更早版本之间存在着很多功能及别的方面的不同。如果你正在使用MySQL软件的早期发布版本，请参考对应的手册。比如：<a href=\"https://dev.mysql.com/doc/refman/5.7/en/\">MySQL5.7操作手册</a>可以覆盖MySQL软件的5.7发布版本系列。</p>\n<p>由于这个手册是作为参考来使用，因此不会提供关于SQL或关联的数据库概念的一般介绍。同样也不会教你如何使用你的操作系统或命令行解释器。</p>\n<p>MySQL数据库软件在经历不断的发展，其手册同样也会不断的更新。最新版本的手册可以在 <a href=\"https://dev.mysql.com/doc/\">https://dev.mysql.com/doc/</a> 在线搜索到。其他格式也可以在这里获取，包括HTML，PDF和EPUB版本。</p>\n<p>参考手册的源文件由DocBook XML格式写成。其HTML版本和其他版本都自动生成，主要使用DocBook XSL样式表。关于DocBook的信息，详见 <a href=\"http://docbook.org/\">http://docbook.org/</a> 。</p>\n<p>MySQL的源代码包括内部文档，由Doxygen编写。已完成的Doxygen内容可以访问 <a href=\"https://dev.mysql.com/doc/index-other.html\">https://dev.mysql.com/doc/index-other.html</a> 。同样也可以按照 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/source-installation-doxygen.html\">章节2.9.10，“创建MySQL Doxygen文档内容”</a>的介绍从MySQL源分发创建本地的内容。</p>\n<p>如果你有使用MySQL的的问题，加入 <a href=\"https://mysqlcommunity.slack.com/\">MySQL开发者社区</a>，或者在我们的论坛提问；详见 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/forums.html\">章节1.6.2，“MySQL论坛的MySQL社区支持”</a>。如果你对本手册有补充或者更正的建议，请发送到 <a href=\"http://www.mysql.com/company/contact/%E3%80%82\">http://www.mysql.com/company/contact/。</a></p>\n<p>本手册最初由 David Axmark 和 Michael “Monty” Widenius 编写。主要由MySQL文档团队编写，成员包括 Chris Cole， Paul DuBois， Margaret Fisher， Edward Gilmore， Stefan Hinz， David Moss， Philip Olson， Daniel Price， Daniel So， 以及 Jon Stephens 。</p>\n<h3 id=\"1-2-排版和语法约定\"><a href=\"#1-2-排版和语法约定\" class=\"headerlink\" title=\"1.2  排版和语法约定\"></a>1.2  排版和语法约定</h3><p>本手册使用下列的排版约定：</p>\n<p>// TODO</p>\n<h3 id=\"1-3-MySQL数据库管理系统总览\"><a href=\"#1-3-MySQL数据库管理系统总览\" class=\"headerlink\" title=\"1.3 MySQL数据库管理系统总览\"></a>1.3 MySQL数据库管理系统总览</h3><h4 id=\"1-3-1-什么是MySQL？\"><a href=\"#1-3-1-什么是MySQL？\" class=\"headerlink\" title=\"1.3.1 什么是MySQL？\"></a>1.3.1 什么是MySQL？</h4><p>MySQL是最受欢迎的开源的SQL数据库管理系统，由Oracle公司开发，发布和支持。</p>\n<p><a href=\"http://www.mysql.com/\">MySQL官网</a>提供了MySQL软件的最新版本的信息。</p>\n<ul>\n<li><p>MySQL是一个数据库管理系统  </p>\n<p>数据库是数据的结构化集合。它可以是任何东西，从简单的购物清单，到一个图片集，或者公司网络中的海量信息。在一个计算机数据库上添加，访问和执行数据存储，你需要一个像MySQL服务器一样的数据库管理系统。由于计算机非常善于处理大量的数据，数据库管理系统就在计算机中扮演了一个中心角色，无论是作为一个独立的程序，还是别的应用的一部分。</p>\n</li>\n<li><p>MySQL数据库是关系型的</p>\n<p>一个关系型数据库将数据存储在不同的表中，而不是把所有的数据放在一个大的存储库中。数据库结构组织成物理文件以优化速度。具有对象（诸如数据库，表，视图，行和列）的逻辑模型提供了灵活的程序设计环境。你可以建立规则去管理不同字段之间的关系，比如一对一，一对多，唯一，必填或者选填，以及不同表之间的指向。数据库强制执行这些规则，所以一个良好设计的数据库，可以使你的程序避免看到不一致，重复，孤立，过期，或者缺失的数据。</p>\n<p>MySQL中的SQL代表“结构化查询语言”。SQL是用于访问数据库的最通用的标准化语言。基于你的程序设计环境，又可以直接输入SQL（比如，用于创建报表），用另一种语言把SQL注入到代码中，或者使用隐含SQL语法的特定语言的API。</p>\n<p>SQL由 ANSI/ISO 的SQL标准来定义。SQL的标准从1986年以来不断发展，存在多个不同的版本。在本手册中，“SQL-92”是指1992年发布的标准，“SQL:1999”是指在1999年发布的版本，以及“SQL:2003”，指现在的版本。我们在任何时用到“SQL标准”这个词时，都是指当前版本的SQL标准。</p>\n</li>\n<li><p>MySQL软件是开源的</p>\n<p>开源意味着对于任何人来说都可以使用和修改该软件。任何人都可以从网络上下载MySQL软件并且免费使用。你也可以按照你的意愿去学习和更改源代码以适应你的需求。MySQL软件使用<a href=\"http://www.fsf.org/licenses/\">GPL</a>)（通用公共许可），来定义你在不同情景下对软件能做的和不能做的事。如果你对GPL感到不适，或者想要将MySQL的代码注入到一个商用软件中，你可以从我们这里购买一份商用许可。访问<a href=\"http://www.mysql.com/company/legal/licensing/\">MySQL许可概览</a>以获取更多信息。</p>\n</li>\n<li><p>MySQL数据库服务快速，可靠，可拓展且易用</p>\n<p>如果你寻求的就是这个，你应该去尝试一下。MySQL服务可以在笔记本或者台式机上与其他应用，网络服务一起舒适的运行，只需要一点甚至无需额外的关注。如果你将整台机器都用于MySQL，你可以调整设置利用所有的内存，CPU功率，以及IO性能。MySQL同样可以扩大网络和机器的集群。</p>\n<p>MySQL服务最初开发用来比现有方式更快的处理数据，而且成功的应用在高要求的生产环境很多年。尽管经历了不断的发展，MySQL如今提供了一组丰富而有用的功能。其可连接性，速度以及安全性使得MySQL服务高度适合在网络上访问数据库。</p>\n</li>\n<li><p>MySQL服务运行于客户端/服务端或者嵌入式系统</p>\n<p>MySQL数据库软件是一个客户端/服务端系统，其包含了一个多线程的SQL服务器用于支持不同的后端，不同的客户端程序以及库，管理工具，以及大范围的应用程序接口。</p>\n<p>我们也提供MySQL服务作为一个嵌入的多线程库，你可以将其链接到你的应用以实现一个更小，更快，易于管理的独立产品。</p>\n</li>\n<li><p>大量捐赠的MySQL软件已经可用</p>\n<p>MySQL服务有一些使用的功能是由与我们密切合作的用户开发的。很有可能你最喜欢的应用或者语言由MySQL数据库服务支持。</p>\n</li>\n</ul>\n<p>“MySQL”的官方读法是“ My Ess Que Ell ”（而不是 “my sequel” ），但是我们不介意你把它读作“my sequel”或者别的当地的读法。</p>\n<h4 id=\"1-3-2-MySQL的主要功能\"><a href=\"#1-3-2-MySQL的主要功能\" class=\"headerlink\" title=\"1.3.2 MySQL的主要功能\"></a>1.3.2 MySQL的主要功能</h4><p>本节描述了一些MySQL数据库软件的重要特征。在大部分情况下，该路线图适用于所有版本的MySQL。想要知道在特定版本的MySQL中引入的功能，请在“In a Nutshell”章节查看对应的手册：</p>\n<ul>\n<li>MySQL8.0：<a href=\"https://dev.mysql.com/doc/refman/8.0/en/mysql-nutshell.html\">章节1.4，“MySQL8.0更新了什么”</a></li>\n<li>MySQL5.7：<a href=\"https://dev.mysql.com/doc/refman/5.7/en/mysql-nutshell.html\">MySQL5.7更新了什么</a></li>\n<li>MySQL5.6：<a href=\"https://dev.mysql.com/doc/refman/5.6/en/mysql-nutshell.html\">MySQL5.6更新了什么</a></li>\n<li>MySQL5.5：<a href=\"https://dev.mysql.com/doc/refman/5.5/en/mysql-nutshell.html\">MySQL5.5更新了什么</a></li>\n</ul>\n<p><strong>内部实现和可移植性</strong></p>\n<ul>\n<li>由C和C++实现</li>\n<li>通过了大规模的不同编译器的测试</li>\n<li>在多个不同的平台上运行。详见<a href=\"https://www.mysql.com/support/supportedplatforms/database.html\">https://www.mysql.com/support/supportedplatforms/database.html</a></li>\n<li>关于移植，MySQL5.5及以上的版本使用CMake命令。更早的版本使用GNU Automake，Autoconf和Libtool。</li>\n<li>经过了Purify（一个商用的内存泄漏探测器）以及Valgrind（一个GPL工具）的测试。（<a href=\"http://developer.kde.org/~sewardj/%EF%BC%89\">http://developer.kde.org/~sewardj/）</a></li>\n<li>使用具有独立模块的多层服务的设计。</li>\n<li>设计为使用核心线程的多线程方式，如果多核CPU可用，则可以很容易的被使用。</li>\n<li>提供了基于事务和非事务的存储引擎。</li>\n<li>使用索引压缩的非常快速的B-tree磁盘（MyISAM）</li>\n<li>设计为可以相对简单的增加另一个存储引擎。如果你想为一个内部的数据库提供一个SQL接口，这会非常有用。</li>\n<li>使用了非常快速的基于线程的内存分配系统。</li>\n<li>使用了一种优化了的内部循环的join来非常快速的执行join。</li>\n<li>实现了在内存的hash table，其作为临时表来使用。</li>\n<li>使用了一种尽可能快的高度优化的类库来实现SQL功能。在所有的查询初始化后一般就不会再有内存分配。</li>\n<li>为使用客户端/服务端环境提供了作为单独程序的服务，作为一个库可以嵌入到独立的应用中。这种应用可以单独使用或者在网络无法访问的环境中使用。</li>\n</ul>\n<p><strong>数据类型</strong></p>\n<ul>\n<li>很多的数据类型：带符号/无符号的整数类型，1、2、3、4以及8比特的长度， <a href=\"https://dev.mysql.com/doc/refman/8.0/en/floating-point-types.html\"><code>FLOAT</code></a>, <a href=\"https://dev.mysql.com/doc/refman/8.0/en/floating-point-types.html\"><code>DOUBLE</code></a>, <a href=\"https://dev.mysql.com/doc/refman/8.0/en/char.html\"><code>CHAR</code></a>, <a href=\"https://dev.mysql.com/doc/refman/8.0/en/char.html\"><code>VARCHAR</code></a>, <a href=\"https://dev.mysql.com/doc/refman/8.0/en/binary-varbinary.html\"><code>BINARY</code></a>, <a href=\"https://dev.mysql.com/doc/refman/8.0/en/binary-varbinary.html\"><code>VARBINARY</code></a>, <a href=\"https://dev.mysql.com/doc/refman/8.0/en/blob.html\"><code>TEXT</code></a>, <a href=\"https://dev.mysql.com/doc/refman/8.0/en/blob.html\"><code>BLOB</code></a>, <a href=\"https://dev.mysql.com/doc/refman/8.0/en/datetime.html\"><code>DATE</code></a>, <a href=\"https://dev.mysql.com/doc/refman/8.0/en/time.html\"><code>TIME</code></a>, <a href=\"https://dev.mysql.com/doc/refman/8.0/en/datetime.html\"><code>DATETIME</code></a>, <a href=\"https://dev.mysql.com/doc/refman/8.0/en/datetime.html\"><code>TIMESTAMP</code></a>, <a href=\"https://dev.mysql.com/doc/refman/8.0/en/year.html\"><code>YEAR</code></a>, <a href=\"https://dev.mysql.com/doc/refman/8.0/en/set.html\"><code>SET</code></a>, <a href=\"https://dev.mysql.com/doc/refman/8.0/en/enum.html\"><code>ENUM</code></a> ，以及OpenGIS的空间数据类型。详见<a href=\"https://dev.mysql.com/doc/refman/8.0/en/data-types.html\">章节11，数据类型</a>。</li>\n<li>固定长度和可变长度的字符串类型。</li>\n</ul>\n<p><strong>语句和功能</strong></p>\n<ul>\n<li><p>所有的操作符和功能支持都在Select列表和Where条件语句查询中。比如：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">SELECT</span> CONCAT(first_name, <span class=\"string\">&#x27; &#x27;</span>, last_name)</span><br><span class=\"line\">    <span class=\"operator\">-</span><span class=\"operator\">&gt;</span> <span class=\"keyword\">FROM</span> citizen</span><br><span class=\"line\">    <span class=\"operator\">-</span><span class=\"operator\">&gt;</span> <span class=\"keyword\">WHERE</span> income<span class=\"operator\">/</span>dependents <span class=\"operator\">&gt;</span> <span class=\"number\">10000</span> <span class=\"keyword\">AND</span> age <span class=\"operator\">&gt;</span> <span class=\"number\">30</span>;</span><br></pre></td></tr></table></figure></li>\n<li><p>完全支持SQL中的<code>Group By</code>和<code>Order By</code>条件。提供Group的功能的支持（ <a href=\"https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_count\"><code>COUNT()</code></a>, <a href=\"https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_avg\"><code>AVG()</code></a>, <a href=\"https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_std\"><code>STD()</code></a>, <a href=\"https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_sum\"><code>SUM()</code></a>, <a href=\"https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_max\"><code>MAX()</code></a>, <a href=\"https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_min\"><code>MIN()</code></a>, 和 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_group-concat\"><code>GROUP_CONCAT()</code></a>) ）</p>\n</li>\n<li><p>完全支持拥有SQL和ODBC语法的 <code>LEFT OUTER JOIN</code> 和 <code>RIGHT OUTER JOIN</code>  </p>\n</li>\n<li><p>支持标准SQL要求的表和列的别名。</p>\n</li>\n<li><p>支持<code>Delete</code>，<code>Insert</code>，<code>Replace</code>，以及在<code>update</code>时返回修改的数量，或者返回匹配的行数，而不是在连接服务器时设置一个标识。</p>\n</li>\n<li><p>支持MySQL特定的<code>show</code>语句，用于返回数据库，存储引擎，表，以及索引的信息。支持 <code>INFORMATION_SCHEMA</code>数据库，实现自标准SQL。</p>\n</li>\n<li><p> <a href=\"https://dev.mysql.com/doc/refman/8.0/en/explain.html\"><code>EXPLAIN</code></a> 语句会展现优化器如何处理查询语句的。</p>\n</li>\n<li><p>函数名称独立于表明和列名。比如，<code>ABS</code>是一个合法的列明。唯一的限制是在调用函数时，在函数名和(之间不能存在空格。详见<a href=\"https://dev.mysql.com/doc/refman/8.0/en/keywords.html\">章节9.3，关键字和保留字</a>。</p>\n</li>\n<li><p>你可以在一个语句内指定不同数据库的表。</p>\n</li>\n</ul>\n<p><strong>安全性</strong></p>\n<ul>\n<li>权限和密码系统非常灵活和安全，并支持基于主机的认证。</li>\n<li>连接服务器时，通过对所有密码通信进行加密来实现密码安全。</li>\n</ul>\n<p><strong>可拓展性和限制</strong></p>\n<ul>\n<li>支持大型数据库。我们使用的MySQL服务拥有可以包含5000万条数据的数据库。我们也知道拥有20万张表和50亿条数据的MySQL服务器的用户。</li>\n<li>支持每张表最多64个索引。每个索引可以包含1-16列或者部分列。InnoDB表的索引最大宽度为767字节或者3072字节。详见 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/innodb-restrictions.html\">章节15.6.1.16，“InnoDB表的限制”</a>。MyISAM表的最大索引宽度为1000字节。详见 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/myisam-storage-engine.html\">章节16.2，“MyISAM存储引擎”</a>。可以使用Char，Varchar，Blob或者Text字段类型的前缀作为一个索引。</li>\n</ul>\n<p><strong>可连接性</strong></p>\n<ul>\n<li>客户端可以通过不同的协议连接MySQL服务：<ul>\n<li>客户端可以在任何平台上使用TCP/IP端口进行连接。</li>\n<li>在windows系统，如果服务端启用了 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_named_pipe\"><code>named_pipe</code></a> 系统参数进行启动，那客户端就可以使用name pipe进行连接。如果服务端启用了 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_shared_memory\"><code>shared_memory</code></a>  系统参数进行启动，那客户端也可以使用  <a href=\"https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_shared_memory\"><code>shared_memory</code></a>  方式进行连接。客户端可以通过使用  <a href=\"https://dev.mysql.com/doc/refman/8.0/en/connection-options.html#option_general_protocol\"><code>--protocol=memory</code></a> 选项来进行shared memory的连接。</li>\n<li>在unix系统，客户端可以使用Unix域的套接字文件来进行连接。</li>\n</ul>\n</li>\n<li>MySQL的客户端程序可以用不同的语言编写。一个C语言编写的客户端库可以用于C语言和C++编写的客户端，或者任何别的提供C语言绑定的语言。</li>\n<li> C, C++, Eiffel, Java, Perl, PHP, Python, Ruby, 和 Tcl 的API都是可用的，使得MySQL客户端可以被多种语言编写。详见<a href=\"https://dev.mysql.com/doc/refman/8.0/en/connectors-apis.html\">章节28，连接器和API</a>.</li>\n<li>连接器/ODBC（MyODBC）接口为那些使用ODBC（Open Datebase Connectivity）连接的客户端程序提供了MySQL支持。比如说，你可以使用MS Access去连接你的MySQL服务器。客户端可以运行在Windows或者Unix。连接器/ODBC源是可用的。和很多其他的功能一样，所有的ODBC2.5的功能都是被支持的。详见<a href=\"https://dev.mysql.com/doc/connector-odbc/en/\">MySQL 连接器/ODBC开发者指南</a>。</li>\n<li>连接器/J 接口为那些使用了JDBC连接器的java客户端程序提供了MySQL支持。客户端可以运行于Windows或者Unix。连接器/J 源是可用的。详见<a href=\"https://dev.mysql.com/doc/connector-j/5.1/en/\">MySQL连接器/J 5.1开发者指南</a>。</li>\n<li>MySQL连接器/NET 允许开发者创建一个要求安全和高性能数据连接MySQL的.NET应用程序。它实现了必须的ADO.NET的接口并融入进了ADO.NET的感知工具。开发者可以选择他们的.NET语言去构建应用。MySQL连接器/NET是一个完全托管的ADO.NET驱动，100%由纯粹的C#编写。详见<a href=\"https://dev.mysql.com/doc/connector-net/en/\">MySQL连接器/NET开发者指南</a>。</li>\n</ul>\n<p><strong>本地化</strong></p>\n<ul>\n<li>服务器可以提供各种语言的报错信息。详见<a href=\"https://dev.mysql.com/doc/refman/8.0/en/error-message-language.html\">章节10.12，设置错误提示的语言</a>。</li>\n<li>完全支持不同的字符集，包括 <code>latin1</code> (cp1252)，<code>german</code>，<code>big5</code>，<code>ujis</code> ，几种Unicode编码，以及别的。比如， Scandinavian 的字符 “<code>å</code>”, “<code>ä</code>” 和“<code>ö</code>” 可以用在表和列的名字中。</li>\n<li>所有的数据以选定的字符集存储。</li>\n<li>根据默认的字符集和校对规则进行排序和比较。当MySQL服务运行的时候也可以对该规则进行更改(详见<a href=\"https://dev.mysql.com/doc/refman/8.0/en/charset-server.html\">章节10.3.2，“服务器字符集和校验”</a>)。一个非常高级的排序例子，可以看下捷克的排序编码。MySQL支持多种可以在编译和运行阶段指定的字符集。</li>\n<li>服务器时区可以动态的改变，而且单独的客户端可以指定各自的时区。详见<a href=\"https://dev.mysql.com/doc/refman/8.0/en/time-zone-support.html\">章节5.1.13，MySQL服务器时区支持</a>。</li>\n</ul>\n<p><strong>客户端和工具</strong></p>\n<ul>\n<li>MySQL包含多个客户端和实用程序。包括命令行程序，比如 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/mysqldump.html\"><strong>mysqldump</strong></a> 和 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/mysqladmin.html\"><strong>mysqladmin</strong></a> ，以及图形化程序 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/workbench.html\">MySQL Workbench</a> 。</li>\n<li>MySQL服务器内置了对于SQL语句的检查，优化和表修复的支持。这些语句可以通过<a href=\"https://dev.mysql.com/doc/refman/8.0/en/mysqlcheck.html\">mysqlcheck</a>客户端从命令行使用。MySQL也包含了<a href=\"https://dev.mysql.com/doc/refman/8.0/en/myisamchk.html\">myisamchk</a>工具，一个非常快速的命令行工具，用于在MyISAM表提交这些操作。详见<a href=\"https://dev.mysql.com/doc/refman/8.0/en/programs.html\">章节4，MySQL程序</a>。</li>\n<li>可以调用 –help 和 -?来呼叫MySQL程序用以获取在线协助。</li>\n</ul>\n<h4 id=\"1-3-3-MySQL的历史\"><a href=\"#1-3-3-MySQL的历史\" class=\"headerlink\" title=\"1.3.3 MySQL的历史\"></a>1.3.3 MySQL的历史</h4><p>我们一开始想要用我们自己的快速，低级的引擎来使用mSQL数据库来连接我们的表。然而，经过了一些测试后，我们认为mSQL的速度和灵活性达不到我们的要求。这导致了我们的数据库的一个新的SQL接口，但是其API接口和mSQL几乎一样。该API设计为允许那些为mSQL编写的第三方代码可以很方便的移植以用于MySQL。</p>\n<p>MySQL得名于联合创建人Monty Widenius的女儿，My。</p>\n<p>MySQL的海豚（我们的logo）的名字是“Sakila”，这来自于“为海豚取名”的比赛中用户建议的庞大的名字列表里选择出来的。最后获胜的名字由来自非洲Swaziland， 一个名叫Ambrose Twebaze的开源软件开发者提供。据 Ambrose所说，这个女性化的名字Sakila出自 Swaziland 的当地语Siswati。Sakila也是坦桑尼亚的 Arusha 的一个城镇的名字，邻近 Ambrose 的原籍国乌干达。</p>\n<h3 id=\"1-4-MySQL8-0更新了什么\"><a href=\"#1-4-MySQL8-0更新了什么\" class=\"headerlink\" title=\"1.4 MySQL8.0更新了什么\"></a>1.4 MySQL8.0更新了什么</h3><p>这一节总结了在MySQL8.0中哪些被添加，启用，以及移除。随附的部分罗列了在MySQL8.0中已经被新增，启用，移除的选项和变量。详见 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/added-deprecated-removed.html\">章节1.5，“服务器，状态变量和选项在MySQL8.0中的添加，弃用和删除”</a>。</p>\n<span id=\"more\"></span>\n<p><strong>MySQL8.0新增的特性</strong></p>\n<p>以下特性被加入到MySQL8.0中：</p>\n<ul>\n<li><p><strong>数据字典。</strong>MySQL现在合并了一个可以存储数据库对象的事务化的数据字典。在之前的MySQL发行版中，数据字典存储在元数据文件和非事务的表。关于更多信息，详见<a href=\"https://dev.mysql.com/doc/refman/8.0/en/data-dictionary.html\">章节14，MySQL数据字典</a>。</p>\n</li>\n<li><p><strong>原子数据定义语句(原子DDL)。</strong>一个原子DDL语句包含了数据字典的升级，存储引擎的操作，以及将关联DDL操作的二进制日志写入到单独的原子事务中。要获取更多信息，详见<a href=\"https://dev.mysql.com/doc/refman/8.0/en/atomic-ddl.html\">章节13.1.1，“原子数据定义语句的支持”</a>。</p>\n</li>\n<li><p><strong>升级过程。</strong>在以前，安装了一个新版本的MySQL后，MySQL服务器会在下一次启动时自动升级数据字典表，在此之后，需要DBA在mysql的schema里手动调用 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/mysql-upgrade.html\"><strong>mysql_upgrade</strong></a> 去升级系统表，也包括在别的schema比如sys schema和user schema里面的对象。</p>\n<p>对于MySQL8.0.16来说，服务器会执行先前由 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/mysql-upgrade.html\"><strong>mysql_upgrade</strong></a> 控制的任务。在安装了新版本的MySQL之后，服务器会在下次升级时自动执行所有的升级任务，而不是依赖DBA去调用 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/mysql-upgrade.html\"><strong>mysql_upgrade</strong></a> 。而且，服务器会更新帮助表里面的内容（这是 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/mysql-upgrade.html\"><strong>mysql_upgrade</strong></a> 没有做的）。一个新的 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/server-options.html#option_mysqld_upgrade\"><code>--upgrade</code></a> 服务器参数为服务器如何自动执行数据字典和服务器升级的选项提供了控制。想要了解更多，详见<a href=\"https://dev.mysql.com/doc/refman/8.0/en/upgrading-what-is-upgraded.html\">章节2.11.3，MySQL的升级流程升级了什么</a>。</p>\n</li>\n<li><p><strong>安全和账户管理</strong>。增加下列增强的功能后，可以提高安全性以及增加DBA在账户管理方面的灵活性：</p>\n<ul>\n<li><p>在mysql系统数据库中的授权表现在属于InnoDB（事务型）表。以前它们是MyISAM（非事务型）表。授权表的存储引擎的变化是伴随账户管理语句变化的基础。以前一句命名多个用户的账户管理的语句（如 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/create-user.html\"><code>CREATE USER</code></a> 或 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/drop-user.html\"><code>DROP USER</code></a>) ，在其中一些用户命名失败的情况下也可以对别的用户命名成功。现在，每一个语句都是事务的，且要么所有的命名用户都成功，要么其中任何一个失败之后语句都会回滚并不发生任何效果。语句如果成功会被写入二进制表中，但是在失败时不会写入；在这种情况下，会发生回滚且没有任何变化发生。想要了解更多，详见<a href=\"https://dev.mysql.com/doc/refman/8.0/en/atomic-ddl.html\">13.1.1“原子数据定义语句的支持”</a>。</p>\n</li>\n<li><p>一个新的 <code>caching_sha2_password</code>  认证插件已经可用。类似于 <code>sha256_password</code>  插件， caching_sha2_password 实现了 SHA-256 的密码Hash，但是在连接时用缓存来解决延迟问题。它也支持更多的连接协议，而且不需要为了基于RAS密钥对的密码交换功能和OpenSSL进行连接。</p>\n<p> caching_sha2_password 和 sha256_password 的认证方式相比 mysql_native_password 插件提供了更多的安全加密方式，而且 caching_sha2_password 的性能比sha256_password更好。由于这些 caching_sha2_password 卓越的安全和性能的特点，现在已经成为首选的认证插件，而且也是默认的认证插件，而不是  <code>mysql_native_password</code> 。想要了解这种默认插件的变化对于服务器操作和服务器与客户端及连接器之间的兼容性的信息，详见 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/upgrading-from-previous-series.html#upgrade-caching-sha2-password\"> caching_sha2_password 作为首选的认证插件</a>。</p>\n</li>\n<li><p>MySQL如今支持角色，即权限集合的命名。角色可以被创建和删除。角色可以被授权和撤销权限。角色可以从用户账号中授权和删除。一个账户下的活跃的适用角色可以从账户里已授权的角色中选择，也可以在账户的登陆期间进行修改。想要了解更多信息，详见<a href=\"https://dev.mysql.com/doc/refman/8.0/en/roles.html\">6.2.10，使用角色</a>。</p>\n</li>\n<li><p>MySQL现在包含了用户账号目录的概念，根据系统和普通用户区分他们是否有 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_system-user\"><code>SYSTEM_USER</code></a> 权限。详见<a href=\"https://dev.mysql.com/doc/refman/8.0/en/account-categories.html\">6.2.11，账户目录</a>。</p>\n</li>\n<li><p>在以前，除非在某些schema里，否则不能授予一个全局的权限。现在只要设置 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_partial_revokes\"><code>partial_revokes</code></a>  系统参数为 enabled 就可以做到。详见<a href=\"https://dev.mysql.com/doc/refman/8.0/en/partial-revokes.html\">6.2.12，使用部分撤销的权限限制</a>。</p>\n</li>\n<li><p>授权语句拥有一个可以指定额外的权限信息的用户条件去用于语句执行。这种语法在SQL层面可见， 尽管其主要目的是使在部分撤销所施加的授予者特权限制的所有节点之间实现统一复制， 通过使这些限制出现在二进制日志中。</p>\n</li>\n<li><p>MySQL现在会保留历史密码信息，限制重复使用以前的密码。DBA可以要求一些数量的密码更改或者一段时间内不可以从以前的密码中选择。可以为全局和每个账户建立密码重新使用的策略。</p>\n<p>现在可以通过指定当前要被取代的密码来验证更改密码的操作。这可以让DBA去避免那些不能提供他们知道的当前密码的用户去修改密码。可以为全局或每个账户建立密码验证策略。</p>\n<p>账户现在允许使用双重验证，这使得在复杂的多服务器系统上可以无缝的提交分阶段的密码修改，而不需要停机。</p>\n<p>这些功能为DBA提供了对密码管理的完全掌控。关于更多信息，详见<a href=\"https://dev.mysql.com/doc/refman/8.0/en/password-management.html\">6.2.15，密码管理</a>。</p>\n</li>\n<li><p>MySQL现在支持FIPS模式，它使用OpenSSL编译，在运行时一个OpenSSL库和FIPS对象模式都是可用的。FIPS模式为密码相关操作强加了一些条件，比如对于可接受的加密方式的限制，或者对于密码长度的要求。详见<a href=\"https://dev.mysql.com/doc/refman/8.0/en/fips-mode.html\">6.5，FIPS支持</a>。</p>\n</li>\n<li><p> 服务器现在可以在运行时重新配置服务器用于新连接的SSL上下文。该功能可能会很有用，比如，在一个MySQL服务器运行太久而SSL证书过期，可以避免去重启该服务器。详见 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/using-encrypted-connections.html#using-encrypted-connections-server-side-runtime-configuration\">加密连接的服务器端运行时配置</a>。</p>\n</li>\n<li><p>OpenSSL1.1.1支持用于加密连接的TLS1.3协议，如果服务端和客户端都用OpenSSL或更高版本来编译，那么MySQL8.0.16和更高版本下也将支持TLS1.3协议。详见<a href=\"https://dev.mysql.com/doc/refman/8.0/en/encrypted-connection-protocols-ciphers.html\">6.3.2，加密连接TLS协议和密码</a>。</p>\n</li>\n<li><p>MySQL现在授予客户端在已命名的管道上用于windows尽量少的必要连接的访问控制。新的MySQL客户端软件可以不用任何额外配置打开命名管道连接。如果更早版本的客户端软件不能马上升级，那么新的 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_named_pipe_full_access_group\"><code>named_pipe_full_access_group</code></a>系统参数可以给予windows用户组必要的权限用于打开命名管道连接。完全访问权限的用户组的成员应该是暂时的且被限制的。</p>\n</li>\n</ul>\n</li>\n<li><p><strong>资源管理。</strong>MySQL现在支持资源组的创建和管理，并且允许跟服务器一起运行的线程分配给特定的组，以便线程根据组的可用的资源执行。组属性可以控制其资源，允许或者限制组内线程的资源消费。DBA可以根据不同的工作量来调整这些属性为合适的值。现在，CPU时间是可以管理的资源，其概念由”虚拟CPU”来表示，其包含了CPU内核，超线程，硬件线程等等。服务器在启动时决定有多少虚拟CPU可用，并且拥有相应权限的数据库管理员可以将这些CPU与资源组关联并分配线程给组。要了解更多信息，详见<a href=\"https://dev.mysql.com/doc/refman/8.0/en/resource-groups.html\">8.12.5，资源组</a>。</p>\n</li>\n<li><p><strong>表加密管理。</strong></p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p><a href=\"https://dev.mysql.com/doc/refman/8.0/en/\">原文文档</a>  </p>\n<p><strong>声明</strong></p>\n<p>该文档纯粹自己手动翻译， 也许网上有更好的版本， 但是我这个属于自己学习的版本， 为了提高英语水平和对MySQL的理解， 后续不保证会持续更新，内容如有理解错误， 还请指正。</p>\n<h2 id=\"MySQL-8-0-参考手册\"><a href=\"#MySQL-8-0-参考手册\" class=\"headerlink\" title=\"MySQL 8.0 参考手册\"></a>MySQL 8.0 参考手册</h2><h3 id=\"包含MySQL-NDB集群8-0\"><a href=\"#包含MySQL-NDB集群8-0\" class=\"headerlink\" title=\"包含MySQL NDB集群8.0\"></a>包含MySQL NDB集群8.0</h3><h4 id=\"摘要\"><a href=\"#摘要\" class=\"headerlink\" title=\"摘要\"></a>摘要</h4><p>这是一份MySQL参考手册。 该文档分别记录了MySQL8.0到8.0.20，以及基于NDB8.0版本到NDB8.0.19版本的NDB集群发布版本。这份文档可能包括一些目前还没发布的MySQL版本的特性。想要了解哪些版本已经发布，请查看<a href=\"https://dev.mysql.com/doc/relnotes/mysql/8.0/en/\">MySQL8.0发布日志</a>。  </p>\n<p><strong>MySQL8.0特性</strong>。这份手册描述的特性并没有包含在所有版本的MySQL8.0中；这些特性可能不包含在你所购买的MySQL8.0版本中。如果你有任何问题是关于你的MySQL8.0版本中所包含的特性的，请参阅你的MySQL8.0许可协议或者联系你的oracle销售代表。  </p>\n<p>有关每个发布版本的变化，请查看<a href=\"https://dev.mysql.com/doc/relnotes/mysql/8.0/en/\">MySQL8.0发布日志</a>。  </p>\n<p>有关法律信息和许可信息，请查看<a href=\"https://dev.mysql.com/doc/refman/8.0/en/preface.html\">前言和法律声明</a>。  </p>\n<p>在使用MySQL中需要帮助，请访问<a href=\"http://forums.mysql.com/\">MySQL论坛</a>，你可以在那里向别的MySQL用户描述你的问题。  </p>\n<p>文档创建于：2019-10-16  </p>\n<h2 id=\"1-一般信息\"><a href=\"#1-一般信息\" class=\"headerlink\" title=\"1.  一般信息\"></a>1.  一般信息</h2><p>MySQL提供了非常快速的，多线程，多用户，和健壮的SQL数据库服务。MySQL服务用于关键服务，高负荷生产的系统以及嵌入大量部署的软件。Oracle是Oracle公司及其分支机构的注册商标。MySQL是Oracle公司及其分支机构的商标，未经Oracle正式的书面许可，客户不得使用。其他的名字可能是其各自所有者的商标。  </p>\n<p>MySQL软件具有双重许可。用户可以在GNU通用公共许可 (<a href=\"http://www.fsf.org/licenses/\">http://www.fsf.org/licenses/</a>)  条款下将MySQL软件作为开源软件产品使用，或者从Oracle购买一份标准的商业许可。访问 <a href=\"http://www.mysql.com/company/legal/licensing/\">http://www.mysql.com/company/legal/licensing/</a>  以获取更多关于授权政策的信息。  </p>\n<p>下面的列表描述了一些在本手册中需要特别关注的部分：  </p>\n<ul>\n<li><p>访问<a href=\"https://dev.mysql.com/doc/refman/8.0/en/features.html\">1.3.2章节，“MySql的主要特性”</a>，讨论关于MySQL数据库服务的功能。</p>\n</li>\n<li><p>访问<a href=\"https://dev.mysql.com/doc/refman/8.0/en/mysql-nutshell.html\">1.4章节，“MySQL8.0更新了什么”</a>，获取关于MySQL新功能的概况。访问<a href=\"https://dev.mysql.com/doc/relnotes/mysql/8.0/en/\">发布日志</a>，获取关于每个版本的更新信息。</p>\n</li>\n<li><p>访问<a href=\"https://dev.mysql.com/doc/refman/8.0/en/installing.html\">2章节，安装和升级MySQL</a>，获取安装介绍。访问<a href=\"https://dev.mysql.com/doc/refman/8.0/en/upgrading.html\">章节2.11</a>，获取MySQL升级说明。  </p>\n</li>\n<li><p>访问<a href=\"https://dev.mysql.com/doc/refman/8.0/en/tutorial.html\">第3章节，教程</a>，获取MySQL数据库服务的教程介绍。</p>\n</li>\n<li><p>访问 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/server-administration.html\">第5章节，MySQL服务管理</a>，获取关于MySQL服务的配置和管理的信息。</p>\n</li>\n<li><p>访问 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/security.html\">第6章节，安全</a>，获取关于MySQL的安全信息。</p>\n</li>\n<li><p>访问 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/replication.html\">第17章节，复制</a>，获取关于设置复制服务器的信息。</p>\n</li>\n<li><p>访问<a href=\"https://dev.mysql.com/doc/refman/8.0/en/mysql-enterprise.html\">第30章节，MySQL企业版</a>，获取关于MySQL企业版的信息，商用版的MySQL会发布一些进阶的功能和管理工具。</p>\n</li>\n<li><p>访问 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/faqs.html\">附录A，MySQL8.0常见问题</a>，获取关于MySQL服务及其功能的一些常见问题的答案。</p>\n</li>\n<li><p>访问<a href=\"https://dev.mysql.com/doc/relnotes/mysql/8.0/en/\">发布日志</a>，获取关于新特性和bug修复的发布信息。</p>\n<p><strong>重要</strong>  </p>\n<p>如果要报告问题或者bug，请按照<a href=\"https://dev.mysql.com/doc/refman/8.0/en/bug-reports.html\">章节17，“如何报告bug和问题”</a>的指示。如果你发现在MySQL中的一个敏感的安全性的bug，请立即发送邮件信息到&lt; <a href=\"mailto:secalert_us@oracle.com\">secalert_us@oracle.com</a> &gt;让我们知晓。例外：支持客户应该报告所有的问题，包括安全bug，发送给Oracle支持部门。  </p>\n</li>\n</ul>\n<h3 id=\"1-1-关于本手册\"><a href=\"#1-1-关于本手册\" class=\"headerlink\" title=\"1.1 关于本手册\"></a>1.1 关于本手册</h3><p>这份参考手册适用于MySQL数据库系统8.0版本到8.0.20版。在本文中关于和MySQL8.0镜像版本的区别参照了（8.0.x）的发行版本。查看<a href=\"https://dev.mysql.com/doc/refman/8.0/en/preface.html#legalnotice\">法律声明</a>，获取许可的信息。</p>\n<p>本手册不适用于MySQL软件的更早版本，因为在MySQL8.0和更早版本之间存在着很多功能及别的方面的不同。如果你正在使用MySQL软件的早期发布版本，请参考对应的手册。比如：<a href=\"https://dev.mysql.com/doc/refman/5.7/en/\">MySQL5.7操作手册</a>可以覆盖MySQL软件的5.7发布版本系列。</p>\n<p>由于这个手册是作为参考来使用，因此不会提供关于SQL或关联的数据库概念的一般介绍。同样也不会教你如何使用你的操作系统或命令行解释器。</p>\n<p>MySQL数据库软件在经历不断的发展，其手册同样也会不断的更新。最新版本的手册可以在 <a href=\"https://dev.mysql.com/doc/\">https://dev.mysql.com/doc/</a> 在线搜索到。其他格式也可以在这里获取，包括HTML，PDF和EPUB版本。</p>\n<p>参考手册的源文件由DocBook XML格式写成。其HTML版本和其他版本都自动生成，主要使用DocBook XSL样式表。关于DocBook的信息，详见 <a href=\"http://docbook.org/\">http://docbook.org/</a> 。</p>\n<p>MySQL的源代码包括内部文档，由Doxygen编写。已完成的Doxygen内容可以访问 <a href=\"https://dev.mysql.com/doc/index-other.html\">https://dev.mysql.com/doc/index-other.html</a> 。同样也可以按照 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/source-installation-doxygen.html\">章节2.9.10，“创建MySQL Doxygen文档内容”</a>的介绍从MySQL源分发创建本地的内容。</p>\n<p>如果你有使用MySQL的的问题，加入 <a href=\"https://mysqlcommunity.slack.com/\">MySQL开发者社区</a>，或者在我们的论坛提问；详见 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/forums.html\">章节1.6.2，“MySQL论坛的MySQL社区支持”</a>。如果你对本手册有补充或者更正的建议，请发送到 <a href=\"http://www.mysql.com/company/contact/%E3%80%82\">http://www.mysql.com/company/contact/。</a></p>\n<p>本手册最初由 David Axmark 和 Michael “Monty” Widenius 编写。主要由MySQL文档团队编写，成员包括 Chris Cole， Paul DuBois， Margaret Fisher， Edward Gilmore， Stefan Hinz， David Moss， Philip Olson， Daniel Price， Daniel So， 以及 Jon Stephens 。</p>\n<h3 id=\"1-2-排版和语法约定\"><a href=\"#1-2-排版和语法约定\" class=\"headerlink\" title=\"1.2  排版和语法约定\"></a>1.2  排版和语法约定</h3><p>本手册使用下列的排版约定：</p>\n<p>// TODO</p>\n<h3 id=\"1-3-MySQL数据库管理系统总览\"><a href=\"#1-3-MySQL数据库管理系统总览\" class=\"headerlink\" title=\"1.3 MySQL数据库管理系统总览\"></a>1.3 MySQL数据库管理系统总览</h3><h4 id=\"1-3-1-什么是MySQL？\"><a href=\"#1-3-1-什么是MySQL？\" class=\"headerlink\" title=\"1.3.1 什么是MySQL？\"></a>1.3.1 什么是MySQL？</h4><p>MySQL是最受欢迎的开源的SQL数据库管理系统，由Oracle公司开发，发布和支持。</p>\n<p><a href=\"http://www.mysql.com/\">MySQL官网</a>提供了MySQL软件的最新版本的信息。</p>\n<ul>\n<li><p>MySQL是一个数据库管理系统  </p>\n<p>数据库是数据的结构化集合。它可以是任何东西，从简单的购物清单，到一个图片集，或者公司网络中的海量信息。在一个计算机数据库上添加，访问和执行数据存储，你需要一个像MySQL服务器一样的数据库管理系统。由于计算机非常善于处理大量的数据，数据库管理系统就在计算机中扮演了一个中心角色，无论是作为一个独立的程序，还是别的应用的一部分。</p>\n</li>\n<li><p>MySQL数据库是关系型的</p>\n<p>一个关系型数据库将数据存储在不同的表中，而不是把所有的数据放在一个大的存储库中。数据库结构组织成物理文件以优化速度。具有对象（诸如数据库，表，视图，行和列）的逻辑模型提供了灵活的程序设计环境。你可以建立规则去管理不同字段之间的关系，比如一对一，一对多，唯一，必填或者选填，以及不同表之间的指向。数据库强制执行这些规则，所以一个良好设计的数据库，可以使你的程序避免看到不一致，重复，孤立，过期，或者缺失的数据。</p>\n<p>MySQL中的SQL代表“结构化查询语言”。SQL是用于访问数据库的最通用的标准化语言。基于你的程序设计环境，又可以直接输入SQL（比如，用于创建报表），用另一种语言把SQL注入到代码中，或者使用隐含SQL语法的特定语言的API。</p>\n<p>SQL由 ANSI/ISO 的SQL标准来定义。SQL的标准从1986年以来不断发展，存在多个不同的版本。在本手册中，“SQL-92”是指1992年发布的标准，“SQL:1999”是指在1999年发布的版本，以及“SQL:2003”，指现在的版本。我们在任何时用到“SQL标准”这个词时，都是指当前版本的SQL标准。</p>\n</li>\n<li><p>MySQL软件是开源的</p>\n<p>开源意味着对于任何人来说都可以使用和修改该软件。任何人都可以从网络上下载MySQL软件并且免费使用。你也可以按照你的意愿去学习和更改源代码以适应你的需求。MySQL软件使用<a href=\"http://www.fsf.org/licenses/\">GPL</a>)（通用公共许可），来定义你在不同情景下对软件能做的和不能做的事。如果你对GPL感到不适，或者想要将MySQL的代码注入到一个商用软件中，你可以从我们这里购买一份商用许可。访问<a href=\"http://www.mysql.com/company/legal/licensing/\">MySQL许可概览</a>以获取更多信息。</p>\n</li>\n<li><p>MySQL数据库服务快速，可靠，可拓展且易用</p>\n<p>如果你寻求的就是这个，你应该去尝试一下。MySQL服务可以在笔记本或者台式机上与其他应用，网络服务一起舒适的运行，只需要一点甚至无需额外的关注。如果你将整台机器都用于MySQL，你可以调整设置利用所有的内存，CPU功率，以及IO性能。MySQL同样可以扩大网络和机器的集群。</p>\n<p>MySQL服务最初开发用来比现有方式更快的处理数据，而且成功的应用在高要求的生产环境很多年。尽管经历了不断的发展，MySQL如今提供了一组丰富而有用的功能。其可连接性，速度以及安全性使得MySQL服务高度适合在网络上访问数据库。</p>\n</li>\n<li><p>MySQL服务运行于客户端/服务端或者嵌入式系统</p>\n<p>MySQL数据库软件是一个客户端/服务端系统，其包含了一个多线程的SQL服务器用于支持不同的后端，不同的客户端程序以及库，管理工具，以及大范围的应用程序接口。</p>\n<p>我们也提供MySQL服务作为一个嵌入的多线程库，你可以将其链接到你的应用以实现一个更小，更快，易于管理的独立产品。</p>\n</li>\n<li><p>大量捐赠的MySQL软件已经可用</p>\n<p>MySQL服务有一些使用的功能是由与我们密切合作的用户开发的。很有可能你最喜欢的应用或者语言由MySQL数据库服务支持。</p>\n</li>\n</ul>\n<p>“MySQL”的官方读法是“ My Ess Que Ell ”（而不是 “my sequel” ），但是我们不介意你把它读作“my sequel”或者别的当地的读法。</p>\n<h4 id=\"1-3-2-MySQL的主要功能\"><a href=\"#1-3-2-MySQL的主要功能\" class=\"headerlink\" title=\"1.3.2 MySQL的主要功能\"></a>1.3.2 MySQL的主要功能</h4><p>本节描述了一些MySQL数据库软件的重要特征。在大部分情况下，该路线图适用于所有版本的MySQL。想要知道在特定版本的MySQL中引入的功能，请在“In a Nutshell”章节查看对应的手册：</p>\n<ul>\n<li>MySQL8.0：<a href=\"https://dev.mysql.com/doc/refman/8.0/en/mysql-nutshell.html\">章节1.4，“MySQL8.0更新了什么”</a></li>\n<li>MySQL5.7：<a href=\"https://dev.mysql.com/doc/refman/5.7/en/mysql-nutshell.html\">MySQL5.7更新了什么</a></li>\n<li>MySQL5.6：<a href=\"https://dev.mysql.com/doc/refman/5.6/en/mysql-nutshell.html\">MySQL5.6更新了什么</a></li>\n<li>MySQL5.5：<a href=\"https://dev.mysql.com/doc/refman/5.5/en/mysql-nutshell.html\">MySQL5.5更新了什么</a></li>\n</ul>\n<p><strong>内部实现和可移植性</strong></p>\n<ul>\n<li>由C和C++实现</li>\n<li>通过了大规模的不同编译器的测试</li>\n<li>在多个不同的平台上运行。详见<a href=\"https://www.mysql.com/support/supportedplatforms/database.html\">https://www.mysql.com/support/supportedplatforms/database.html</a></li>\n<li>关于移植，MySQL5.5及以上的版本使用CMake命令。更早的版本使用GNU Automake，Autoconf和Libtool。</li>\n<li>经过了Purify（一个商用的内存泄漏探测器）以及Valgrind（一个GPL工具）的测试。（<a href=\"http://developer.kde.org/~sewardj/%EF%BC%89\">http://developer.kde.org/~sewardj/）</a></li>\n<li>使用具有独立模块的多层服务的设计。</li>\n<li>设计为使用核心线程的多线程方式，如果多核CPU可用，则可以很容易的被使用。</li>\n<li>提供了基于事务和非事务的存储引擎。</li>\n<li>使用索引压缩的非常快速的B-tree磁盘（MyISAM）</li>\n<li>设计为可以相对简单的增加另一个存储引擎。如果你想为一个内部的数据库提供一个SQL接口，这会非常有用。</li>\n<li>使用了非常快速的基于线程的内存分配系统。</li>\n<li>使用了一种优化了的内部循环的join来非常快速的执行join。</li>\n<li>实现了在内存的hash table，其作为临时表来使用。</li>\n<li>使用了一种尽可能快的高度优化的类库来实现SQL功能。在所有的查询初始化后一般就不会再有内存分配。</li>\n<li>为使用客户端/服务端环境提供了作为单独程序的服务，作为一个库可以嵌入到独立的应用中。这种应用可以单独使用或者在网络无法访问的环境中使用。</li>\n</ul>\n<p><strong>数据类型</strong></p>\n<ul>\n<li>很多的数据类型：带符号/无符号的整数类型，1、2、3、4以及8比特的长度， <a href=\"https://dev.mysql.com/doc/refman/8.0/en/floating-point-types.html\"><code>FLOAT</code></a>, <a href=\"https://dev.mysql.com/doc/refman/8.0/en/floating-point-types.html\"><code>DOUBLE</code></a>, <a href=\"https://dev.mysql.com/doc/refman/8.0/en/char.html\"><code>CHAR</code></a>, <a href=\"https://dev.mysql.com/doc/refman/8.0/en/char.html\"><code>VARCHAR</code></a>, <a href=\"https://dev.mysql.com/doc/refman/8.0/en/binary-varbinary.html\"><code>BINARY</code></a>, <a href=\"https://dev.mysql.com/doc/refman/8.0/en/binary-varbinary.html\"><code>VARBINARY</code></a>, <a href=\"https://dev.mysql.com/doc/refman/8.0/en/blob.html\"><code>TEXT</code></a>, <a href=\"https://dev.mysql.com/doc/refman/8.0/en/blob.html\"><code>BLOB</code></a>, <a href=\"https://dev.mysql.com/doc/refman/8.0/en/datetime.html\"><code>DATE</code></a>, <a href=\"https://dev.mysql.com/doc/refman/8.0/en/time.html\"><code>TIME</code></a>, <a href=\"https://dev.mysql.com/doc/refman/8.0/en/datetime.html\"><code>DATETIME</code></a>, <a href=\"https://dev.mysql.com/doc/refman/8.0/en/datetime.html\"><code>TIMESTAMP</code></a>, <a href=\"https://dev.mysql.com/doc/refman/8.0/en/year.html\"><code>YEAR</code></a>, <a href=\"https://dev.mysql.com/doc/refman/8.0/en/set.html\"><code>SET</code></a>, <a href=\"https://dev.mysql.com/doc/refman/8.0/en/enum.html\"><code>ENUM</code></a> ，以及OpenGIS的空间数据类型。详见<a href=\"https://dev.mysql.com/doc/refman/8.0/en/data-types.html\">章节11，数据类型</a>。</li>\n<li>固定长度和可变长度的字符串类型。</li>\n</ul>\n<p><strong>语句和功能</strong></p>\n<ul>\n<li><p>所有的操作符和功能支持都在Select列表和Where条件语句查询中。比如：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">SELECT</span> CONCAT(first_name, <span class=\"string\">&#x27; &#x27;</span>, last_name)</span><br><span class=\"line\">    <span class=\"operator\">-</span><span class=\"operator\">&gt;</span> <span class=\"keyword\">FROM</span> citizen</span><br><span class=\"line\">    <span class=\"operator\">-</span><span class=\"operator\">&gt;</span> <span class=\"keyword\">WHERE</span> income<span class=\"operator\">/</span>dependents <span class=\"operator\">&gt;</span> <span class=\"number\">10000</span> <span class=\"keyword\">AND</span> age <span class=\"operator\">&gt;</span> <span class=\"number\">30</span>;</span><br></pre></td></tr></table></figure></li>\n<li><p>完全支持SQL中的<code>Group By</code>和<code>Order By</code>条件。提供Group的功能的支持（ <a href=\"https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_count\"><code>COUNT()</code></a>, <a href=\"https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_avg\"><code>AVG()</code></a>, <a href=\"https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_std\"><code>STD()</code></a>, <a href=\"https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_sum\"><code>SUM()</code></a>, <a href=\"https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_max\"><code>MAX()</code></a>, <a href=\"https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_min\"><code>MIN()</code></a>, 和 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html#function_group-concat\"><code>GROUP_CONCAT()</code></a>) ）</p>\n</li>\n<li><p>完全支持拥有SQL和ODBC语法的 <code>LEFT OUTER JOIN</code> 和 <code>RIGHT OUTER JOIN</code>  </p>\n</li>\n<li><p>支持标准SQL要求的表和列的别名。</p>\n</li>\n<li><p>支持<code>Delete</code>，<code>Insert</code>，<code>Replace</code>，以及在<code>update</code>时返回修改的数量，或者返回匹配的行数，而不是在连接服务器时设置一个标识。</p>\n</li>\n<li><p>支持MySQL特定的<code>show</code>语句，用于返回数据库，存储引擎，表，以及索引的信息。支持 <code>INFORMATION_SCHEMA</code>数据库，实现自标准SQL。</p>\n</li>\n<li><p> <a href=\"https://dev.mysql.com/doc/refman/8.0/en/explain.html\"><code>EXPLAIN</code></a> 语句会展现优化器如何处理查询语句的。</p>\n</li>\n<li><p>函数名称独立于表明和列名。比如，<code>ABS</code>是一个合法的列明。唯一的限制是在调用函数时，在函数名和(之间不能存在空格。详见<a href=\"https://dev.mysql.com/doc/refman/8.0/en/keywords.html\">章节9.3，关键字和保留字</a>。</p>\n</li>\n<li><p>你可以在一个语句内指定不同数据库的表。</p>\n</li>\n</ul>\n<p><strong>安全性</strong></p>\n<ul>\n<li>权限和密码系统非常灵活和安全，并支持基于主机的认证。</li>\n<li>连接服务器时，通过对所有密码通信进行加密来实现密码安全。</li>\n</ul>\n<p><strong>可拓展性和限制</strong></p>\n<ul>\n<li>支持大型数据库。我们使用的MySQL服务拥有可以包含5000万条数据的数据库。我们也知道拥有20万张表和50亿条数据的MySQL服务器的用户。</li>\n<li>支持每张表最多64个索引。每个索引可以包含1-16列或者部分列。InnoDB表的索引最大宽度为767字节或者3072字节。详见 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/innodb-restrictions.html\">章节15.6.1.16，“InnoDB表的限制”</a>。MyISAM表的最大索引宽度为1000字节。详见 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/myisam-storage-engine.html\">章节16.2，“MyISAM存储引擎”</a>。可以使用Char，Varchar，Blob或者Text字段类型的前缀作为一个索引。</li>\n</ul>\n<p><strong>可连接性</strong></p>\n<ul>\n<li>客户端可以通过不同的协议连接MySQL服务：<ul>\n<li>客户端可以在任何平台上使用TCP/IP端口进行连接。</li>\n<li>在windows系统，如果服务端启用了 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_named_pipe\"><code>named_pipe</code></a> 系统参数进行启动，那客户端就可以使用name pipe进行连接。如果服务端启用了 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_shared_memory\"><code>shared_memory</code></a>  系统参数进行启动，那客户端也可以使用  <a href=\"https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_shared_memory\"><code>shared_memory</code></a>  方式进行连接。客户端可以通过使用  <a href=\"https://dev.mysql.com/doc/refman/8.0/en/connection-options.html#option_general_protocol\"><code>--protocol=memory</code></a> 选项来进行shared memory的连接。</li>\n<li>在unix系统，客户端可以使用Unix域的套接字文件来进行连接。</li>\n</ul>\n</li>\n<li>MySQL的客户端程序可以用不同的语言编写。一个C语言编写的客户端库可以用于C语言和C++编写的客户端，或者任何别的提供C语言绑定的语言。</li>\n<li> C, C++, Eiffel, Java, Perl, PHP, Python, Ruby, 和 Tcl 的API都是可用的，使得MySQL客户端可以被多种语言编写。详见<a href=\"https://dev.mysql.com/doc/refman/8.0/en/connectors-apis.html\">章节28，连接器和API</a>.</li>\n<li>连接器/ODBC（MyODBC）接口为那些使用ODBC（Open Datebase Connectivity）连接的客户端程序提供了MySQL支持。比如说，你可以使用MS Access去连接你的MySQL服务器。客户端可以运行在Windows或者Unix。连接器/ODBC源是可用的。和很多其他的功能一样，所有的ODBC2.5的功能都是被支持的。详见<a href=\"https://dev.mysql.com/doc/connector-odbc/en/\">MySQL 连接器/ODBC开发者指南</a>。</li>\n<li>连接器/J 接口为那些使用了JDBC连接器的java客户端程序提供了MySQL支持。客户端可以运行于Windows或者Unix。连接器/J 源是可用的。详见<a href=\"https://dev.mysql.com/doc/connector-j/5.1/en/\">MySQL连接器/J 5.1开发者指南</a>。</li>\n<li>MySQL连接器/NET 允许开发者创建一个要求安全和高性能数据连接MySQL的.NET应用程序。它实现了必须的ADO.NET的接口并融入进了ADO.NET的感知工具。开发者可以选择他们的.NET语言去构建应用。MySQL连接器/NET是一个完全托管的ADO.NET驱动，100%由纯粹的C#编写。详见<a href=\"https://dev.mysql.com/doc/connector-net/en/\">MySQL连接器/NET开发者指南</a>。</li>\n</ul>\n<p><strong>本地化</strong></p>\n<ul>\n<li>服务器可以提供各种语言的报错信息。详见<a href=\"https://dev.mysql.com/doc/refman/8.0/en/error-message-language.html\">章节10.12，设置错误提示的语言</a>。</li>\n<li>完全支持不同的字符集，包括 <code>latin1</code> (cp1252)，<code>german</code>，<code>big5</code>，<code>ujis</code> ，几种Unicode编码，以及别的。比如， Scandinavian 的字符 “<code>å</code>”, “<code>ä</code>” 和“<code>ö</code>” 可以用在表和列的名字中。</li>\n<li>所有的数据以选定的字符集存储。</li>\n<li>根据默认的字符集和校对规则进行排序和比较。当MySQL服务运行的时候也可以对该规则进行更改(详见<a href=\"https://dev.mysql.com/doc/refman/8.0/en/charset-server.html\">章节10.3.2，“服务器字符集和校验”</a>)。一个非常高级的排序例子，可以看下捷克的排序编码。MySQL支持多种可以在编译和运行阶段指定的字符集。</li>\n<li>服务器时区可以动态的改变，而且单独的客户端可以指定各自的时区。详见<a href=\"https://dev.mysql.com/doc/refman/8.0/en/time-zone-support.html\">章节5.1.13，MySQL服务器时区支持</a>。</li>\n</ul>\n<p><strong>客户端和工具</strong></p>\n<ul>\n<li>MySQL包含多个客户端和实用程序。包括命令行程序，比如 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/mysqldump.html\"><strong>mysqldump</strong></a> 和 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/mysqladmin.html\"><strong>mysqladmin</strong></a> ，以及图形化程序 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/workbench.html\">MySQL Workbench</a> 。</li>\n<li>MySQL服务器内置了对于SQL语句的检查，优化和表修复的支持。这些语句可以通过<a href=\"https://dev.mysql.com/doc/refman/8.0/en/mysqlcheck.html\">mysqlcheck</a>客户端从命令行使用。MySQL也包含了<a href=\"https://dev.mysql.com/doc/refman/8.0/en/myisamchk.html\">myisamchk</a>工具，一个非常快速的命令行工具，用于在MyISAM表提交这些操作。详见<a href=\"https://dev.mysql.com/doc/refman/8.0/en/programs.html\">章节4，MySQL程序</a>。</li>\n<li>可以调用 –help 和 -?来呼叫MySQL程序用以获取在线协助。</li>\n</ul>\n<h4 id=\"1-3-3-MySQL的历史\"><a href=\"#1-3-3-MySQL的历史\" class=\"headerlink\" title=\"1.3.3 MySQL的历史\"></a>1.3.3 MySQL的历史</h4><p>我们一开始想要用我们自己的快速，低级的引擎来使用mSQL数据库来连接我们的表。然而，经过了一些测试后，我们认为mSQL的速度和灵活性达不到我们的要求。这导致了我们的数据库的一个新的SQL接口，但是其API接口和mSQL几乎一样。该API设计为允许那些为mSQL编写的第三方代码可以很方便的移植以用于MySQL。</p>\n<p>MySQL得名于联合创建人Monty Widenius的女儿，My。</p>\n<p>MySQL的海豚（我们的logo）的名字是“Sakila”，这来自于“为海豚取名”的比赛中用户建议的庞大的名字列表里选择出来的。最后获胜的名字由来自非洲Swaziland， 一个名叫Ambrose Twebaze的开源软件开发者提供。据 Ambrose所说，这个女性化的名字Sakila出自 Swaziland 的当地语Siswati。Sakila也是坦桑尼亚的 Arusha 的一个城镇的名字，邻近 Ambrose 的原籍国乌干达。</p>\n<h3 id=\"1-4-MySQL8-0更新了什么\"><a href=\"#1-4-MySQL8-0更新了什么\" class=\"headerlink\" title=\"1.4 MySQL8.0更新了什么\"></a>1.4 MySQL8.0更新了什么</h3><p>这一节总结了在MySQL8.0中哪些被添加，启用，以及移除。随附的部分罗列了在MySQL8.0中已经被新增，启用，移除的选项和变量。详见 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/added-deprecated-removed.html\">章节1.5，“服务器，状态变量和选项在MySQL8.0中的添加，弃用和删除”</a>。</p>","more":"<p><strong>MySQL8.0新增的特性</strong></p>\n<p>以下特性被加入到MySQL8.0中：</p>\n<ul>\n<li><p><strong>数据字典。</strong>MySQL现在合并了一个可以存储数据库对象的事务化的数据字典。在之前的MySQL发行版中，数据字典存储在元数据文件和非事务的表。关于更多信息，详见<a href=\"https://dev.mysql.com/doc/refman/8.0/en/data-dictionary.html\">章节14，MySQL数据字典</a>。</p>\n</li>\n<li><p><strong>原子数据定义语句(原子DDL)。</strong>一个原子DDL语句包含了数据字典的升级，存储引擎的操作，以及将关联DDL操作的二进制日志写入到单独的原子事务中。要获取更多信息，详见<a href=\"https://dev.mysql.com/doc/refman/8.0/en/atomic-ddl.html\">章节13.1.1，“原子数据定义语句的支持”</a>。</p>\n</li>\n<li><p><strong>升级过程。</strong>在以前，安装了一个新版本的MySQL后，MySQL服务器会在下一次启动时自动升级数据字典表，在此之后，需要DBA在mysql的schema里手动调用 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/mysql-upgrade.html\"><strong>mysql_upgrade</strong></a> 去升级系统表，也包括在别的schema比如sys schema和user schema里面的对象。</p>\n<p>对于MySQL8.0.16来说，服务器会执行先前由 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/mysql-upgrade.html\"><strong>mysql_upgrade</strong></a> 控制的任务。在安装了新版本的MySQL之后，服务器会在下次升级时自动执行所有的升级任务，而不是依赖DBA去调用 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/mysql-upgrade.html\"><strong>mysql_upgrade</strong></a> 。而且，服务器会更新帮助表里面的内容（这是 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/mysql-upgrade.html\"><strong>mysql_upgrade</strong></a> 没有做的）。一个新的 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/server-options.html#option_mysqld_upgrade\"><code>--upgrade</code></a> 服务器参数为服务器如何自动执行数据字典和服务器升级的选项提供了控制。想要了解更多，详见<a href=\"https://dev.mysql.com/doc/refman/8.0/en/upgrading-what-is-upgraded.html\">章节2.11.3，MySQL的升级流程升级了什么</a>。</p>\n</li>\n<li><p><strong>安全和账户管理</strong>。增加下列增强的功能后，可以提高安全性以及增加DBA在账户管理方面的灵活性：</p>\n<ul>\n<li><p>在mysql系统数据库中的授权表现在属于InnoDB（事务型）表。以前它们是MyISAM（非事务型）表。授权表的存储引擎的变化是伴随账户管理语句变化的基础。以前一句命名多个用户的账户管理的语句（如 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/create-user.html\"><code>CREATE USER</code></a> 或 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/drop-user.html\"><code>DROP USER</code></a>) ，在其中一些用户命名失败的情况下也可以对别的用户命名成功。现在，每一个语句都是事务的，且要么所有的命名用户都成功，要么其中任何一个失败之后语句都会回滚并不发生任何效果。语句如果成功会被写入二进制表中，但是在失败时不会写入；在这种情况下，会发生回滚且没有任何变化发生。想要了解更多，详见<a href=\"https://dev.mysql.com/doc/refman/8.0/en/atomic-ddl.html\">13.1.1“原子数据定义语句的支持”</a>。</p>\n</li>\n<li><p>一个新的 <code>caching_sha2_password</code>  认证插件已经可用。类似于 <code>sha256_password</code>  插件， caching_sha2_password 实现了 SHA-256 的密码Hash，但是在连接时用缓存来解决延迟问题。它也支持更多的连接协议，而且不需要为了基于RAS密钥对的密码交换功能和OpenSSL进行连接。</p>\n<p> caching_sha2_password 和 sha256_password 的认证方式相比 mysql_native_password 插件提供了更多的安全加密方式，而且 caching_sha2_password 的性能比sha256_password更好。由于这些 caching_sha2_password 卓越的安全和性能的特点，现在已经成为首选的认证插件，而且也是默认的认证插件，而不是  <code>mysql_native_password</code> 。想要了解这种默认插件的变化对于服务器操作和服务器与客户端及连接器之间的兼容性的信息，详见 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/upgrading-from-previous-series.html#upgrade-caching-sha2-password\"> caching_sha2_password 作为首选的认证插件</a>。</p>\n</li>\n<li><p>MySQL如今支持角色，即权限集合的命名。角色可以被创建和删除。角色可以被授权和撤销权限。角色可以从用户账号中授权和删除。一个账户下的活跃的适用角色可以从账户里已授权的角色中选择，也可以在账户的登陆期间进行修改。想要了解更多信息，详见<a href=\"https://dev.mysql.com/doc/refman/8.0/en/roles.html\">6.2.10，使用角色</a>。</p>\n</li>\n<li><p>MySQL现在包含了用户账号目录的概念，根据系统和普通用户区分他们是否有 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_system-user\"><code>SYSTEM_USER</code></a> 权限。详见<a href=\"https://dev.mysql.com/doc/refman/8.0/en/account-categories.html\">6.2.11，账户目录</a>。</p>\n</li>\n<li><p>在以前，除非在某些schema里，否则不能授予一个全局的权限。现在只要设置 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_partial_revokes\"><code>partial_revokes</code></a>  系统参数为 enabled 就可以做到。详见<a href=\"https://dev.mysql.com/doc/refman/8.0/en/partial-revokes.html\">6.2.12，使用部分撤销的权限限制</a>。</p>\n</li>\n<li><p>授权语句拥有一个可以指定额外的权限信息的用户条件去用于语句执行。这种语法在SQL层面可见， 尽管其主要目的是使在部分撤销所施加的授予者特权限制的所有节点之间实现统一复制， 通过使这些限制出现在二进制日志中。</p>\n</li>\n<li><p>MySQL现在会保留历史密码信息，限制重复使用以前的密码。DBA可以要求一些数量的密码更改或者一段时间内不可以从以前的密码中选择。可以为全局和每个账户建立密码重新使用的策略。</p>\n<p>现在可以通过指定当前要被取代的密码来验证更改密码的操作。这可以让DBA去避免那些不能提供他们知道的当前密码的用户去修改密码。可以为全局或每个账户建立密码验证策略。</p>\n<p>账户现在允许使用双重验证，这使得在复杂的多服务器系统上可以无缝的提交分阶段的密码修改，而不需要停机。</p>\n<p>这些功能为DBA提供了对密码管理的完全掌控。关于更多信息，详见<a href=\"https://dev.mysql.com/doc/refman/8.0/en/password-management.html\">6.2.15，密码管理</a>。</p>\n</li>\n<li><p>MySQL现在支持FIPS模式，它使用OpenSSL编译，在运行时一个OpenSSL库和FIPS对象模式都是可用的。FIPS模式为密码相关操作强加了一些条件，比如对于可接受的加密方式的限制，或者对于密码长度的要求。详见<a href=\"https://dev.mysql.com/doc/refman/8.0/en/fips-mode.html\">6.5，FIPS支持</a>。</p>\n</li>\n<li><p> 服务器现在可以在运行时重新配置服务器用于新连接的SSL上下文。该功能可能会很有用，比如，在一个MySQL服务器运行太久而SSL证书过期，可以避免去重启该服务器。详见 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/using-encrypted-connections.html#using-encrypted-connections-server-side-runtime-configuration\">加密连接的服务器端运行时配置</a>。</p>\n</li>\n<li><p>OpenSSL1.1.1支持用于加密连接的TLS1.3协议，如果服务端和客户端都用OpenSSL或更高版本来编译，那么MySQL8.0.16和更高版本下也将支持TLS1.3协议。详见<a href=\"https://dev.mysql.com/doc/refman/8.0/en/encrypted-connection-protocols-ciphers.html\">6.3.2，加密连接TLS协议和密码</a>。</p>\n</li>\n<li><p>MySQL现在授予客户端在已命名的管道上用于windows尽量少的必要连接的访问控制。新的MySQL客户端软件可以不用任何额外配置打开命名管道连接。如果更早版本的客户端软件不能马上升级，那么新的 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_named_pipe_full_access_group\"><code>named_pipe_full_access_group</code></a>系统参数可以给予windows用户组必要的权限用于打开命名管道连接。完全访问权限的用户组的成员应该是暂时的且被限制的。</p>\n</li>\n</ul>\n</li>\n<li><p><strong>资源管理。</strong>MySQL现在支持资源组的创建和管理，并且允许跟服务器一起运行的线程分配给特定的组，以便线程根据组的可用的资源执行。组属性可以控制其资源，允许或者限制组内线程的资源消费。DBA可以根据不同的工作量来调整这些属性为合适的值。现在，CPU时间是可以管理的资源，其概念由”虚拟CPU”来表示，其包含了CPU内核，超线程，硬件线程等等。服务器在启动时决定有多少虚拟CPU可用，并且拥有相应权限的数据库管理员可以将这些CPU与资源组关联并分配线程给组。要了解更多信息，详见<a href=\"https://dev.mysql.com/doc/refman/8.0/en/resource-groups.html\">8.12.5，资源组</a>。</p>\n</li>\n<li><p><strong>表加密管理。</strong></p>\n</li>\n</ul>"}],"PostAsset":[{"_id":"source/_posts/ELK_FileBeats/1.png","slug":"1.png","post":"ckwadg4ms000073cf2qzub2hb","modified":0,"renderable":0},{"_id":"source/_posts/ELK_FileBeats/10.png","slug":"10.png","post":"ckwadg4ms000073cf2qzub2hb","modified":0,"renderable":0},{"_id":"source/_posts/ELK_FileBeats/11.png","slug":"11.png","post":"ckwadg4ms000073cf2qzub2hb","modified":0,"renderable":0},{"_id":"source/_posts/ELK_FileBeats/2.png","slug":"2.png","post":"ckwadg4ms000073cf2qzub2hb","modified":0,"renderable":0},{"_id":"source/_posts/ELK_FileBeats/3.png","slug":"3.png","post":"ckwadg4ms000073cf2qzub2hb","modified":0,"renderable":0},{"_id":"source/_posts/ELK_FileBeats/4.png","slug":"4.png","post":"ckwadg4ms000073cf2qzub2hb","modified":0,"renderable":0},{"_id":"source/_posts/ELK_FileBeats/5.png","slug":"5.png","post":"ckwadg4ms000073cf2qzub2hb","modified":0,"renderable":0},{"_id":"source/_posts/ELK_FileBeats/6.png","slug":"6.png","post":"ckwadg4ms000073cf2qzub2hb","modified":0,"renderable":0},{"_id":"source/_posts/ELK_FileBeats/7.png","slug":"7.png","post":"ckwadg4ms000073cf2qzub2hb","modified":0,"renderable":0},{"_id":"source/_posts/ELK_FileBeats/8.png","slug":"8.png","post":"ckwadg4ms000073cf2qzub2hb","modified":0,"renderable":0},{"_id":"source/_posts/ELK_FileBeats/9.png","slug":"9.png","post":"ckwadg4ms000073cf2qzub2hb","modified":0,"renderable":0},{"_id":"source/_posts/ELK日常维护相关/1.png","slug":"1.png","post":"ckwadg4mx000173cfdyyrdfic","modified":0,"renderable":0},{"_id":"source/_posts/ELK日常维护相关/2.png","slug":"2.png","post":"ckwadg4mx000173cfdyyrdfic","modified":0,"renderable":0},{"_id":"source/_posts/ELK日常维护相关/3.png","slug":"3.png","post":"ckwadg4mx000173cfdyyrdfic","modified":0,"renderable":0},{"_id":"source/_posts/OracleJDBC/1.png","slug":"1.png","post":"ckwadg4n0000473cf1vbqf9qp","modified":0,"renderable":0},{"_id":"source/_posts/OracleJDBC/2.png","slug":"2.png","post":"ckwadg4n0000473cf1vbqf9qp","modified":0,"renderable":0},{"_id":"source/_posts/OracleJDBC/3.png","slug":"3.png","post":"ckwadg4n0000473cf1vbqf9qp","modified":0,"renderable":0},{"_id":"source/_posts/OracleJDBC/4.png","slug":"4.png","post":"ckwadg4n0000473cf1vbqf9qp","modified":0,"renderable":0},{"_id":"source/_posts/Python数据爬虫实践-爬取历年东西部周最佳对比/1.png","slug":"1.png","post":"ckwadg4n1000573cf7btw85dx","modified":0,"renderable":0},{"_id":"source/_posts/Python数据爬虫实践-爬取历年东西部周最佳对比/10.png","slug":"10.png","post":"ckwadg4n1000573cf7btw85dx","modified":0,"renderable":0},{"_id":"source/_posts/Python数据爬虫实践-爬取历年东西部周最佳对比/11.png","slug":"11.png","post":"ckwadg4n1000573cf7btw85dx","modified":0,"renderable":0},{"_id":"source/_posts/Python数据爬虫实践-爬取历年东西部周最佳对比/2.png","slug":"2.png","post":"ckwadg4n1000573cf7btw85dx","modified":0,"renderable":0},{"_id":"source/_posts/Python数据爬虫实践-爬取历年东西部周最佳对比/3.png","slug":"3.png","post":"ckwadg4n1000573cf7btw85dx","modified":0,"renderable":0},{"_id":"source/_posts/Python数据爬虫实践-爬取历年东西部周最佳对比/4.png","slug":"4.png","post":"ckwadg4n1000573cf7btw85dx","modified":0,"renderable":0},{"_id":"source/_posts/Python数据爬虫实践-爬取历年东西部周最佳对比/5.png","slug":"5.png","post":"ckwadg4n1000573cf7btw85dx","modified":0,"renderable":0},{"_id":"source/_posts/Python数据爬虫实践-爬取历年东西部周最佳对比/6.png","slug":"6.png","post":"ckwadg4n1000573cf7btw85dx","modified":0,"renderable":0},{"_id":"source/_posts/Python数据爬虫实践-爬取历年东西部周最佳对比/7.png","slug":"7.png","post":"ckwadg4n1000573cf7btw85dx","modified":0,"renderable":0},{"_id":"source/_posts/Python数据爬虫实践-爬取历年东西部周最佳对比/8.png","slug":"8.png","post":"ckwadg4n1000573cf7btw85dx","modified":0,"renderable":0},{"_id":"source/_posts/Python数据爬虫实践-爬取历年东西部周最佳对比/9.png","slug":"9.png","post":"ckwadg4n1000573cf7btw85dx","modified":0,"renderable":0},{"_id":"source/_posts/azkaban简单搭建/1.png","slug":"1.png","post":"ckwadg4n2000673cf8ad5g5xu","modified":0,"renderable":0},{"_id":"source/_posts/azkaban简单搭建/2.png","slug":"2.png","post":"ckwadg4n2000673cf8ad5g5xu","modified":0,"renderable":0},{"_id":"source/_posts/hexo使用技巧/1.png","slug":"1.png","post":"ckwadg4n4000a73cf2fbt9o4z","modified":0,"renderable":0},{"_id":"source/_posts/hexo使用技巧/2.png","slug":"2.png","post":"ckwadg4n4000a73cf2fbt9o4z","modified":0,"renderable":0},{"_id":"source/_posts/hexo使用技巧/3.png","slug":"3.png","post":"ckwadg4n4000a73cf2fbt9o4z","modified":0,"renderable":0},{"_id":"source/_posts/hexo使用技巧/4.png","slug":"4.png","post":"ckwadg4n4000a73cf2fbt9o4z","modified":0,"renderable":0},{"_id":"source/_posts/hexo使用技巧/5.png","slug":"5.png","post":"ckwadg4n4000a73cf2fbt9o4z","modified":0,"renderable":0},{"_id":"source/_posts/hexo使用技巧/6.png","slug":"6.png","post":"ckwadg4n4000a73cf2fbt9o4z","modified":0,"renderable":0},{"_id":"source/_posts/hexo使用技巧/7.png","slug":"7.png","post":"ckwadg4n4000a73cf2fbt9o4z","modified":0,"renderable":0},{"_id":"source/_posts/hexo使用技巧/8.png","slug":"8.png","post":"ckwadg4n4000a73cf2fbt9o4z","modified":0,"renderable":0},{"_id":"source/_posts/hexo使用技巧/9.png","slug":"9.png","post":"ckwadg4n4000a73cf2fbt9o4z","modified":0,"renderable":0},{"_id":"source/_posts/jenkins简单搭建/1.png","slug":"1.png","post":"ckwadg4n6000b73cffpk791ga","modified":0,"renderable":0},{"_id":"source/_posts/jenkins简单搭建/2.png","slug":"2.png","post":"ckwadg4n6000b73cffpk791ga","modified":0,"renderable":0},{"_id":"source/_posts/利用hexo和github搭建个人博客/1.png","slug":"1.png","post":"ckwadg4nc000j73cf0ys10g58","modified":0,"renderable":0},{"_id":"source/_posts/利用hexo和github搭建个人博客/2.png","slug":"2.png","post":"ckwadg4nc000j73cf0ys10g58","modified":0,"renderable":0},{"_id":"source/_posts/利用hexo和github搭建个人博客/3.png","slug":"3.png","post":"ckwadg4nc000j73cf0ys10g58","modified":0,"renderable":0},{"_id":"source/_posts/利用hexo和github搭建个人博客/4.png","slug":"4.png","post":"ckwadg4nc000j73cf0ys10g58","modified":0,"renderable":0},{"_id":"source/_posts/利用hexo和github搭建个人博客/5.png","slug":"5.png","post":"ckwadg4nc000j73cf0ys10g58","modified":0,"renderable":0},{"_id":"source/_posts/记一次用代码分辨坑爹保险产品的经历/1.png","slug":"1.png","post":"ckwadg4nw002d73cf3w106wyu","modified":0,"renderable":0}],"PostCategory":[{"post_id":"ckwadg4nc000j73cf0ys10g58","category_id":"ckwadg4my000273cf6jqecknk","_id":"ckwadg4ng000r73cfgwrc73ar"},{"post_id":"ckwadg4nc000j73cf0ys10g58","category_id":"ckwadg4nb000h73cf1rsc0vro","_id":"ckwadg4nh000v73cf4vunduzn"},{"post_id":"ckwadg4ms000073cf2qzub2hb","category_id":"ckwadg4my000273cf6jqecknk","_id":"ckwadg4ni000y73cffpje48ko"},{"post_id":"ckwadg4ms000073cf2qzub2hb","category_id":"ckwadg4nb000h73cf1rsc0vro","_id":"ckwadg4nj001173cfba8oefqb"},{"post_id":"ckwadg4ne000o73cfgri1f0tc","category_id":"ckwadg4my000273cf6jqecknk","_id":"ckwadg4nl001373cf56bz0ahc"},{"post_id":"ckwadg4ne000o73cfgri1f0tc","category_id":"ckwadg4nb000h73cf1rsc0vro","_id":"ckwadg4nl001673cfauzggh58"},{"post_id":"ckwadg4n2000673cf8ad5g5xu","category_id":"ckwadg4my000273cf6jqecknk","_id":"ckwadg4nm001973cf5p413uj3"},{"post_id":"ckwadg4n2000673cf8ad5g5xu","category_id":"ckwadg4nb000h73cf1rsc0vro","_id":"ckwadg4nm001b73cfh7gifjku"},{"post_id":"ckwadg4n4000a73cf2fbt9o4z","category_id":"ckwadg4my000273cf6jqecknk","_id":"ckwadg4nn001d73cf8area1h8"},{"post_id":"ckwadg4n4000a73cf2fbt9o4z","category_id":"ckwadg4nb000h73cf1rsc0vro","_id":"ckwadg4nn001g73cf9ocwhgni"},{"post_id":"ckwadg4ni000x73cf6stegnvr","category_id":"ckwadg4my000273cf6jqecknk","_id":"ckwadg4nn001i73cfdibz8fpp"},{"post_id":"ckwadg4ni000x73cf6stegnvr","category_id":"ckwadg4nb000h73cf1rsc0vro","_id":"ckwadg4no001k73cfei3v0mh9"},{"post_id":"ckwadg4mx000173cfdyyrdfic","category_id":"ckwadg4my000273cf6jqecknk","_id":"ckwadg4no001m73cf1pltbq8n"},{"post_id":"ckwadg4mx000173cfdyyrdfic","category_id":"ckwadg4nb000h73cf1rsc0vro","_id":"ckwadg4np001p73cfhni4g0kn"},{"post_id":"ckwadg4n6000b73cffpk791ga","category_id":"ckwadg4my000273cf6jqecknk","_id":"ckwadg4np001s73cf1h8hhf79"},{"post_id":"ckwadg4n6000b73cffpk791ga","category_id":"ckwadg4nb000h73cf1rsc0vro","_id":"ckwadg4nq001u73cf0nei0v1q"},{"post_id":"ckwadg4n8000f73cf2rhx3duc","category_id":"ckwadg4my000273cf6jqecknk","_id":"ckwadg4nq001v73cf7epa5xd0"},{"post_id":"ckwadg4n8000f73cf2rhx3duc","category_id":"ckwadg4nm001a73cf10dm9h2z","_id":"ckwadg4nt001z73cfgriqeok8"},{"post_id":"ckwadg4n0000473cf1vbqf9qp","category_id":"ckwadg4my000273cf6jqecknk","_id":"ckwadg4nt002173cf6c2ybznb"},{"post_id":"ckwadg4n0000473cf1vbqf9qp","category_id":"ckwadg4nb000h73cf1rsc0vro","_id":"ckwadg4nt002373cfhsumeaa4"},{"post_id":"ckwadg4na000g73cfe4z3cvev","category_id":"ckwadg4my000273cf6jqecknk","_id":"ckwadg4nt002473cfb9757or3"},{"post_id":"ckwadg4na000g73cfe4z3cvev","category_id":"ckwadg4nb000h73cf1rsc0vro","_id":"ckwadg4nt002573cfa4lsh2ce"},{"post_id":"ckwadg4nd000l73cfdjlz9wty","category_id":"ckwadg4my000273cf6jqecknk","_id":"ckwadg4nt002773cf0gtm7hvn"},{"post_id":"ckwadg4nd000l73cfdjlz9wty","category_id":"ckwadg4np001n73cfazo66z40","_id":"ckwadg4nu002973cfdk9vftmm"},{"post_id":"ckwadg4nf000q73cfhinyfosh","category_id":"ckwadg4my000273cf6jqecknk","_id":"ckwadg4nu002a73cf6duu25gd"},{"post_id":"ckwadg4nf000q73cfhinyfosh","category_id":"ckwadg4nq001t73cfdaa0d4mq","_id":"ckwadg4nu002b73cfeir15ujp"},{"post_id":"ckwadg4nh000u73cf3ou83u3l","category_id":"ckwadg4nq001x73cf0eu282kx","_id":"ckwadg4nu002c73cfbch6hg55"},{"post_id":"ckwadg4nw002d73cf3w106wyu","category_id":"ckwadg4my000273cf6jqecknk","_id":"ckwadg4ny002h73cf2d2n14rb"},{"post_id":"ckwadg4nx002e73cfeq922f98","category_id":"ckwadg4my000273cf6jqecknk","_id":"ckwadg4ny002j73cf37vlfzml"},{"post_id":"ckwadg4nx002e73cfeq922f98","category_id":"ckwadg4np001n73cfazo66z40","_id":"ckwadg4ny002k73cfhsqubo96"}],"PostTag":[{"post_id":"ckwadg4ms000073cf2qzub2hb","tag_id":"ckwadg4mz000373cf2klvd3n7","_id":"ckwadg4n4000973cfbtz50esg"},{"post_id":"ckwadg4mx000173cfdyyrdfic","tag_id":"ckwadg4mz000373cf2klvd3n7","_id":"ckwadg4n8000e73cf26vi63in"},{"post_id":"ckwadg4n0000473cf1vbqf9qp","tag_id":"ckwadg4n8000d73cf018af3wt","_id":"ckwadg4nd000k73cf82m886f3"},{"post_id":"ckwadg4n1000573cf7btw85dx","tag_id":"ckwadg4nb000i73cf1fzn97cn","_id":"ckwadg4nf000p73cfgo5zgg1p"},{"post_id":"ckwadg4n2000673cf8ad5g5xu","tag_id":"ckwadg4ne000n73cf58t3a5ru","_id":"ckwadg4ni000w73cfdmzkdpn9"},{"post_id":"ckwadg4ni000x73cf6stegnvr","tag_id":"ckwadg4n8000d73cf018af3wt","_id":"ckwadg4nj001273cfcoy03aye"},{"post_id":"ckwadg4n4000a73cf2fbt9o4z","tag_id":"ckwadg4ng000t73cfad4q4rto","_id":"ckwadg4nl001573cf2jkc22mg"},{"post_id":"ckwadg4n6000b73cffpk791ga","tag_id":"ckwadg4nj001073cfaolnaq2p","_id":"ckwadg4nm001873cf59t6au2y"},{"post_id":"ckwadg4n8000f73cf2rhx3duc","tag_id":"ckwadg4nl001773cfa5ivcwl9","_id":"ckwadg4nn001e73cfe3mhaqjy"},{"post_id":"ckwadg4nc000j73cf0ys10g58","tag_id":"ckwadg4ng000t73cfad4q4rto","_id":"ckwadg4np001o73cf4vnb9qma"},{"post_id":"ckwadg4nc000j73cf0ys10g58","tag_id":"ckwadg4nn001h73cf3ff97hm9","_id":"ckwadg4np001q73cf9u0f7nvf"},{"post_id":"ckwadg4nd000l73cfdjlz9wty","tag_id":"ckwadg4no001l73cf6gg93y1w","_id":"ckwadg4ns001y73cfb0oy9twu"},{"post_id":"ckwadg4nd000l73cfdjlz9wty","tag_id":"ckwadg4np001r73cfbs9t4la9","_id":"ckwadg4nt002073cf7n2jepkb"},{"post_id":"ckwadg4nf000q73cfhinyfosh","tag_id":"ckwadg4np001r73cfbs9t4la9","_id":"ckwadg4nt002673cfg92s4t9j"},{"post_id":"ckwadg4nf000q73cfhinyfosh","tag_id":"ckwadg4nt002273cfe4ghdol1","_id":"ckwadg4nu002873cfa9r4dcbf"},{"post_id":"ckwadg4nw002d73cf3w106wyu","tag_id":"ckwadg4n8000d73cf018af3wt","_id":"ckwadg4ny002f73cf7ye29gwe"},{"post_id":"ckwadg4nx002e73cfeq922f98","tag_id":"ckwadg4no001l73cf6gg93y1w","_id":"ckwadg4ny002g73cfe7ri3hgd"},{"post_id":"ckwadg4nx002e73cfeq922f98","tag_id":"ckwadg4np001r73cfbs9t4la9","_id":"ckwadg4ny002i73cf35f8ca06"}],"Tag":[{"name":"elk","_id":"ckwadg4mz000373cf2klvd3n7"},{"name":"solved","_id":"ckwadg4n8000d73cf018af3wt"},{"name":"python","_id":"ckwadg4nb000i73cf1fzn97cn"},{"name":"azkaban","_id":"ckwadg4ne000n73cf58t3a5ru"},{"name":"hexo","_id":"ckwadg4ng000t73cfad4q4rto"},{"name":"jenkins","_id":"ckwadg4nj001073cfaolnaq2p"},{"name":"linux","_id":"ckwadg4nl001773cfa5ivcwl9"},{"name":"github","_id":"ckwadg4nn001h73cf3ff97hm9"},{"name":"mysql","_id":"ckwadg4no001l73cf6gg93y1w"},{"name":"translate","_id":"ckwadg4np001r73cfbs9t4la9"},{"name":"news","_id":"ckwadg4nt002273cfe4ghdol1"}]}}